Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.Motor_SetDirectionT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.Motor_SetDirectionT) refers to main.o(.bss.Global_u8Direction) for Global_u8Direction
    main.o(.text.Motor_SetDirectionT) refers to main.o(.data.Global_u8Speed) for Global_u8Speed
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_frontMove) for DCmotor_frontMove
    main.o(.text.Motor_SetDirectionT) refers to main.o(.bss.Global_u8BrakeStatus) for Global_u8BrakeStatus
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_backMove) for DCmotor_backMove
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_rightMove) for DCmotor_rightMove
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_leftMove) for DCmotor_leftMove
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_stop) for DCmotor_stop
    main.o(.ARM.exidx.text.Motor_SetDirectionT) refers to main.o(.text.Motor_SetDirectionT) for [Anonymous Symbol]
    main.o(.text.BLE_GetDirectionT) refers to main.o(.bss.Global_u8Direction) for Global_u8Direction
    main.o(.text.BLE_GetDirectionT) refers to ble.o(.text.HBLE_VGetKey) for HBLE_VGetKey
    main.o(.text.BLE_GetDirectionT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.BLE_GetDirectionT) refers to main.o(.text.BLE_GetDirectionT) for [Anonymous Symbol]
    main.o(.text.US_GetDistanceT) refers to us.o(.text.US_voidUltraSonicStart) for US_voidUltraSonicStart
    main.o(.text.US_GetDistanceT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.US_GetDistanceT) refers to main.o(.bss.US_GetDistanceT.Local_Dist) for US_GetDistanceT.Local_Dist
    main.o(.text.US_GetDistanceT) refers to us.o(.text.US_voidGetUSSensorDistanceTask) for US_voidGetUSSensorDistanceTask
    main.o(.text.US_GetDistanceT) refers to main.o(.bss.Global_u16Distance) for Global_u16Distance
    main.o(.text.US_GetDistanceT) refers to main.o(.data.Global_u8Speed) for Global_u8Speed
    main.o(.text.US_GetDistanceT) refers to main.o(.bss.Global_u8BrakeStatus) for Global_u8BrakeStatus
    main.o(.ARM.exidx.text.US_GetDistanceT) refers to main.o(.text.US_GetDistanceT) for [Anonymous Symbol]
    main.o(.text.CAN_SendDataT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.CAN_SendDataT) refers to main.o(.rodata..L__const.CAN_SendDataT.TConfig) for .L__const.CAN_SendDataT.TConfig
    main.o(.text.CAN_SendDataT) refers to main.o(.bss.Global_u8DataArr) for Global_u8DataArr
    main.o(.text.CAN_SendDataT) refers to can.o(.text.CAN_enuTransmit) for CAN_enuTransmit
    main.o(.ARM.exidx.text.CAN_SendDataT) refers to main.o(.text.CAN_SendDataT) for [Anonymous Symbol]
    main.o(.text.CAN_voidSysInit) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    main.o(.text.CAN_voidSysInit) refers to can.o(.text.CAN_enuCreateFilter) for CAN_enuCreateFilter
    main.o(.text.CAN_voidSysInit) refers to can.o(.text.CAN_enuInit) for CAN_enuInit
    main.o(.ARM.exidx.text.CAN_voidSysInit) refers to main.o(.text.CAN_voidSysInit) for [Anonymous Symbol]
    main.o(.text.main) refers to rcc.o(.text.RCC_voidEnablePeripheral) for RCC_voidEnablePeripheral
    main.o(.text.main) refers to main.o(.text.CAN_voidSysInit) for CAN_voidSysInit
    main.o(.text.main) refers to motor.o(.text.DCmotor_Init) for DCmotor_Init
    main.o(.text.main) refers to us.o(.text.US_voidInit) for US_voidInit
    main.o(.text.main) refers to ble.o(.text.HBLE_VInit) for HBLE_VInit
    main.o(.text.main) refers to main.o(.text.Motor_SetDirectionT) for Motor_SetDirectionT
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.CAN_SendDataT) for CAN_SendDataT
    main.o(.text.main) refers to main.o(.text.BLE_GetDirectionT) for BLE_GetDirectionT
    main.o(.text.main) refers to main.o(.text.US_GetDistanceT) for US_GetDistanceT
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.rodata..L__const.CAN_SendDataT.TConfig) refers to main.o(.bss.Global_u8DataArr) for Global_u8DataArr
    rcc.o(.ARM.exidx.text.RCC_voidInitSYSCLK) refers to rcc.o(.text.RCC_voidInitSYSCLK) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.RCC_voidEnablePeripheral) refers to rcc.o(.text.RCC_voidEnablePeripheral) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.RCC_voidDisablePeripheral) refers to rcc.o(.text.RCC_voidDisablePeripheral) for [Anonymous Symbol]
    gpio.o(.text.GPIO_init) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_init.LOC_ptr2GPIOx
    gpio.o(.text.GPIO_init) refers to gpio.o(.rodata..L__const.GPIO_init.LOC_pinsConfigurations) for .L__const.GPIO_init.LOC_pinsConfigurations
    gpio.o(.text.GPIO_init) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    gpio.o(.text.GPIO_init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    gpio.o(.ARM.exidx.text.GPIO_init) refers to gpio.o(.text.GPIO_init) for [Anonymous Symbol]
    gpio.o(.text.GPIO_configurePin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_configurePin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_configurePin) refers to gpio.o(.text.GPIO_configurePin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_writePin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_writePin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_writePin) refers to gpio.o(.text.GPIO_writePin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_writePort) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_writePort.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_writePort) refers to gpio.o(.text.GPIO_writePort) for [Anonymous Symbol]
    gpio.o(.text.GPIO_readPin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_readPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_readPin) refers to gpio.o(.text.GPIO_readPin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_readPort) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_readPort.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_readPort) refers to gpio.o(.text.GPIO_readPort) for [Anonymous Symbol]
    gpio.o(.text.GPIO_togglePin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_togglePin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_togglePin) refers to gpio.o(.text.GPIO_togglePin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_setPinFuction) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_setPinFuction.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_setPinFuction) refers to gpio.o(.text.GPIO_setPinFuction) for [Anonymous Symbol]
    gpio.o(.text.GPIO_lockPin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_lockPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_lockPin) refers to gpio.o(.text.GPIO_lockPin) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.NVIC_Init) refers to nvic.o(.text.NVIC_Init) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC__Venable_irq) refers to nvic.o(.text.MNVIC__Venable_irq) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC__Vdisable_irq) refers to nvic.o(.text.MNVIC__Vdisable_irq) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuEnablePerInterrupt) refers to nvic.o(.text.MNVIC_EnuEnablePerInterrupt) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuDisablePerInterrupt) refers to nvic.o(.text.MNVIC_EnuDisablePerInterrupt) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuSetPendingFlag) refers to nvic.o(.text.MNVIC_EnuSetPendingFlag) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuClearPendingFlag) refers to nvic.o(.text.MNVIC_EnuClearPendingFlag) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuActiveFlagStatus) refers to nvic.o(.text.MNVIC_EnuActiveFlagStatus) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuSetPriorityGroup) refers to nvic.o(.text.MNVIC_EnuSetPriorityGroup) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_VSystemReset) refers to nvic.o(.text.MNVIC_VSystemReset) for [Anonymous Symbol]
    pwm.o(.text.PWM_enu_Init) refers to rcc.o(.text.RCC_voidEnablePeripheral) for RCC_voidEnablePeripheral
    pwm.o(.text.PWM_enu_Init) refers to pwm.o(.data.test) for test
    pwm.o(.text.PWM_enu_Init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    pwm.o(.text.PWM_enu_Init) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    pwm.o(.ARM.exidx.text.PWM_enu_Init) refers to pwm.o(.text.PWM_enu_Init) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_enu_SetDutyCycle) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.MUSART_voidInit) refers to usart.o(.text.MUSART_voidInit) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.MUSART1_VidSendCharSync) refers to usart.o(.text.MUSART1_VidSendCharSync) for [Anonymous Symbol]
    usart.o(.text.MUSART1_VidSendStringSynch) refers to usart.o(.text.MUSART1_VidSendCharSync) for MUSART1_VidSendCharSync
    usart.o(.ARM.exidx.text.MUSART1_VidSendStringSynch) refers to usart.o(.text.MUSART1_VidSendStringSynch) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.MUSART1_u8RecCharSynch) refers to usart.o(.text.MUSART1_u8RecCharSynch) for [Anonymous Symbol]
    usart.o(.text.MUSART1_VidSetCallBack) refers to usart.o(.bss.MUSART1_CallBack) for MUSART1_CallBack
    usart.o(.ARM.exidx.text.MUSART1_VidSetCallBack) refers to usart.o(.text.MUSART1_VidSetCallBack) for [Anonymous Symbol]
    usart.o(.text.USART1_IRQHandler) refers to usart.o(.bss.MUSART1_CallBack) for MUSART1_CallBack
    usart.o(.ARM.exidx.text.USART1_IRQHandler) refers to usart.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    icu.o(.text.ICU_voidInitTimer) refers to icu.o(.data.Timer) for Timer
    icu.o(.text.ICU_voidInitTimer) refers to icu.o(.text.ICU_voidSetSensingEdge) for ICU_voidSetSensingEdge
    icu.o(.ARM.exidx.text.ICU_voidInitTimer) refers to icu.o(.text.ICU_voidInitTimer) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetSensingEdge) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetSensingEdge) refers to icu.o(.text.ICU_voidSetSensingEdge) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetCountTime) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetCountTime) refers to icu.o(.text.ICU_voidSetCountTime) for [Anonymous Symbol]
    icu.o(.text.ICU_voidEnableTimer) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidEnableTimer) refers to icu.o(.text.ICU_voidEnableTimer) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetICU_Count) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetICU_Count) refers to icu.o(.text.ICU_voidGetICU_Count) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetTimerOvStatus) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetTimerOvStatus) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for [Anonymous Symbol]
    icu.o(.text.ICU_voidClrTimerOvFlag) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidClrTimerOvFlag) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetTimerIcuStatus) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetTimerIcuStatus) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetArrTime) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetArrTime) refers to icu.o(.text.ICU_voidSetArrTime) for [Anonymous Symbol]
    icu.o(.text.ICU_voidClrTimerIcuFlag) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidClrTimerIcuFlag) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for [Anonymous Symbol]
    icu.o(.text.ICU_voidDisableTimer) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidDisableTimer) refers to icu.o(.text.ICU_voidDisableTimer) for [Anonymous Symbol]
    exti.o(.ARM.exidx.text.EXTI_enuEnableINT) refers to exti.o(.text.EXTI_enuEnableINT) for [Anonymous Symbol]
    exti.o(.ARM.exidx.text.EXTI_enuDisableINT) refers to exti.o(.text.EXTI_enuDisableINT) for [Anonymous Symbol]
    exti.o(.text.EXTI_enuCallBack) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti.o(.ARM.exidx.text.EXTI_enuCallBack) refers to exti.o(.text.EXTI_enuCallBack) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI0_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI0_IRQHandler) refers to exti_irq.o(.text.EXTI0_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI1_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI1_IRQHandler) refers to exti_irq.o(.text.EXTI1_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI2_TSC_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI2_TSC_IRQHandler) refers to exti_irq.o(.text.EXTI2_TSC_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI3_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI3_IRQHandler) refers to exti_irq.o(.text.EXTI3_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI4_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI4_IRQHandler) refers to exti_irq.o(.text.EXTI4_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI9_5_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI9_5_IRQHandler) refers to exti_irq.o(.text.EXTI9_5_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI15_10_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI15_10_IRQHandler) refers to exti_irq.o(.text.EXTI15_10_IRQHandler) for [Anonymous Symbol]
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input1PinBack) for input1PinBack
    motor.o(.text.DCmotor_Init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input2PinBack) for input2PinBack
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input1PinFront) for input1PinFront
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input2PinFront) for input2PinFront
    motor.o(.text.DCmotor_Init) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_Init) refers to pwm.o(.text.PWM_enu_Init) for PWM_enu_Init
    motor.o(.ARM.exidx.text.DCmotor_Init) refers to motor.o(.text.DCmotor_Init) for [Anonymous Symbol]
    motor.o(.text.DCmotor_frontMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_frontMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.DCmotor_frontMove) refers to motor.o(.text.DCmotor_frontMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_backMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_backMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.DCmotor_backMove) refers to motor.o(.text.DCmotor_backMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_rightMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_rightMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.DCmotor_rightMove) refers to motor.o(.text.DCmotor_rightMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_leftMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_leftMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.DCmotor_leftMove) refers to motor.o(.text.DCmotor_leftMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_stop) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_stop) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.DCmotor_stop) refers to motor.o(.text.DCmotor_stop) for [Anonymous Symbol]
    motor.o(.text.DCmotor1_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor1_) refers to motor.o(.text.DCmotor1_) for [Anonymous Symbol]
    motor.o(.text.DCmotor2_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor2_) refers to motor.o(.text.DCmotor2_) for [Anonymous Symbol]
    motor.o(.text.DCmotor3_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor3_) refers to motor.o(.text.DCmotor3_) for [Anonymous Symbol]
    motor.o(.text.DCmotor4_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor4_) refers to motor.o(.text.DCmotor4_) for [Anonymous Symbol]
    us.o(.text.US_voidInit) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    us.o(.text.US_voidInit) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    us.o(.text.US_voidInit) refers to icu.o(.text.ICU_voidInitTimer) for ICU_voidInitTimer
    us.o(.ARM.exidx.text.US_voidInit) refers to us.o(.text.US_voidInit) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistance) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistance) refers to us.o(.text.US_voidGetUSSensorDistance) for [Anonymous Symbol]
    us.o(.text.US_voidSetTrigger) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidDisableTimer) for ICU_voidDisableTimer
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.ARM.exidx.text.US_voidSetTrigger) refers to us.o(.text.US_voidSetTrigger) for [Anonymous Symbol]
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.ARM.exidx.text.US_voidSetICUTime) refers to us.o(.text.US_voidSetICUTime) for [Anonymous Symbol]
    us.o(.text.US_voidGetTimeStatus) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.ARM.exidx.text.US_voidGetTimeStatus) refers to us.o(.text.US_voidGetTimeStatus) for [Anonymous Symbol]
    us.o(.text.US_voidGetICU_Distance) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.text.US_voidGetICU_Distance) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.ARM.exidx.text.US_voidGetICU_Distance) refers to us.o(.text.US_voidGetICU_Distance) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.bss.US_voidGetUSSensorDistanceAsync.US_flag) for US_voidGetUSSensorDistanceAsync.US_flag
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidSetTrigger) for US_voidSetTrigger
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidSetICUTime) for US_voidSetICUTime
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.bss.US_voidGetUSSensorDistanceAsync.US_TimerStatus) for US_voidGetUSSensorDistanceAsync.US_TimerStatus
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidGetTimeStatus) for US_voidGetTimeStatus
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidGetICU_Distance) for US_voidGetICU_Distance
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidGetUSSensorDistanceAsync) for [Anonymous Symbol]
    us.o(.text.US_voidGetDistancePolling) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for ICU_voidGetTimerIcuStatus
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.ARM.exidx.text.US_voidGetDistancePolling) refers to us.o(.text.US_voidGetDistancePolling) for [Anonymous Symbol]
    us.o(.text.US_voidGetTimeICUStatus) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for ICU_voidGetTimerIcuStatus
    us.o(.ARM.exidx.text.US_voidGetTimeICUStatus) refers to us.o(.text.US_voidGetTimeICUStatus) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_flag) for US_voidGetUSSensorDistanceAsyncTask.US_flag
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidSetTrigger) for US_voidSetTrigger
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidSetICUTime) for US_voidSetICUTime
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_TimerStatus) for US_voidGetUSSensorDistanceAsyncTask.US_TimerStatus
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidGetTimeStatus) for US_voidGetTimeStatus
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_TimerICUStatus) for US_voidGetUSSensorDistanceAsyncTask.US_TimerICUStatus
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidGetTimeICUStatus) for US_voidGetTimeICUStatus
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidGetICU_Distance) for US_voidGetICU_Distance
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidGetUSSensorDistanceAsyncTask) for [Anonymous Symbol]
    us.o(.text.US_voidUltraSonicStart) refers to us.o(.text.US_voidSetTrigger) for US_voidSetTrigger
    us.o(.text.US_voidUltraSonicStart) refers to us.o(.text.US_voidSetICUTime) for US_voidSetICUTime
    us.o(.ARM.exidx.text.US_voidUltraSonicStart) refers to us.o(.text.US_voidUltraSonicStart) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerStatus) for US_voidGetUSSensorDistanceTask.US_TimerStatus
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to us.o(.text.US_voidGetTimeStatus) for US_voidGetTimeStatus
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerICUStatus) for US_voidGetUSSensorDistanceTask.US_TimerICUStatus
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to us.o(.text.US_voidGetTimeICUStatus) for US_voidGetTimeICUStatus
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to us.o(.text.US_voidGetICU_Distance) for US_voidGetICU_Distance
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceTask) refers to us.o(.text.US_voidGetUSSensorDistanceTask) for [Anonymous Symbol]
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART_PIN_TX) for UART_PIN_TX
    ble.o(.text.HBLE_VInit) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART_PIN_RX) for UART_PIN_RX
    ble.o(.text.HBLE_VInit) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART) for UART
    ble.o(.text.HBLE_VInit) refers to usart.o(.text.MUSART_voidInit) for MUSART_voidInit
    ble.o(.text.HBLE_VInit) refers to ble.o(.text.HBLE_VGetChar) for HBLE_VGetChar
    ble.o(.text.HBLE_VInit) refers to usart.o(.text.MUSART1_VidSetCallBack) for MUSART1_VidSetCallBack
    ble.o(.text.HBLE_VInit) refers to nvic.o(.text.MNVIC_EnuEnablePerInterrupt) for MNVIC_EnuEnablePerInterrupt
    ble.o(.ARM.exidx.text.HBLE_VInit) refers to ble.o(.text.HBLE_VInit) for [Anonymous Symbol]
    ble.o(.text.HBLE_VGetChar) refers to ble.o(.data.G_Key) for G_Key
    ble.o(.ARM.exidx.text.HBLE_VGetChar) refers to ble.o(.text.HBLE_VGetChar) for [Anonymous Symbol]
    ble.o(.text.HBLE_VGetKey) refers to ble.o(.data.G_Key) for G_Key
    ble.o(.ARM.exidx.text.HBLE_VGetKey) refers to ble.o(.text.HBLE_VGetKey) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuInit) refers to can.o(.text.CAN_enuInit) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuTransmit) refers to can.o(.text.CAN_enuTransmit) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuCreateFilter) refers to can.o(.text.CAN_enuCreateFilter) for [Anonymous Symbol]
    can.o(.text.CAN_enuRecieve) refers to can.o(.bss.ARR_Recieved_Data) for ARR_Recieved_Data
    can.o(.ARM.exidx.text.CAN_enuRecieve) refers to can.o(.text.CAN_enuRecieve) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuChangeMode) refers to can.o(.text.CAN_enuChangeMode) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuAbort) refers to can.o(.text.CAN_enuAbort) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuGoTestMode) refers to can.o(.text.CAN_enuGoTestMode) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init) refers to clib_arm.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace) for os_libspace
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace_id) for os_libspace_id
    clib_arm.o(.ARM.exidx.text.__user_perthread_libspace) refers to clib_arm.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    clib_arm.o(.text.os_kernel_is_active) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.ARM.exidx.text.os_kernel_is_active) refers to clib_arm.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_cb) for clib_mutex_cb
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    clib_arm.o(.ARM.exidx.text._mutex_initialize) refers to clib_arm.o(.text._mutex_initialize) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.is_thread_mode) for is_thread_mode
    clib_arm.o(.text._mutex_acquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    clib_arm.o(.ARM.exidx.text._mutex_acquire) refers to clib_arm.o(.text._mutex_acquire) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text.is_thread_mode) refers to clib_arm.o(.text.is_thread_mode) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.is_thread_mode) for is_thread_mode
    clib_arm.o(.text._mutex_release) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    clib_arm.o(.ARM.exidx.text._mutex_release) refers to clib_arm.o(.text._mutex_release) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    clib_arm.o(.text._mutex_free) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.ARM.exidx.text._mutex_free) refers to clib_arm.o(.text._mutex_free) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelInitialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.IRQ_Context) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.IRQ_Context) refers to cmsis_os2.o(.text.IRQ_Context) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to cmsis_os2.o(.rodata.str1.1) for .L.str
    cmsis_os2.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.SVC_Setup) for SVC_Setup
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.SVC_Setup) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    cmsis_os2.o(.ARM.exidx.text.SVC_Setup) refers to cmsis_os2.o(.text.SVC_Setup) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.AllocBlock) for AllocBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.CreateBlock) for CreateBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.AllocBlock) refers to cmsis_os2.o(.text.AllocBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.CreateBlock) refers to cmsis_os2.o(.text.CreateBlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.FreeBlock) for FreeBlock
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.FreeBlock) refers to cmsis_os2.o(.text.FreeBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB) for vApplicationGetIdleTaskMemory.Idle_TCB
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack) for vApplicationGetIdleTaskMemory.Idle_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB) for vApplicationGetTimerTaskMemory.Timer_TCB
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack) for vApplicationGetTimerTaskMemory.Timer_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.__NVIC_SetPriority) refers to os_systick.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    startup_stm32f303xe.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(RESET) refers to startup_stm32f303xe.o(STACK) for __initial_sp
    startup_stm32f303xe.o(RESET) refers to startup_stm32f303xe.o(.text) for Reset_Handler
    startup_stm32f303xe.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f303xe.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f303xe.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI0_IRQHandler) for EXTI0_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI1_IRQHandler) for EXTI1_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI2_TSC_IRQHandler) for EXTI2_TSC_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI3_IRQHandler) for EXTI3_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI4_IRQHandler) for EXTI4_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI9_5_IRQHandler) for EXTI9_5_IRQHandler
    startup_stm32f303xe.o(RESET) refers to usart.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI15_10_IRQHandler) for EXTI15_10_IRQHandler
    startup_stm32f303xe.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(.text) refers to system_stm32f3xx.o(.text.SystemInit) for SystemInit
    startup_stm32f303xe.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f303xe.o(.text) refers to startup_stm32f303xe.o(HEAP) for Heap_Mem
    startup_stm32f303xe.o(.text) refers to startup_stm32f303xe.o(STACK) for Stack_Mem
    system_stm32f3xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f3xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f3xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f3xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f3xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to clib_arm.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f303xe.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.Motor_SetDirectionT), (8 bytes).
    Removing main.o(.ARM.exidx.text.BLE_GetDirectionT), (8 bytes).
    Removing main.o(.ARM.exidx.text.US_GetDistanceT), (8 bytes).
    Removing main.o(.ARM.exidx.text.CAN_SendDataT), (8 bytes).
    Removing main.o(.ARM.exidx.text.CAN_voidSysInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.rodata.cst4), (8 bytes).
    Removing main.o(.rodata.cst16), (16 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing rcc.o(.text), (0 bytes).
    Removing rcc.o(.text.RCC_voidInitSYSCLK), (118 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidInitSYSCLK), (8 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidEnablePeripheral), (8 bytes).
    Removing rcc.o(.text.RCC_voidDisablePeripheral), (120 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidDisablePeripheral), (8 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.text.GPIO_init), (186 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_init), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_configurePin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_writePin), (8 bytes).
    Removing gpio.o(.text.GPIO_writePort), (112 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_writePort), (8 bytes).
    Removing gpio.o(.text.GPIO_readPin), (160 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_readPin), (8 bytes).
    Removing gpio.o(.text.GPIO_readPort), (126 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_readPort), (8 bytes).
    Removing gpio.o(.text.GPIO_togglePin), (142 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_togglePin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_setPinFuction), (8 bytes).
    Removing gpio.o(.text.GPIO_lockPin), (190 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_lockPin), (8 bytes).
    Removing gpio.o(.rodata..L__const.GPIO_init.LOC_pinsConfigurations), (128 bytes).
    Removing nvic.o(.text), (0 bytes).
    Removing nvic.o(.text.NVIC_Init), (20 bytes).
    Removing nvic.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing nvic.o(.text.MNVIC__Venable_irq), (4 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC__Venable_irq), (8 bytes).
    Removing nvic.o(.text.MNVIC__Vdisable_irq), (4 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC__Vdisable_irq), (8 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuEnablePerInterrupt), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuDisablePerInterrupt), (112 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuDisablePerInterrupt), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuSetPendingFlag), (112 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuSetPendingFlag), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuClearPendingFlag), (112 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuClearPendingFlag), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuActiveFlagStatus), (146 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuActiveFlagStatus), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuSetPriorityGroup), (94 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuSetPriorityGroup), (8 bytes).
    Removing nvic.o(.text.MNVIC_VSystemReset), (18 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_VSystemReset), (8 bytes).
    Removing pwm.o(.text), (0 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_enu_Init), (8 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_enu_SetDutyCycle), (8 bytes).
    Removing pwm.o(.rodata..L__const.PWM_enu_Init.Timx_BASE), (12 bytes).
    Removing pwm.o(.rodata..L__const.PWM_enu_SetDutyCycle.Timx_BASE), (12 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART_voidInit), (8 bytes).
    Removing usart.o(.text.MUSART1_VidSendCharSync), (62 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSendCharSync), (8 bytes).
    Removing usart.o(.text.MUSART1_VidSendStringSynch), (54 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSendStringSynch), (8 bytes).
    Removing usart.o(.text.MUSART1_u8RecCharSynch), (114 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_u8RecCharSynch), (8 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSetCallBack), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing icu.o(.text), (0 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidInitTimer), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetSensingEdge), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetCountTime), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidEnableTimer), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetICU_Count), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetTimerOvStatus), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidClrTimerOvFlag), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetTimerIcuStatus), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetArrTime), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidClrTimerIcuFlag), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidDisableTimer), (8 bytes).
    Removing exti.o(.text), (0 bytes).
    Removing exti.o(.text.EXTI_enuEnableINT), (208 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuEnableINT), (8 bytes).
    Removing exti.o(.text.EXTI_enuDisableINT), (62 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuDisableINT), (8 bytes).
    Removing exti.o(.text.EXTI_enuCallBack), (54 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuCallBack), (8 bytes).
    Removing exti_irq.o(.text), (0 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI0_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI1_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI2_TSC_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI3_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI4_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI9_5_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI15_10_IRQHandler), (8 bytes).
    Removing motor.o(.text), (0 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_Init), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_frontMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_backMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_rightMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_leftMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_stop), (8 bytes).
    Removing motor.o(.text.DCmotor1_), (30 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor1_), (8 bytes).
    Removing motor.o(.text.DCmotor2_), (30 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor2_), (8 bytes).
    Removing motor.o(.text.DCmotor3_), (30 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor3_), (8 bytes).
    Removing motor.o(.text.DCmotor4_), (34 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor4_), (8 bytes).
    Removing motor.o(.bss.state), (1 bytes).
    Removing us.o(.text), (0 bytes).
    Removing us.o(.ARM.exidx.text.US_voidInit), (8 bytes).
    Removing us.o(.text.US_voidGetUSSensorDistance), (324 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistance), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidSetTrigger), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidSetICUTime), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetTimeStatus), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetICU_Distance), (8 bytes).
    Removing us.o(.text.US_voidGetUSSensorDistanceAsync), (118 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsync), (8 bytes).
    Removing us.o(.text.US_voidGetDistancePolling), (344 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetDistancePolling), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetTimeICUStatus), (8 bytes).
    Removing us.o(.text.US_voidGetUSSensorDistanceAsyncTask), (204 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsyncTask), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidUltraSonicStart), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceTask), (8 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsync.US_flag), (1 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsync.US_TimerStatus), (1 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_flag), (1 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_TimerStatus), (1 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_TimerICUStatus), (1 bytes).
    Removing ble.o(.text), (0 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VInit), (8 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VGetChar), (8 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VGetKey), (8 bytes).
    Removing can.o(.text), (0 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuInit), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuTransmit), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuCreateFilter), (8 bytes).
    Removing can.o(.text.CAN_enuRecieve), (2178 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuRecieve), (8 bytes).
    Removing can.o(.text.CAN_enuChangeMode), (260 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuChangeMode), (8 bytes).
    Removing can.o(.text.CAN_enuAbort), (110 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuAbort), (8 bytes).
    Removing can.o(.text.CAN_enuGoTestMode), (222 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuGoTestMode), (8 bytes).
    Removing can.o(.bss.ARR_Recieved_Data), (448 bytes).
    Removing clib_arm.o(.text), (0 bytes).
    Removing clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing clib_arm.o(.text.__user_perthread_libspace), (186 bytes).
    Removing clib_arm.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.is_thread_mode), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing clib_arm.o(.bss.os_libspace), (480 bytes).
    Removing clib_arm.o(.bss.os_libspace_id), (16 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.IRQ_Context), (80 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.IRQ_Context), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (84 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (92 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.SVC_Setup), (14 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (132 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (118 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (342 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (16 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (80 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (54 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (90 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (176 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (182 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (286 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (96 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (376 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (130 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (142 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (234 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (254 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (154 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (122 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (268 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (166 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (136 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (214 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (196 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (192 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (98 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (436 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (250 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.AllocBlock), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.AllocBlock), (8 bytes).
    Removing cmsis_os2.o(.text.CreateBlock), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.CreateBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (306 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.FreeBlock), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (98 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (152 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.text.__NVIC_SetPriority), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing cmsis_os2.o(.rodata.str1.1), (17 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (126 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.__NVIC_SetPriority), (66 bytes).
    Removing os_systick.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (60 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (32 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).
    Removing system_stm32f3xx.o(.text), (0 bytes).
    Removing system_stm32f3xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f3xx.o(.text.SystemCoreClockUpdate), (282 bytes).
    Removing system_stm32f3xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f3xx.o(.rodata.AHBPrescTable), (16 bytes).
    Removing system_stm32f3xx.o(.rodata.APBPrescTable), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (46 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (50 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (246 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (224 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (300 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (70 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (36 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (32 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (76 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (210 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (194 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (320 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (198 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (254 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (244 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (422 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (292 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (226 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (284 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (420 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (552 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (418 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (148 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (16 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (58 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

623 unused section(s) (total 29290 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    BLE.c                                    0x00000000   Number         0  ble.o ABSOLUTE
    Can.c                                    0x00000000   Number         0  can.o ABSOLUTE
    EXTI.c                                   0x00000000   Number         0  exti.o ABSOLUTE
    EXTI_IRQ.c                               0x00000000   Number         0  exti_irq.o ABSOLUTE
    ICU.c                                    0x00000000   Number         0  icu.o ABSOLUTE
    NVIC.c                                   0x00000000   Number         0  nvic.o ABSOLUTE
    PWM.c                                    0x00000000   Number         0  pwm.o ABSOLUTE
    RCC.c                                    0x00000000   Number         0  rcc.o ABSOLUTE
    RTE/Device/STM32F303RETx/startup_stm32f303xe.s 0x00000000   Number         0  startup_stm32f303xe.o ABSOLUTE
    US.c                                     0x00000000   Number         0  us.o ABSOLUTE
    USART.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    clib_arm.c                               0x00000000   Number         0  clib_arm.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    motor.c                                  0x00000000   Number         0  motor.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_stm32f3xx.c                       0x00000000   Number         0  system_stm32f3xx.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      404  startup_stm32f303xe.o(RESET)
    !!!main                                  0x08000194   Section        8  __main.o(!!!main)
    !!!scatter                               0x0800019c   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x080001d0   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x080001ec   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000208   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800020a   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800020e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000210   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000212   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000214   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000214   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000214   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800021a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000222   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000226   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000226   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800022e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000230   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000230   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000234   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0800023c   Number         0  startup_stm32f303xe.o(.text)
    .text                                    0x0800023c   Section       64  startup_stm32f303xe.o(.text)
    .text                                    0x0800027c   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000306   Section       16  aeabi_memset4.o(.text)
    .text                                    0x08000316   Section       68  rt_memclr.o(.text)
    .text                                    0x0800035a   Section        0  heapauxi.o(.text)
    .text                                    0x08000360   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080003c4   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000412   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800045c   Section        0  exit.o(.text)
    .text                                    0x08000470   Section        8  libspace.o(.text)
    .text                                    0x08000478   Section        0  sys_exit.o(.text)
    .text                                    0x08000484   Section        2  use_no_semi.o(.text)
    .text                                    0x08000486   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000488   Section        0  main.o(.text.BLE_GetDirectionT)
    [Anonymous Symbol]                       0x080004a4   Section        0  main.o(.text.CAN_SendDataT)
    [Anonymous Symbol]                       0x080004ec   Section        0  can.o(.text.CAN_enuCreateFilter)
    [Anonymous Symbol]                       0x080023ec   Section        0  can.o(.text.CAN_enuInit)
    [Anonymous Symbol]                       0x08002598   Section        0  can.o(.text.CAN_enuTransmit)
    [Anonymous Symbol]                       0x080031a0   Section        0  main.o(.text.CAN_voidSysInit)
    [Anonymous Symbol]                       0x08003224   Section        0  motor.o(.text.DCmotor_Init)
    [Anonymous Symbol]                       0x08003290   Section        0  motor.o(.text.DCmotor_backMove)
    [Anonymous Symbol]                       0x080032d8   Section        0  motor.o(.text.DCmotor_frontMove)
    [Anonymous Symbol]                       0x08003320   Section        0  motor.o(.text.DCmotor_leftMove)
    [Anonymous Symbol]                       0x08003368   Section        0  motor.o(.text.DCmotor_rightMove)
    [Anonymous Symbol]                       0x080033b0   Section        0  motor.o(.text.DCmotor_stop)
    [Anonymous Symbol]                       0x080033f0   Section        0  exti_irq.o(.text.EXTI0_IRQHandler)
    [Anonymous Symbol]                       0x08003400   Section        0  exti_irq.o(.text.EXTI15_10_IRQHandler)
    [Anonymous Symbol]                       0x08003530   Section        0  exti_irq.o(.text.EXTI1_IRQHandler)
    [Anonymous Symbol]                       0x08003540   Section        0  exti_irq.o(.text.EXTI2_TSC_IRQHandler)
    [Anonymous Symbol]                       0x08003550   Section        0  exti_irq.o(.text.EXTI3_IRQHandler)
    [Anonymous Symbol]                       0x08003560   Section        0  exti_irq.o(.text.EXTI4_IRQHandler)
    [Anonymous Symbol]                       0x08003570   Section        0  exti_irq.o(.text.EXTI9_5_IRQHandler)
    [Anonymous Symbol]                       0x08003670   Section        0  gpio.o(.text.GPIO_configurePin)
    [Anonymous Symbol]                       0x08003834   Section        0  gpio.o(.text.GPIO_setPinFuction)
    [Anonymous Symbol]                       0x0800392c   Section        0  gpio.o(.text.GPIO_writePin)
    HBLE_VGetChar                            0x080039ed   Thumb Code    20  ble.o(.text.HBLE_VGetChar)
    [Anonymous Symbol]                       0x080039ec   Section        0  ble.o(.text.HBLE_VGetChar)
    [Anonymous Symbol]                       0x08003a00   Section        0  ble.o(.text.HBLE_VGetKey)
    [Anonymous Symbol]                       0x08003adc   Section        0  ble.o(.text.HBLE_VInit)
    [Anonymous Symbol]                       0x08003b34   Section        0  icu.o(.text.ICU_voidClrTimerIcuFlag)
    [Anonymous Symbol]                       0x08003b64   Section        0  icu.o(.text.ICU_voidClrTimerOvFlag)
    [Anonymous Symbol]                       0x08003b88   Section        0  icu.o(.text.ICU_voidDisableTimer)
    [Anonymous Symbol]                       0x08003bac   Section        0  icu.o(.text.ICU_voidEnableTimer)
    [Anonymous Symbol]                       0x08003bd0   Section        0  icu.o(.text.ICU_voidGetICU_Count)
    [Anonymous Symbol]                       0x08003c54   Section        0  icu.o(.text.ICU_voidGetTimerIcuStatus)
    [Anonymous Symbol]                       0x08003c88   Section        0  icu.o(.text.ICU_voidGetTimerOvStatus)
    [Anonymous Symbol]                       0x08003cb0   Section        0  icu.o(.text.ICU_voidInitTimer)
    [Anonymous Symbol]                       0x08003de0   Section        0  icu.o(.text.ICU_voidSetArrTime)
    [Anonymous Symbol]                       0x08003e00   Section        0  icu.o(.text.ICU_voidSetCountTime)
    [Anonymous Symbol]                       0x08003e20   Section        0  icu.o(.text.ICU_voidSetSensingEdge)
    [Anonymous Symbol]                       0x08003f14   Section        0  nvic.o(.text.MNVIC_EnuEnablePerInterrupt)
    [Anonymous Symbol]                       0x08003f84   Section        0  usart.o(.text.MUSART1_VidSetCallBack)
    [Anonymous Symbol]                       0x08003fa0   Section        0  usart.o(.text.MUSART_voidInit)
    [Anonymous Symbol]                       0x0800425c   Section        0  main.o(.text.Motor_SetDirectionT)
    [Anonymous Symbol]                       0x08004314   Section        0  pwm.o(.text.PWM_enu_Init)
    [Anonymous Symbol]                       0x080046ac   Section        0  pwm.o(.text.PWM_enu_SetDutyCycle)
    [Anonymous Symbol]                       0x080047b0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x08004810   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08004814   Section        0  rcc.o(.text.RCC_voidEnablePeripheral)
    [Anonymous Symbol]                       0x08004890   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x080048b0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x080048b4   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080048d4   Section        0  system_stm32f3xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x080048e8   Section        0  usart.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x08004924   Section        0  main.o(.text.US_GetDistanceT)
    [Anonymous Symbol]                       0x080049c0   Section        0  us.o(.text.US_voidGetICU_Distance)
    [Anonymous Symbol]                       0x08004a00   Section        0  us.o(.text.US_voidGetTimeICUStatus)
    [Anonymous Symbol]                       0x08004a14   Section        0  us.o(.text.US_voidGetTimeStatus)
    [Anonymous Symbol]                       0x08004a28   Section        0  us.o(.text.US_voidGetUSSensorDistanceTask)
    [Anonymous Symbol]                       0x08004aa8   Section        0  us.o(.text.US_voidInit)
    [Anonymous Symbol]                       0x08004b00   Section        0  us.o(.text.US_voidSetICUTime)
    [Anonymous Symbol]                       0x08004b34   Section        0  us.o(.text.US_voidSetTrigger)
    [Anonymous Symbol]                       0x08004be8   Section        0  us.o(.text.US_voidUltraSonicStart)
    __tagsym$$used.1                         0x08004bf4   Number         0  clib_arm.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08004bf4   Section        0  clib_arm.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08004c1c   Number         0  clib_arm.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08004c1c   Section        0  clib_arm.o(.text._mutex_free)
    __tagsym$$used.0                         0x08004c70   Number         0  clib_arm.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08004c70   Section        0  clib_arm.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x08004d18   Number         0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08004d18   Section        0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08004d44   Section        0  clib_arm.o(.text._platform_post_stackheap_init)
    is_thread_mode                           0x08004d49   Thumb Code    32  clib_arm.o(.text.is_thread_mode)
    [Anonymous Symbol]                       0x08004d48   Section        0  clib_arm.o(.text.is_thread_mode)
    [Anonymous Symbol]                       0x08004d68   Section        0  main.o(.text.main)
    os_kernel_is_active                      0x08004e55   Thumb Code    32  clib_arm.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08004e54   Section        0  clib_arm.o(.text.os_kernel_is_active)
    prvAddCurrentTaskToDelayedList           0x08004e75   Thumb Code   250  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08004e74   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x08004f71   Thumb Code   330  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08004f70   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x080050bd   Thumb Code   126  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x080050bc   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x0800513d   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x0800513c   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x08005199   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x08005198   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x080051dd   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x080051dc   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x080052a9   Thumb Code    60  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x080052a8   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x080052e5   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x080052e4   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x0800530d   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x0800530c   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x0800534d   Thumb Code   174  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x0800534c   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x080053fd   Thumb Code    36  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x080053fc   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x08005421   Thumb Code    44  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x08005420   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x0800544d   Thumb Code    72  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x0800544c   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x08005495   Thumb Code   230  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x08005494   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x0800557d   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x0800557c   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x0800560d   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x0800560c   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x080056d5   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x080056d4   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x0800575d   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x0800575c   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x08005785   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x08005784   Section        0  queue.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x080057b5   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x080057b4   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x080057dd   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x080057dc   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x08005831   Thumb Code   324  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x08005830   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x08005975   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x08005974   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x08005a11   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x08005a10   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x08005a45   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x08005a44   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x08005a81   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x08005a80   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x08005ac5   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x08005ac4   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x08005b19   Thumb Code    38  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08005b18   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x08005b41   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x08005b40   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x08005b61   Thumb Code   174  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08005b60   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08005c10   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08005d98   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x08005dc4   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x08005e24   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x08005e6c   Section        0  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x08005e98   Section        0  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x08005ec4   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x08005ed0   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08005f00   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08005f10   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x08005f7d   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08005f7c   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08005f90   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x08005fc0   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08005fe8   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08006060   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x080060a4   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x080060c8   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x0800612c   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08006178   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x0800619c   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x080061ac   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x080061d4   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x08006234   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x08006360   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08006424   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x08006434   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08006434   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08006538   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x0800658c   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x080065c8   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x080065f0   Section        0  queue.o(.text.xQueueCreateMutexStatic)
    [Anonymous Symbol]                       0x08006624   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x080066ac   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x08006718   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x080067d4   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x08006914   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x08006a50   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x08006bd8   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08006c74   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x08006d1c   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x08006d98   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x08006dd0   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x08006de4   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08006fcc   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x080070b4   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x08007204   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08007380   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x08007570   Section        0  timers.o(.text.xTimerCreateTimerTask)
    $v0                                      0x080075e8   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x080075e8   Section       26  fpinit.o(x$fpl$fpinit)
    .L__const.CAN_SendDataT.TConfig          0x08007604   Data          12  main.o(.rodata..L__const.CAN_SendDataT.TConfig)
    .L__const.GPIO_init.LOC_ptr2GPIOx        0x08007610   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_configurePin.LOC_ptr2GPIOx 0x08007630   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_writePin.LOC_ptr2GPIOx    0x08007650   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_writePort.LOC_ptr2GPIOx   0x08007670   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_readPin.LOC_ptr2GPIOx     0x08007690   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_readPort.LOC_ptr2GPIOx    0x080076b0   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_togglePin.LOC_ptr2GPIOx   0x080076d0   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_setPinFuction.LOC_ptr2GPIOx 0x080076f0   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_lockPin.LOC_ptr2GPIOx     0x08007710   Data          32  gpio.o(.rodata.cst32)
    .L.str.1                                 0x08007730   Data          14  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08007730   Section        0  main.o(.rodata.str1.1)
    .L.str.3                                 0x0800773e   Data          16  main.o(.rodata.str1.1)
    .L.str.2                                 0x0800774e   Data          18  main.o(.rodata.str1.1)
    .L.str                                   0x08007760   Data          20  main.o(.rodata.str1.1)
    .L.str                                   0x08007774   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08007774   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x08007779   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08007779   Section        0  timers.o(.rodata.str1.1)
    uxCriticalNesting                        0x2000003c   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x2000003c   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000040   Section       96  libspace.o(.bss)
    US_GetDistanceT.Local_Dist               0x200000e8   Data           2  main.o(.bss.US_GetDistanceT.Local_Dist)
    [Anonymous Symbol]                       0x200000e8   Section        0  main.o(.bss.US_GetDistanceT.Local_Dist)
    US_voidGetUSSensorDistanceTask.US_TimerICUStatus 0x200000ea   Data           1  us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerICUStatus)
    [Anonymous Symbol]                       0x200000ea   Section        0  us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerICUStatus)
    US_voidGetUSSensorDistanceTask.US_TimerStatus 0x200000eb   Data           1  us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerStatus)
    [Anonymous Symbol]                       0x200000eb   Section        0  us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerStatus)
    clib_mutex_cb                            0x200000ec   Data         400  clib_arm.o(.bss.clib_mutex_cb)
    [Anonymous Symbol]                       0x200000ec   Section        0  clib_arm.o(.bss.clib_mutex_cb)
    clib_mutex_id                            0x2000027c   Data          20  clib_arm.o(.bss.clib_mutex_id)
    [Anonymous Symbol]                       0x2000027c   Section        0  clib_arm.o(.bss.clib_mutex_id)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x20000290   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x20000290   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x200002e0   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x200002e0   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x20000330   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000330   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20000334   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20000338   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000338   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x2000033c   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x2000033c   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000340   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000340   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000344   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000344   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000348   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000348   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x2000034c   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x2000034c   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200007ac   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200007ac   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x200027ac   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200027ac   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200027b0   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200027b0   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x200027b4   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200027b4   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200027b8   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200027b8   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x200027bc   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x200027bc   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.Idle_Stack 0x200027c0   Data         512  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    [Anonymous Symbol]                       0x200027c0   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    vApplicationGetIdleTaskMemory.Idle_TCB   0x200029c0   Data          92  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    [Anonymous Symbol]                       0x200029c0   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    vApplicationGetTimerTaskMemory.Timer_Stack 0x20002a1c   Data         320  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    [Anonymous Symbol]                       0x20002a1c   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    vApplicationGetTimerTaskMemory.Timer_TCB 0x20002b5c   Data          92  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    [Anonymous Symbol]                       0x20002b5c   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    xActiveTimerList1                        0x20002bb8   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002bb8   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002bcc   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002bcc   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002be0   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002be0   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002bf4   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002bf4   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002c08   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002c08   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002c0c   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002c0c   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002c10   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002c10   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002c14   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002c14   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002c18   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002c18   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002c1c   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002c1c   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002c20   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002c20   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002c24   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002c24   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002c28   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002c28   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002c3c   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002c3c   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002c40   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002c40   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002c48   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002c48   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002c5c   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002c5c   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002c70   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002c70   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002c74   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002c74   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002c78   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002c78   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002c7c   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002c7c   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002c80   Data         512  startup_stm32f303xe.o(HEAP)
    HEAP                                     0x20002c80   Section      512  startup_stm32f303xe.o(HEAP)
    Stack_Mem                                0x20002e80   Data        1024  startup_stm32f303xe.o(STACK)
    STACK                                    0x20002e80   Section     1024  startup_stm32f303xe.o(STACK)
    __initial_sp                             0x20003280   Data           0  startup_stm32f303xe.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000194   Number         0  startup_stm32f303xe.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f303xe.o(RESET)
    __Vectors_End                            0x08000194   Data           0  startup_stm32f303xe.o(RESET)
    __main                                   0x08000195   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x0800019d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0800019d   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x0800019d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080001ab   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080001d1   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x080001ed   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000209   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800020b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000211   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000215   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000215   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000215   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800021b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000223   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000227   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000227   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800022f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000235   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0800023d   Thumb Code     8  startup_stm32f303xe.o(.text)
    NMI_Handler                              0x08000245   Thumb Code     2  startup_stm32f303xe.o(.text)
    HardFault_Handler                        0x08000247   Thumb Code     2  startup_stm32f303xe.o(.text)
    MemManage_Handler                        0x08000249   Thumb Code     2  startup_stm32f303xe.o(.text)
    BusFault_Handler                         0x0800024b   Thumb Code     2  startup_stm32f303xe.o(.text)
    UsageFault_Handler                       0x0800024d   Thumb Code     2  startup_stm32f303xe.o(.text)
    DebugMon_Handler                         0x08000251   Thumb Code     2  startup_stm32f303xe.o(.text)
    ADC1_2_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    ADC3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    ADC4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    CAN_RX1_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    CAN_SCE_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP1_2_3_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP4_5_6_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP7_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel2_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel3_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel4_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel5_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel6_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel7_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel1_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel2_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel3_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel4_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel5_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FLASH_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FMC_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FPU_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C1_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C1_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C2_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C2_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C3_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C3_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    PVD_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RCC_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RTC_Alarm_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RTC_WKUP_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI1_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI2_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TAMP_STAMP_IRQHandler                    0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_BRK_TIM15_IRQHandler                0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_CC_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_TRG_COM_TIM17_IRQHandler            0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_UP_TIM16_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_BRK_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_CC_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_TRG_COM_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_UP_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM2_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM6_DAC_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM7_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_BRK_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_CC_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_UP_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    UART4_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    UART5_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USART2_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USART3_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USBWakeUp_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USBWakeUp_RMP_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_HP_CAN_TX_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_HP_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_LP_CAN_RX0_IRQHandler                0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_LP_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    WWDG_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    __user_initial_stackheap                 0x08000259   Thumb Code     0  startup_stm32f303xe.o(.text)
    __aeabi_memcpy                           0x0800027d   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0800027d   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080002e3   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x08000307   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x08000307   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x08000317   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x08000317   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0800031b   Thumb Code    64  rt_memclr.o(.text)
    __use_two_region_memory                  0x0800035b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0800035d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0800035f   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x08000361   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000361   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000361   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080003a9   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x080003c5   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080003c5   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080003c5   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x080003c9   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x08000413   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800045d   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000471   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000471   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000479   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000485   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000485   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000487   Thumb Code     0  indicate_semi.o(.text)
    BLE_GetDirectionT                        0x08000489   Thumb Code    28  main.o(.text.BLE_GetDirectionT)
    CAN_SendDataT                            0x080004a5   Thumb Code    72  main.o(.text.CAN_SendDataT)
    CAN_enuCreateFilter                      0x080004ed   Thumb Code  7934  can.o(.text.CAN_enuCreateFilter)
    CAN_enuInit                              0x080023ed   Thumb Code   426  can.o(.text.CAN_enuInit)
    CAN_enuTransmit                          0x08002599   Thumb Code  3080  can.o(.text.CAN_enuTransmit)
    CAN_voidSysInit                          0x080031a1   Thumb Code   132  main.o(.text.CAN_voidSysInit)
    DCmotor_Init                             0x08003225   Thumb Code   108  motor.o(.text.DCmotor_Init)
    DCmotor_backMove                         0x08003291   Thumb Code    70  motor.o(.text.DCmotor_backMove)
    DCmotor_frontMove                        0x080032d9   Thumb Code    70  motor.o(.text.DCmotor_frontMove)
    DCmotor_leftMove                         0x08003321   Thumb Code    70  motor.o(.text.DCmotor_leftMove)
    DCmotor_rightMove                        0x08003369   Thumb Code    70  motor.o(.text.DCmotor_rightMove)
    DCmotor_stop                             0x080033b1   Thumb Code    62  motor.o(.text.DCmotor_stop)
    EXTI0_IRQHandler                         0x080033f1   Thumb Code    16  exti_irq.o(.text.EXTI0_IRQHandler)
    EXTI15_10_IRQHandler                     0x08003401   Thumb Code   304  exti_irq.o(.text.EXTI15_10_IRQHandler)
    EXTI1_IRQHandler                         0x08003531   Thumb Code    16  exti_irq.o(.text.EXTI1_IRQHandler)
    EXTI2_TSC_IRQHandler                     0x08003541   Thumb Code    16  exti_irq.o(.text.EXTI2_TSC_IRQHandler)
    EXTI3_IRQHandler                         0x08003551   Thumb Code    16  exti_irq.o(.text.EXTI3_IRQHandler)
    EXTI4_IRQHandler                         0x08003561   Thumb Code    16  exti_irq.o(.text.EXTI4_IRQHandler)
    EXTI9_5_IRQHandler                       0x08003571   Thumb Code   254  exti_irq.o(.text.EXTI9_5_IRQHandler)
    GPIO_configurePin                        0x08003671   Thumb Code   450  gpio.o(.text.GPIO_configurePin)
    GPIO_setPinFuction                       0x08003835   Thumb Code   248  gpio.o(.text.GPIO_setPinFuction)
    GPIO_writePin                            0x0800392d   Thumb Code   192  gpio.o(.text.GPIO_writePin)
    HBLE_VGetKey                             0x08003a01   Thumb Code   220  ble.o(.text.HBLE_VGetKey)
    HBLE_VInit                               0x08003add   Thumb Code    88  ble.o(.text.HBLE_VInit)
    ICU_voidClrTimerIcuFlag                  0x08003b35   Thumb Code    48  icu.o(.text.ICU_voidClrTimerIcuFlag)
    ICU_voidClrTimerOvFlag                   0x08003b65   Thumb Code    34  icu.o(.text.ICU_voidClrTimerOvFlag)
    ICU_voidDisableTimer                     0x08003b89   Thumb Code    34  icu.o(.text.ICU_voidDisableTimer)
    ICU_voidEnableTimer                      0x08003bad   Thumb Code    34  icu.o(.text.ICU_voidEnableTimer)
    ICU_voidGetICU_Count                     0x08003bd1   Thumb Code   132  icu.o(.text.ICU_voidGetICU_Count)
    ICU_voidGetTimerIcuStatus                0x08003c55   Thumb Code    50  icu.o(.text.ICU_voidGetTimerIcuStatus)
    ICU_voidGetTimerOvStatus                 0x08003c89   Thumb Code    38  icu.o(.text.ICU_voidGetTimerOvStatus)
    ICU_voidInitTimer                        0x08003cb1   Thumb Code   304  icu.o(.text.ICU_voidInitTimer)
    ICU_voidSetArrTime                       0x08003de1   Thumb Code    32  icu.o(.text.ICU_voidSetArrTime)
    ICU_voidSetCountTime                     0x08003e01   Thumb Code    32  icu.o(.text.ICU_voidSetCountTime)
    ICU_voidSetSensingEdge                   0x08003e21   Thumb Code   244  icu.o(.text.ICU_voidSetSensingEdge)
    MNVIC_EnuEnablePerInterrupt              0x08003f15   Thumb Code   112  nvic.o(.text.MNVIC_EnuEnablePerInterrupt)
    MUSART1_VidSetCallBack                   0x08003f85   Thumb Code    28  usart.o(.text.MUSART1_VidSetCallBack)
    MUSART_voidInit                          0x08003fa1   Thumb Code   700  usart.o(.text.MUSART_voidInit)
    Motor_SetDirectionT                      0x0800425d   Thumb Code   182  main.o(.text.Motor_SetDirectionT)
    PWM_enu_Init                             0x08004315   Thumb Code   920  pwm.o(.text.PWM_enu_Init)
    PWM_enu_SetDutyCycle                     0x080046ad   Thumb Code   252  pwm.o(.text.PWM_enu_SetDutyCycle)
    PendSV_Handler                           0x080047b1   Thumb Code   100  port.o(.text.PendSV_Handler)
    RCC_voidEnablePeripheral                 0x08004815   Thumb Code   120  rcc.o(.text.RCC_voidEnablePeripheral)
    SVC_Handler                              0x08004891   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x080048b5   Thumb Code    30  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x080048d5   Thumb Code    18  system_stm32f3xx.o(.text.SystemInit)
    USART1_IRQHandler                        0x080048e9   Thumb Code    58  usart.o(.text.USART1_IRQHandler)
    US_GetDistanceT                          0x08004925   Thumb Code   156  main.o(.text.US_GetDistanceT)
    US_voidGetICU_Distance                   0x080049c1   Thumb Code    64  us.o(.text.US_voidGetICU_Distance)
    US_voidGetTimeICUStatus                  0x08004a01   Thumb Code    20  us.o(.text.US_voidGetTimeICUStatus)
    US_voidGetTimeStatus                     0x08004a15   Thumb Code    18  us.o(.text.US_voidGetTimeStatus)
    US_voidGetUSSensorDistanceTask           0x08004a29   Thumb Code   128  us.o(.text.US_voidGetUSSensorDistanceTask)
    US_voidInit                              0x08004aa9   Thumb Code    88  us.o(.text.US_voidInit)
    US_voidSetICUTime                        0x08004b01   Thumb Code    50  us.o(.text.US_voidSetICUTime)
    US_voidSetTrigger                        0x08004b35   Thumb Code   178  us.o(.text.US_voidSetTrigger)
    US_voidUltraSonicStart                   0x08004be9   Thumb Code    12  us.o(.text.US_voidUltraSonicStart)
    _mutex_acquire                           0x08004bf5   Thumb Code    40  clib_arm.o(.text._mutex_acquire)
    _mutex_free                              0x08004c1d   Thumb Code    84  clib_arm.o(.text._mutex_free)
    _mutex_initialize                        0x08004c71   Thumb Code   168  clib_arm.o(.text._mutex_initialize)
    _mutex_release                           0x08004d19   Thumb Code    42  clib_arm.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08004d45   Thumb Code     2  clib_arm.o(.text._platform_post_stackheap_init)
    main                                     0x08004d69   Thumb Code   236  main.o(.text.main)
    pvPortMalloc                             0x08005c11   Thumb Code   390  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x08005d99   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x08005dc5   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x08005e25   Thumb Code    72  list.o(.text.uxListRemove)
    vApplicationGetIdleTaskMemory            0x08005e6d   Thumb Code    42  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x08005e99   Thumb Code    42  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x08005ec5   Thumb Code    10  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x08005ed1   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x08005f01   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x08005f11   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x08005f91   Thumb Code    48  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x08005fc1   Thumb Code    38  port.o(.text.vPortExitCritical)
    vPortFree                                0x08005fe9   Thumb Code   118  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08006061   Thumb Code    68  port.o(.text.vPortSetupTimerInterrupt)
    vQueueDelete                             0x080060a5   Thumb Code    34  queue.o(.text.vQueueDelete)
    vQueueWaitForMessageRestricted           0x080060c9   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x0800612d   Thumb Code    74  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x08006179   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x0800619d   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x080061ad   Thumb Code    38  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x080061d5   Thumb Code    96  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x08006235   Thumb Code   300  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x08006361   Thumb Code   196  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x08006425   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08006435   Thumb Code   260  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x08006539   Thumb Code    84  port.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x0800658d   Thumb Code    60  port.o(.text.xPortSysTickHandler)
    xQueueCreateMutex                        0x080065c9   Thumb Code    38  queue.o(.text.xQueueCreateMutex)
    xQueueCreateMutexStatic                  0x080065f1   Thumb Code    50  queue.o(.text.xQueueCreateMutexStatic)
    xQueueGenericCreate                      0x08006625   Thumb Code   134  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x080066ad   Thumb Code   108  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericReset                       0x08006719   Thumb Code   186  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x080067d5   Thumb Code   318  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x08006915   Thumb Code   316  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x08006a51   Thumb Code   392  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x08006bd9   Thumb Code   154  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x08006c75   Thumb Code   166  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x08006d1d   Thumb Code   122  tasks.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x08006d99   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x08006dd1   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x08006de5   Thumb Code   488  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08006fcd   Thumb Code   230  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x080070b5   Thumb Code   334  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x08007205   Thumb Code   380  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08007381   Thumb Code   496  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08007571   Thumb Code   120  timers.o(.text.xTimerCreateTimerTask)
    _fp_init                                 0x080075e9   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08007601   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08007601   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    uxTopUsedPriority                        0x08007784   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x08007788   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x080077a8   Number         0  anon$$obj.o(Region$$Table)
    G_Key                                    0x20000000   Data           1  ble.o(.data.G_Key)
    Global_u8Speed                           0x20000001   Data           1  main.o(.data.Global_u8Speed)
    SystemCoreClock                          0x20000004   Data           4  system_stm32f3xx.o(.data.SystemCoreClock)
    Timer                                    0x20000008   Data          12  icu.o(.data.Timer)
    UART                                     0x20000014   Data          10  ble.o(.data.UART)
    UART_PIN_RX                              0x2000001e   Data           4  ble.o(.data.UART_PIN_RX)
    UART_PIN_TX                              0x20000022   Data           4  ble.o(.data.UART_PIN_TX)
    input1PinBack                            0x20000026   Data           4  motor.o(.data.input1PinBack)
    input1PinFront                           0x2000002a   Data           4  motor.o(.data.input1PinFront)
    input2PinBack                            0x2000002e   Data           4  motor.o(.data.input2PinBack)
    input2PinFront                           0x20000032   Data           4  motor.o(.data.input2PinFront)
    test                                     0x20000036   Data           4  pwm.o(.data.test)
    __libspace_start                         0x20000040   Data          96  libspace.o(.bss)
    Call_Ptr                                 0x200000a0   Data          60  exti.o(.bss.Call_Ptr)
    __temporary_stack_top$libspace           0x200000a0   Data           0  libspace.o(.bss)
    Global_u16Distance                       0x200000dc   Data           2  main.o(.bss.Global_u16Distance)
    Global_u8BrakeStatus                     0x200000de   Data           1  main.o(.bss.Global_u8BrakeStatus)
    Global_u8DataArr                         0x200000df   Data           3  main.o(.bss.Global_u8DataArr)
    Global_u8Direction                       0x200000e2   Data           1  main.o(.bss.Global_u8Direction)
    MUSART1_CallBack                         0x200000e4   Data           4  usart.o(.bss.MUSART1_CallBack)
    pxCurrentTCB                             0x20000334   Data           4  tasks.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0800023d

  Load Region LR_1 (Base: 0x08000000, Size: 0x000077e8, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x000077a8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000194   Data   RO          540    RESET               startup_stm32f303xe.o
    0x08000194   0x08000194   0x00000008   Code   RO         1000  * !!!main             c_w.l(__main.o)
    0x0800019c   0x0800019c   0x00000034   Code   RO         1167    !!!scatter          c_w.l(__scatter.o)
    0x080001d0   0x080001d0   0x0000001a   Code   RO         1169    !!handler_copy      c_w.l(__scatter_copy.o)
    0x080001ea   0x080001ea   0x00000002   PAD
    0x080001ec   0x080001ec   0x0000001c   Code   RO         1171    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000208   0x08000208   0x00000002   Code   RO         1029    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800020a   0x0800020a   0x00000004   Code   RO         1035    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1038    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1040    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1043    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1045    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1047    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1050    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1052    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1054    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1056    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1058    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1060    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1062    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1064    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1066    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1068    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1070    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1074    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1076    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1078    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1080    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000002   Code   RO         1081    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000210   0x08000210   0x00000002   Code   RO         1103    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1118    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1120    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1123    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1126    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1128    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1131    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000002   Code   RO         1132    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000214   0x08000214   0x00000000   Code   RO         1002    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000214   0x08000214   0x00000000   Code   RO         1008    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000214   0x08000214   0x00000006   Code   RO         1020    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800021a   0x0800021a   0x00000008   Code   RO         1009    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000222   0x08000222   0x00000004   Code   RO         1011    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000226   0x08000226   0x00000000   Code   RO         1013    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000226   0x08000226   0x00000008   Code   RO         1014    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800022e   0x0800022e   0x00000002   Code   RO         1033    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000230   0x08000230   0x00000000   Code   RO         1083    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000230   0x08000230   0x00000004   Code   RO         1084    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000234   0x08000234   0x00000006   Code   RO         1085    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800023a   0x0800023a   0x00000002   PAD
    0x0800023c   0x0800023c   0x00000040   Code   RO          541  * .text               startup_stm32f303xe.o
    0x0800027c   0x0800027c   0x0000008a   Code   RO          992    .text               c_w.l(rt_memcpy_v6.o)
    0x08000306   0x08000306   0x00000010   Code   RO          994    .text               c_w.l(aeabi_memset4.o)
    0x08000316   0x08000316   0x00000044   Code   RO          996    .text               c_w.l(rt_memclr.o)
    0x0800035a   0x0800035a   0x00000006   Code   RO          998    .text               c_w.l(heapauxi.o)
    0x08000360   0x08000360   0x00000064   Code   RO         1003    .text               c_w.l(rt_memcpy_w.o)
    0x080003c4   0x080003c4   0x0000004e   Code   RO         1005    .text               c_w.l(rt_memclr_w.o)
    0x08000412   0x08000412   0x0000004a   Code   RO         1022    .text               c_w.l(sys_stackheap_outer.o)
    0x0800045c   0x0800045c   0x00000012   Code   RO         1024    .text               c_w.l(exit.o)
    0x0800046e   0x0800046e   0x00000002   PAD
    0x08000470   0x08000470   0x00000008   Code   RO         1030    .text               c_w.l(libspace.o)
    0x08000478   0x08000478   0x0000000c   Code   RO         1093    .text               c_w.l(sys_exit.o)
    0x08000484   0x08000484   0x00000002   Code   RO         1108    .text               c_w.l(use_no_semi.o)
    0x08000486   0x08000486   0x00000000   Code   RO         1110    .text               c_w.l(indicate_semi.o)
    0x08000486   0x08000486   0x00000002   PAD
    0x08000488   0x08000488   0x0000001c   Code   RO            4    .text.BLE_GetDirectionT  main.o
    0x080004a4   0x080004a4   0x00000048   Code   RO            8    .text.CAN_SendDataT  main.o
    0x080004ec   0x080004ec   0x00001efe   Code   RO          289    .text.CAN_enuCreateFilter  can.o
    0x080023ea   0x080023ea   0x00000002   PAD
    0x080023ec   0x080023ec   0x000001aa   Code   RO          285    .text.CAN_enuInit   can.o
    0x08002596   0x08002596   0x00000002   PAD
    0x08002598   0x08002598   0x00000c08   Code   RO          287    .text.CAN_enuTransmit  can.o
    0x080031a0   0x080031a0   0x00000084   Code   RO           10    .text.CAN_voidSysInit  main.o
    0x08003224   0x08003224   0x0000006c   Code   RO          198    .text.DCmotor_Init  motor.o
    0x08003290   0x08003290   0x00000046   Code   RO          202    .text.DCmotor_backMove  motor.o
    0x080032d6   0x080032d6   0x00000002   PAD
    0x080032d8   0x080032d8   0x00000046   Code   RO          200    .text.DCmotor_frontMove  motor.o
    0x0800331e   0x0800331e   0x00000002   PAD
    0x08003320   0x08003320   0x00000046   Code   RO          206    .text.DCmotor_leftMove  motor.o
    0x08003366   0x08003366   0x00000002   PAD
    0x08003368   0x08003368   0x00000046   Code   RO          204    .text.DCmotor_rightMove  motor.o
    0x080033ae   0x080033ae   0x00000002   PAD
    0x080033b0   0x080033b0   0x0000003e   Code   RO          208    .text.DCmotor_stop  motor.o
    0x080033ee   0x080033ee   0x00000002   PAD
    0x080033f0   0x080033f0   0x00000010   Code   RO          177    .text.EXTI0_IRQHandler  exti_irq.o
    0x08003400   0x08003400   0x00000130   Code   RO          189    .text.EXTI15_10_IRQHandler  exti_irq.o
    0x08003530   0x08003530   0x00000010   Code   RO          179    .text.EXTI1_IRQHandler  exti_irq.o
    0x08003540   0x08003540   0x00000010   Code   RO          181    .text.EXTI2_TSC_IRQHandler  exti_irq.o
    0x08003550   0x08003550   0x00000010   Code   RO          183    .text.EXTI3_IRQHandler  exti_irq.o
    0x08003560   0x08003560   0x00000010   Code   RO          185    .text.EXTI4_IRQHandler  exti_irq.o
    0x08003570   0x08003570   0x000000fe   Code   RO          187    .text.EXTI9_5_IRQHandler  exti_irq.o
    0x0800366e   0x0800366e   0x00000002   PAD
    0x08003670   0x08003670   0x000001c2   Code   RO           47    .text.GPIO_configurePin  gpio.o
    0x08003832   0x08003832   0x00000002   PAD
    0x08003834   0x08003834   0x000000f8   Code   RO           59    .text.GPIO_setPinFuction  gpio.o
    0x0800392c   0x0800392c   0x000000c0   Code   RO           49    .text.GPIO_writePin  gpio.o
    0x080039ec   0x080039ec   0x00000014   Code   RO          270    .text.HBLE_VGetChar  ble.o
    0x08003a00   0x08003a00   0x000000dc   Code   RO          272    .text.HBLE_VGetKey  ble.o
    0x08003adc   0x08003adc   0x00000058   Code   RO          268    .text.HBLE_VInit    ble.o
    0x08003b34   0x08003b34   0x00000030   Code   RO          151    .text.ICU_voidClrTimerIcuFlag  icu.o
    0x08003b64   0x08003b64   0x00000022   Code   RO          145    .text.ICU_voidClrTimerOvFlag  icu.o
    0x08003b86   0x08003b86   0x00000002   PAD
    0x08003b88   0x08003b88   0x00000022   Code   RO          153    .text.ICU_voidDisableTimer  icu.o
    0x08003baa   0x08003baa   0x00000002   PAD
    0x08003bac   0x08003bac   0x00000022   Code   RO          139    .text.ICU_voidEnableTimer  icu.o
    0x08003bce   0x08003bce   0x00000002   PAD
    0x08003bd0   0x08003bd0   0x00000084   Code   RO          141    .text.ICU_voidGetICU_Count  icu.o
    0x08003c54   0x08003c54   0x00000032   Code   RO          147    .text.ICU_voidGetTimerIcuStatus  icu.o
    0x08003c86   0x08003c86   0x00000002   PAD
    0x08003c88   0x08003c88   0x00000026   Code   RO          143    .text.ICU_voidGetTimerOvStatus  icu.o
    0x08003cae   0x08003cae   0x00000002   PAD
    0x08003cb0   0x08003cb0   0x00000130   Code   RO          133    .text.ICU_voidInitTimer  icu.o
    0x08003de0   0x08003de0   0x00000020   Code   RO          149    .text.ICU_voidSetArrTime  icu.o
    0x08003e00   0x08003e00   0x00000020   Code   RO          137    .text.ICU_voidSetCountTime  icu.o
    0x08003e20   0x08003e20   0x000000f4   Code   RO          135    .text.ICU_voidSetSensingEdge  icu.o
    0x08003f14   0x08003f14   0x00000070   Code   RO           78    .text.MNVIC_EnuEnablePerInterrupt  nvic.o
    0x08003f84   0x08003f84   0x0000001c   Code   RO          121    .text.MUSART1_VidSetCallBack  usart.o
    0x08003fa0   0x08003fa0   0x000002bc   Code   RO          113    .text.MUSART_voidInit  usart.o
    0x0800425c   0x0800425c   0x000000b6   Code   RO            2    .text.Motor_SetDirectionT  main.o
    0x08004312   0x08004312   0x00000002   PAD
    0x08004314   0x08004314   0x00000398   Code   RO           99    .text.PWM_enu_Init  pwm.o
    0x080046ac   0x080046ac   0x000000fc   Code   RO          101    .text.PWM_enu_SetDutyCycle  pwm.o
    0x080047a8   0x080047a8   0x00000008   PAD
    0x080047b0   0x080047b0   0x00000064   Code   RO          637    .text.PendSV_Handler  port.o
    0x08004814   0x08004814   0x00000078   Code   RO           34    .text.RCC_voidEnablePeripheral  rcc.o
    0x0800488c   0x0800488c   0x00000004   PAD
    0x08004890   0x08004890   0x00000024   Code   RO          621    .text.SVC_Handler   port.o
    0x080048b4   0x080048b4   0x0000001e   Code   RO          334    .text.SysTick_Handler  cmsis_os2.o
    0x080048d2   0x080048d2   0x00000002   PAD
    0x080048d4   0x080048d4   0x00000012   Code   RO          548    .text.SystemInit    system_stm32f3xx.o
    0x080048e6   0x080048e6   0x00000002   PAD
    0x080048e8   0x080048e8   0x0000003a   Code   RO          123    .text.USART1_IRQHandler  usart.o
    0x08004922   0x08004922   0x00000002   PAD
    0x08004924   0x08004924   0x0000009c   Code   RO            6    .text.US_GetDistanceT  main.o
    0x080049c0   0x080049c0   0x00000040   Code   RO          240    .text.US_voidGetICU_Distance  us.o
    0x08004a00   0x08004a00   0x00000014   Code   RO          246    .text.US_voidGetTimeICUStatus  us.o
    0x08004a14   0x08004a14   0x00000012   Code   RO          238    .text.US_voidGetTimeStatus  us.o
    0x08004a26   0x08004a26   0x00000002   PAD
    0x08004a28   0x08004a28   0x00000080   Code   RO          252    .text.US_voidGetUSSensorDistanceTask  us.o
    0x08004aa8   0x08004aa8   0x00000058   Code   RO          230    .text.US_voidInit   us.o
    0x08004b00   0x08004b00   0x00000032   Code   RO          236    .text.US_voidSetICUTime  us.o
    0x08004b32   0x08004b32   0x00000002   PAD
    0x08004b34   0x08004b34   0x000000b2   Code   RO          234    .text.US_voidSetTrigger  us.o
    0x08004be6   0x08004be6   0x00000002   PAD
    0x08004be8   0x08004be8   0x0000000c   Code   RO          250    .text.US_voidUltraSonicStart  us.o
    0x08004bf4   0x08004bf4   0x00000028   Code   RO          315    .text._mutex_acquire  clib_arm.o
    0x08004c1c   0x08004c1c   0x00000054   Code   RO          321    .text._mutex_free   clib_arm.o
    0x08004c70   0x08004c70   0x000000a8   Code   RO          313    .text._mutex_initialize  clib_arm.o
    0x08004d18   0x08004d18   0x0000002a   Code   RO          319    .text._mutex_release  clib_arm.o
    0x08004d42   0x08004d42   0x00000002   PAD
    0x08004d44   0x08004d44   0x00000002   Code   RO          307    .text._platform_post_stackheap_init  clib_arm.o
    0x08004d46   0x08004d46   0x00000002   PAD
    0x08004d48   0x08004d48   0x00000020   Code   RO          317    .text.is_thread_mode  clib_arm.o
    0x08004d68   0x08004d68   0x000000ec   Code   RO           12    .text.main          main.o
    0x08004e54   0x08004e54   0x00000020   Code   RO          311    .text.os_kernel_is_active  clib_arm.o
    0x08004e74   0x08004e74   0x000000fa   Code   RO          780    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x08004f6e   0x08004f6e   0x00000002   PAD
    0x08004f70   0x08004f70   0x0000014a   Code   RO          766    .text.prvAddNewTaskToReadyList  tasks.o
    0x080050ba   0x080050ba   0x00000002   PAD
    0x080050bc   0x080050bc   0x0000007e   Code   RO          918    .text.prvCheckForValidListAndQueue  timers.o
    0x0800513a   0x0800513a   0x00000002   PAD
    0x0800513c   0x0800513c   0x0000005a   Code   RO          884    .text.prvCheckTasksWaitingTermination  tasks.o
    0x08005196   0x08005196   0x00000002   PAD
    0x08005198   0x08005198   0x00000042   Code   RO          723    .text.prvCopyDataFromQueue  queue.o
    0x080051da   0x080051da   0x00000002   PAD
    0x080051dc   0x080051dc   0x000000cc   Code   RO          711    .text.prvCopyDataToQueue  queue.o
    0x080052a8   0x080052a8   0x0000003c   Code   RO          774    .text.prvDeleteTCB  tasks.o
    0x080052e4   0x080052e4   0x00000026   Code   RO          727    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x0800530a   0x0800530a   0x00000002   PAD
    0x0800530c   0x0800530c   0x00000040   Code   RO          958    .text.prvGetNextExpireTime  timers.o
    0x0800534c   0x0800534c   0x000000ae   Code   RO          651    .text.prvHeapInit   heap_4.o
    0x080053fa   0x080053fa   0x00000002   PAD
    0x080053fc   0x080053fc   0x00000024   Code   RO          806    .text.prvIdleTask   tasks.o
    0x08005420   0x08005420   0x0000002c   Code   RO          691    .text.prvInitialiseMutex  queue.o
    0x0800544c   0x0800544c   0x00000048   Code   RO          685    .text.prvInitialiseNewQueue  queue.o
    0x08005494   0x08005494   0x000000e6   Code   RO          764    .text.prvInitialiseNewTask  tasks.o
    0x0800557a   0x0800557a   0x00000002   PAD
    0x0800557c   0x0800557c   0x0000008e   Code   RO          882    .text.prvInitialiseTaskLists  tasks.o
    0x0800560a   0x0800560a   0x00000002   PAD
    0x0800560c   0x0800560c   0x000000c6   Code   RO          653    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x080056d2   0x080056d2   0x00000002   PAD
    0x080056d4   0x080056d4   0x00000086   Code   RO          972    .text.prvInsertTimerInActiveList  timers.o
    0x0800575a   0x0800575a   0x00000002   PAD
    0x0800575c   0x0800575c   0x00000028   Code   RO          725    .text.prvIsQueueEmpty  queue.o
    0x08005784   0x08005784   0x0000002e   Code   RO          713    .text.prvIsQueueFull  queue.o
    0x080057b2   0x080057b2   0x00000002   PAD
    0x080057b4   0x080057b4   0x00000028   Code   RO          629    .text.prvPortStartFirstTask  port.o
    0x080057dc   0x080057dc   0x00000054   Code   RO          966    .text.prvProcessExpiredTimer  timers.o
    0x08005830   0x08005830   0x00000144   Code   RO          962    .text.prvProcessReceivedCommands  timers.o
    0x08005974   0x08005974   0x0000009a   Code   RO          960    .text.prvProcessTimerOrBlockTask  timers.o
    0x08005a0e   0x08005a0e   0x00000002   PAD
    0x08005a10   0x08005a10   0x00000034   Code   RO          970    .text.prvReloadTimer  timers.o
    0x08005a44   0x08005a44   0x0000003c   Code   RO          772    .text.prvResetNextTaskUnblockTime  tasks.o
    0x08005a80   0x08005a80   0x00000044   Code   RO          964    .text.prvSampleTimeNow  timers.o
    0x08005ac4   0x08005ac4   0x00000052   Code   RO          968    .text.prvSwitchTimerLists  timers.o
    0x08005b16   0x08005b16   0x00000002   PAD
    0x08005b18   0x08005b18   0x00000026   Code   RO          619    .text.prvTaskExitError  port.o
    0x08005b3e   0x08005b3e   0x00000002   PAD
    0x08005b40   0x08005b40   0x0000001e   Code   RO          920    .text.prvTimerTask  timers.o
    0x08005b5e   0x08005b5e   0x00000002   PAD
    0x08005b60   0x08005b60   0x000000ae   Code   RO          715    .text.prvUnlockQueue  queue.o
    0x08005c0e   0x08005c0e   0x00000002   PAD
    0x08005c10   0x08005c10   0x00000186   Code   RO          649    .text.pvPortMalloc  heap_4.o
    0x08005d96   0x08005d96   0x00000002   PAD
    0x08005d98   0x08005d98   0x0000002c   Code   RO          866    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x08005dc4   0x08005dc4   0x0000005e   Code   RO          617    .text.pxPortInitialiseStack  port.o
    0x08005e22   0x08005e22   0x00000002   PAD
    0x08005e24   0x08005e24   0x00000048   Code   RO          608    .text.uxListRemove  list.o
    0x08005e6c   0x08005e6c   0x0000002a   Code   RO          492    .text.vApplicationGetIdleTaskMemory  cmsis_os2.o
    0x08005e96   0x08005e96   0x00000002   PAD
    0x08005e98   0x08005e98   0x0000002a   Code   RO          494    .text.vApplicationGetTimerTaskMemory  cmsis_os2.o
    0x08005ec2   0x08005ec2   0x00000002   PAD
    0x08005ec4   0x08005ec4   0x0000000a   Code   RO          490    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x08005ece   0x08005ece   0x00000002   PAD
    0x08005ed0   0x08005ed0   0x0000002e   Code   RO          600    .text.vListInitialise  list.o
    0x08005efe   0x08005efe   0x00000002   PAD
    0x08005f00   0x08005f00   0x0000000e   Code   RO          602    .text.vListInitialiseItem  list.o
    0x08005f0e   0x08005f0e   0x00000002   PAD
    0x08005f10   0x08005f10   0x0000006a   Code   RO          606    .text.vListInsert   list.o
    0x08005f7a   0x08005f7a   0x00000002   PAD
    0x08005f7c   0x08005f7c   0x00000014   Code   RO          627    .text.vPortEnableVFP  port.o
    0x08005f90   0x08005f90   0x00000030   Code   RO          633    .text.vPortEnterCritical  port.o
    0x08005fc0   0x08005fc0   0x00000026   Code   RO          635    .text.vPortExitCritical  port.o
    0x08005fe6   0x08005fe6   0x00000002   PAD
    0x08005fe8   0x08005fe8   0x00000076   Code   RO          655    .text.vPortFree     heap_4.o
    0x0800605e   0x0800605e   0x00000002   PAD
    0x08006060   0x08006060   0x00000044   Code   RO          625    .text.vPortSetupTimerInterrupt  port.o
    0x080060a4   0x080060a4   0x00000022   Code   RO          741    .text.vQueueDelete  queue.o
    0x080060c6   0x080060c6   0x00000002   PAD
    0x080060c8   0x080060c8   0x00000064   Code   RO          753    .text.vQueueWaitForMessageRestricted  queue.o
    0x0800612c   0x0800612c   0x0000004a   Code   RO          784    .text.vTaskDelay    tasks.o
    0x08006176   0x08006176   0x00000002   PAD
    0x08006178   0x08006178   0x00000024   Code   RO          838    .text.vTaskInternalSetTimeOutState  tasks.o
    0x0800619c   0x0800619c   0x0000000e   Code   RO          842    .text.vTaskMissedYield  tasks.o
    0x080061aa   0x080061aa   0x00000002   PAD
    0x080061ac   0x080061ac   0x00000026   Code   RO          826    .text.vTaskPlaceOnEventList  tasks.o
    0x080061d2   0x080061d2   0x00000002   PAD
    0x080061d4   0x080061d4   0x00000060   Code   RO          830    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x08006234   0x08006234   0x0000012c   Code   RO          862    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x08006360   0x08006360   0x000000c4   Code   RO          804    .text.vTaskStartScheduler  tasks.o
    0x08006424   0x08006424   0x00000010   Code   RO          778    .text.vTaskSuspendAll  tasks.o
    0x08006434   0x08006434   0x00000104   Code   RO          796    .text.vTaskSwitchContext  tasks.o
    0x08006538   0x08006538   0x00000054   Code   RO          623    .text.xPortStartScheduler  port.o
    0x0800658c   0x0800658c   0x0000003c   Code   RO          639    .text.xPortSysTickHandler  port.o
    0x080065c8   0x080065c8   0x00000026   Code   RO          689    .text.xQueueCreateMutex  queue.o
    0x080065ee   0x080065ee   0x00000002   PAD
    0x080065f0   0x080065f0   0x00000032   Code   RO          693    .text.xQueueCreateMutexStatic  queue.o
    0x08006622   0x08006622   0x00000002   PAD
    0x08006624   0x08006624   0x00000086   Code   RO          687    .text.xQueueGenericCreate  queue.o
    0x080066aa   0x080066aa   0x00000002   PAD
    0x080066ac   0x080066ac   0x0000006c   Code   RO          683    .text.xQueueGenericCreateStatic  queue.o
    0x08006718   0x08006718   0x000000ba   Code   RO          681    .text.xQueueGenericReset  queue.o
    0x080067d2   0x080067d2   0x00000002   PAD
    0x080067d4   0x080067d4   0x0000013e   Code   RO          701    .text.xQueueGenericSend  queue.o
    0x08006912   0x08006912   0x00000002   PAD
    0x08006914   0x08006914   0x0000013c   Code   RO          721    .text.xQueueReceive  queue.o
    0x08006a50   0x08006a50   0x00000188   Code   RO          705    .text.xQueueSemaphoreTake  queue.o
    0x08006bd8   0x08006bd8   0x0000009a   Code   RO          840    .text.xTaskCheckForTimeOut  tasks.o
    0x08006c72   0x08006c72   0x00000002   PAD
    0x08006c74   0x08006c74   0x000000a6   Code   RO          768    .text.xTaskCreate   tasks.o
    0x08006d1a   0x08006d1a   0x00000002   PAD
    0x08006d1c   0x08006d1c   0x0000007a   Code   RO          762    .text.xTaskCreateStatic  tasks.o
    0x08006d96   0x08006d96   0x00000002   PAD
    0x08006d98   0x08006d98   0x00000038   Code   RO          856    .text.xTaskGetSchedulerState  tasks.o
    0x08006dd0   0x08006dd0   0x00000014   Code   RO          812    .text.xTaskGetTickCount  tasks.o
    0x08006de4   0x08006de4   0x000001e8   Code   RO          810    .text.xTaskIncrementTick  tasks.o
    0x08006fcc   0x08006fcc   0x000000e6   Code   RO          860    .text.xTaskPriorityDisinherit  tasks.o
    0x080070b2   0x080070b2   0x00000002   PAD
    0x080070b4   0x080070b4   0x0000014e   Code   RO          858    .text.xTaskPriorityInherit  tasks.o
    0x08007202   0x08007202   0x00000002   PAD
    0x08007204   0x08007204   0x0000017c   Code   RO          832    .text.xTaskRemoveFromEventList  tasks.o
    0x08007380   0x08007380   0x000001f0   Code   RO          782    .text.xTaskResumeAll  tasks.o
    0x08007570   0x08007570   0x00000078   Code   RO          916    .text.xTimerCreateTimerTask  timers.o
    0x080075e8   0x080075e8   0x0000001a   Code   RO         1091    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08007602   0x08007602   0x00000002   PAD
    0x08007604   0x08007604   0x0000000c   Data   RO           20    .rodata..L__const.CAN_SendDataT.TConfig  main.o
    0x08007610   0x08007610   0x00000120   Data   RO           63    .rodata.cst32       gpio.o
    0x08007730   0x08007730   0x00000044   Data   RO           23    .rodata.str1.1      main.o
    0x08007774   0x08007774   0x00000005   Data   RO          902    .rodata.str1.1      tasks.o
    0x08007779   0x08007779   0x00000008   Data   RO          975    .rodata.str1.1      timers.o
    0x08007781   0x08007781   0x00000003   PAD
    0x08007784   0x08007784   0x00000004   Data   RO          887    .rodata.uxTopUsedPriority  tasks.o
    0x08007788   0x08007788   0x00000020   Data   RO         1166    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x080077a8, Size: 0x00000040, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x080077a8   0x00000001   Data   RW          274    .data.G_Key         ble.o
    0x20000001   0x080077a9   0x00000001   Data   RW           14    .data.Global_u8Speed  main.o
    0x20000002   0x080077aa   0x00000002   PAD
    0x20000004   0x080077ac   0x00000004   Data   RW          552    .data.SystemCoreClock  system_stm32f3xx.o
    0x20000008   0x080077b0   0x0000000c   Data   RW          155    .data.Timer         icu.o
    0x20000014   0x080077bc   0x0000000a   Data   RW          277    .data.UART          ble.o
    0x2000001e   0x080077c6   0x00000004   Data   RW          276    .data.UART_PIN_RX   ble.o
    0x20000022   0x080077ca   0x00000004   Data   RW          275    .data.UART_PIN_TX   ble.o
    0x20000026   0x080077ce   0x00000004   Data   RW          218    .data.input1PinBack  motor.o
    0x2000002a   0x080077d2   0x00000004   Data   RW          219    .data.input1PinFront  motor.o
    0x2000002e   0x080077d6   0x00000004   Data   RW          220    .data.input2PinBack  motor.o
    0x20000032   0x080077da   0x00000004   Data   RW          221    .data.input2PinFront  motor.o
    0x20000036   0x080077de   0x00000004   Data   RW          103    .data.test          pwm.o
    0x2000003a   0x080077e2   0x00000002   PAD
    0x2000003c   0x080077e4   0x00000004   Data   RW          641    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000040, Load base: 0x080077e8, Size: 0x00003240, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000040        -       0x00000060   Zero   RW         1031    .bss                c_w.l(libspace.o)
    0x200000a0        -       0x0000003c   Zero   RW          169    .bss.Call_Ptr       exti.o
    0x200000dc        -       0x00000002   Zero   RW           18    .bss.Global_u16Distance  main.o
    0x200000de        -       0x00000001   Zero   RW           16    .bss.Global_u8BrakeStatus  main.o
    0x200000df        -       0x00000003   Zero   RW           19    .bss.Global_u8DataArr  main.o
    0x200000e2        -       0x00000001   Zero   RW           15    .bss.Global_u8Direction  main.o
    0x200000e3   0x080077e8   0x00000001   PAD
    0x200000e4        -       0x00000004   Zero   RW          125    .bss.MUSART1_CallBack  usart.o
    0x200000e8        -       0x00000002   Zero   RW           17    .bss.US_GetDistanceT.Local_Dist  main.o
    0x200000ea        -       0x00000001   Zero   RW          260    .bss.US_voidGetUSSensorDistanceTask.US_TimerICUStatus  us.o
    0x200000eb        -       0x00000001   Zero   RW          259    .bss.US_voidGetUSSensorDistanceTask.US_TimerStatus  us.o
    0x200000ec        -       0x00000190   Zero   RW          326    .bss.clib_mutex_cb  clib_arm.o
    0x2000027c        -       0x00000014   Zero   RW          325    .bss.clib_mutex_id  clib_arm.o
    0x20000290        -       0x00000050   Zero   RW          983    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x200002e0        -       0x00000050   Zero   RW          982    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x20000330        -       0x00000004   Zero   RW          979    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000334        -       0x00000004   Zero   RW          886    .bss.pxCurrentTCB   tasks.o
    0x20000338        -       0x00000004   Zero   RW          977    .bss.pxCurrentTimerList  timers.o
    0x2000033c        -       0x00000004   Zero   RW          894    .bss.pxDelayedTaskList  tasks.o
    0x20000340        -       0x00000004   Zero   RW          667    .bss.pxEnd          heap_4.o
    0x20000344        -       0x00000004   Zero   RW          895    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000348        -       0x00000004   Zero   RW          978    .bss.pxOverflowTimerList  timers.o
    0x2000034c        -       0x00000460   Zero   RW          897    .bss.pxReadyTasksLists  tasks.o
    0x200007ac        -       0x00002000   Zero   RW          673    .bss.ucHeap         heap_4.o
    0x200027ac        -       0x00000004   Zero   RW          891    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200027b0        -       0x00000004   Zero   RW          890    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x200027b4        -       0x00000004   Zero   RW          899    .bss.uxSchedulerSuspended  tasks.o
    0x200027b8        -       0x00000004   Zero   RW          888    .bss.uxTaskNumber   tasks.o
    0x200027bc        -       0x00000004   Zero   RW          898    .bss.uxTopReadyPriority  tasks.o
    0x200027c0        -       0x00000200   Zero   RW          501    .bss.vApplicationGetIdleTaskMemory.Idle_Stack  cmsis_os2.o
    0x200029c0        -       0x0000005c   Zero   RW          500    .bss.vApplicationGetIdleTaskMemory.Idle_TCB  cmsis_os2.o
    0x20002a1c        -       0x00000140   Zero   RW          503    .bss.vApplicationGetTimerTaskMemory.Timer_Stack  cmsis_os2.o
    0x20002b5c        -       0x0000005c   Zero   RW          502    .bss.vApplicationGetTimerTaskMemory.Timer_TCB  cmsis_os2.o
    0x20002bb8        -       0x00000014   Zero   RW          980    .bss.xActiveTimerList1  timers.o
    0x20002bcc        -       0x00000014   Zero   RW          981    .bss.xActiveTimerList2  timers.o
    0x20002be0        -       0x00000014   Zero   RW          907    .bss.xDelayedTaskList1  tasks.o
    0x20002bf4        -       0x00000014   Zero   RW          908    .bss.xDelayedTaskList2  tasks.o
    0x20002c08        -       0x00000004   Zero   RW          668    .bss.xFreeBytesRemaining  heap_4.o
    0x20002c0c        -       0x00000004   Zero   RW          903    .bss.xIdleTaskHandle  tasks.o
    0x20002c10        -       0x00000004   Zero   RW          670    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002c14        -       0x00000004   Zero   RW          904    .bss.xNextTaskUnblockTime  tasks.o
    0x20002c18        -       0x00000004   Zero   RW          906    .bss.xNumOfOverflows  tasks.o
    0x20002c1c        -       0x00000004   Zero   RW          671    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002c20        -       0x00000004   Zero   RW          672    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002c24        -       0x00000004   Zero   RW          905    .bss.xPendedTicks   tasks.o
    0x20002c28        -       0x00000014   Zero   RW          901    .bss.xPendingReadyList  tasks.o
    0x20002c3c        -       0x00000004   Zero   RW          892    .bss.xSchedulerRunning  tasks.o
    0x20002c40        -       0x00000008   Zero   RW          669    .bss.xStart         heap_4.o
    0x20002c48        -       0x00000014   Zero   RW          896    .bss.xSuspendedTaskList  tasks.o
    0x20002c5c        -       0x00000014   Zero   RW          889    .bss.xTasksWaitingTermination  tasks.o
    0x20002c70        -       0x00000004   Zero   RW          893    .bss.xTickCount     tasks.o
    0x20002c74        -       0x00000004   Zero   RW          974    .bss.xTimerQueue    timers.o
    0x20002c78        -       0x00000004   Zero   RW          976    .bss.xTimerTaskHandle  timers.o
    0x20002c7c        -       0x00000004   Zero   RW          900    .bss.xYieldPending  tasks.o
    0x20002c80        -       0x00000200   Zero   RW          539    HEAP                startup_stm32f303xe.o
    0x20002e80        -       0x00000400   Zero   RW          538    STACK               startup_stm32f303xe.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       328         22          0         19          0       2801   ble.o
     11440         76          0          0          0      21660   can.o
       400          0          0          0        420       3790   clib_arm.o
       124          0          0          0       1016      33022   cmsis_os2.o
         0          0          0          0         60       1404   exti.o
       638          0          0          0          0       1327   exti_irq.o
       890          0        288          0          0       5276   gpio.o
       880          0          0          0       8220       4380   heap_4.o
       982          8          0         12          0       2769   icu.o
       238          0          0          0          0       2328   list.o
       806         18         80          1          9       6073   main.o
       450          0          0         16          0       3226   motor.o
       112          0          0          0          0       2656   nvic.o
       626         16          0          4          0       2823   port.o
      1172          8          0          4          0       3426   pwm.o
      2360          0          0          0          0      14287   queue.o
       120          0          0          0          0       1327   rcc.o
        64         26        404          0       1536        896   startup_stm32f303xe.o
        18          0          0          4          0       2232   system_stm32f3xx.o
      4718          0          9          0       1280      23085   tasks.o
      1238         10          8          0        220      10530   timers.o
       558          0          0          0          2       4572   us.o
       786          8          0          0          4       2880   usart.o

    ----------------------------------------------------------------------
     29088        192        824         64      12768     156770   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       140          0          3          4          1          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       720         16          0          0         96       1064   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       684         16          0          0         96        948   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       720         16          0          0         96       1064   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     29808        208        824         64      12864     157018   Grand Totals
     29808        208        824         64      12864     157018   ELF Image Totals
     29808        208        824         64          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                30632 (  29.91kB)
    Total RW  Size (RW Data + ZI Data)             12928 (  12.62kB)
    Total ROM Size (Code + RO Data + RW Data)      30696 (  29.98kB)

==============================================================================

