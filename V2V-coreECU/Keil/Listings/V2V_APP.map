Component: Arm Compiler for Embedded 6.19 Tool: armlink [5d895400]

==============================================================================

Section Cross References

    main.o(.text.main) refers to main.o(.text.SYS_INIT) for SYS_INIT
    main.o(.text.main) refers to main.o(.bss.Motor_SetDirectionH) for Motor_SetDirectionH
    main.o(.text.main) refers to main.o(.text.Motor_SetDirectionT) for Motor_SetDirectionT
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.bss.Button_StateH) for Button_StateH
    main.o(.text.main) refers to main.o(.text.Button_StateT) for Button_StateT
    main.o(.text.main) refers to main.o(.bss.CAN_SendDataH) for CAN_SendDataH
    main.o(.text.main) refers to main.o(.text.CAN_SendDataT) for CAN_SendDataT
    main.o(.text.main) refers to main.o(.bss.US_GetDistanceH) for US_GetDistanceH
    main.o(.text.main) refers to main.o(.text.US_GetDistanceT) for US_GetDistanceT
    main.o(.text.main) refers to main.o(.bss.EEPROM_WriteLogsTH) for EEPROM_WriteLogsTH
    main.o(.text.main) refers to main.o(.text.EEPROM_WriteLogsT) for EEPROM_WriteLogsT
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.text.Motor_SetDirectionT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.Motor_SetDirectionT) refers to main.o(.data.My_Data) for My_Data
    main.o(.text.Motor_SetDirectionT) refers to main.o(.bss.REC_Data) for REC_Data
    main.o(.text.Motor_SetDirectionT) refers to ble.o(.text.HBLE_VGetKey) for HBLE_VGetKey
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_stop) for DCmotor_stop
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_backMove) for DCmotor_backMove
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_leftMove) for DCmotor_leftMove
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_rightMove) for DCmotor_rightMove
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_frontMove) for DCmotor_frontMove
    main.o(.ARM.exidx.text.Motor_SetDirectionT) refers to main.o(.text.Motor_SetDirectionT) for [Anonymous Symbol]
    main.o(.text.Button_StateT) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    main.o(.text.Button_StateT) refers to main.o(.bss.Button_StateT.counter) for Button_StateT.counter
    main.o(.text.Button_StateT) refers to main.o(.bss.Global_u8ManagmentMode) for Global_u8ManagmentMode
    main.o(.text.Button_StateT) refers to main.o(.bss.Global_readEEPROM) for Global_readEEPROM
    main.o(.text.Button_StateT) refers to main.o(.rodata.str1.1) for .L.str.4
    main.o(.text.Button_StateT) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    main.o(.text.Button_StateT) refers to main.o(.text.Resume_MyTasks) for Resume_MyTasks
    main.o(.text.Button_StateT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.Button_StateT) refers to gpio.o(.text.GPIO_readPin) for GPIO_readPin
    main.o(.text.Button_StateT) refers to main.o(.text.Suspend_MyTasks) for Suspend_MyTasks
    main.o(.text.Button_StateT) refers to eeprom.o(.text.EEPROM_READ_STRING) for EEPROM_READ_STRING
    main.o(.text.Button_StateT) refers to ble.o(.text.HBLE_VSendReport) for HBLE_VSendReport
    main.o(.ARM.exidx.text.Button_StateT) refers to main.o(.text.Button_StateT) for [Anonymous Symbol]
    main.o(.text.CAN_SendDataT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.CAN_SendDataT) refers to main.o(.data.My_Data) for My_Data
    main.o(.text.CAN_SendDataT) refers to main.o(.bss.Global_u8DataArr) for Global_u8DataArr
    main.o(.text.CAN_SendDataT) refers to can.o(.text.CAN_enuTransmit) for CAN_enuTransmit
    main.o(.ARM.exidx.text.CAN_SendDataT) refers to main.o(.text.CAN_SendDataT) for [Anonymous Symbol]
    main.o(.text.US_GetDistanceT) refers to main.o(.bss.US_GetDistanceT.Local_Dist) for US_GetDistanceT.Local_Dist
    main.o(.text.US_GetDistanceT) refers to main.o(.data.Global_u8LogsArr) for Global_u8LogsArr
    main.o(.text.US_GetDistanceT) refers to main.o(.data.My_Data) for My_Data
    main.o(.text.US_GetDistanceT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.US_GetDistanceT) refers to us.o(.text.US_voidUltraSonicStart) for US_voidUltraSonicStart
    main.o(.text.US_GetDistanceT) refers to us.o(.text.US_voidGetUSSensorDistanceTask) for US_voidGetUSSensorDistanceTask
    main.o(.ARM.exidx.text.US_GetDistanceT) refers to main.o(.text.US_GetDistanceT) for [Anonymous Symbol]
    main.o(.text.EEPROM_WriteLogsT) refers to main.o(.data.Global_u8LogsArr) for Global_u8LogsArr
    main.o(.text.EEPROM_WriteLogsT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.EEPROM_WriteLogsT) refers to eeprom.o(.text.EEPROM_WRITE_STRING) for EEPROM_WRITE_STRING
    main.o(.ARM.exidx.text.EEPROM_WriteLogsT) refers to main.o(.text.EEPROM_WriteLogsT) for [Anonymous Symbol]
    main.o(.text.Suspend_MyTasks) refers to main.o(.bss.Motor_SetDirectionH) for Motor_SetDirectionH
    main.o(.text.Suspend_MyTasks) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    main.o(.text.Suspend_MyTasks) refers to main.o(.bss.CAN_SendDataH) for CAN_SendDataH
    main.o(.text.Suspend_MyTasks) refers to main.o(.bss.US_GetDistanceH) for US_GetDistanceH
    main.o(.text.Suspend_MyTasks) refers to main.o(.bss.EEPROM_WriteLogsTH) for EEPROM_WriteLogsTH
    main.o(.ARM.exidx.text.Suspend_MyTasks) refers to main.o(.text.Suspend_MyTasks) for [Anonymous Symbol]
    main.o(.text.Resume_MyTasks) refers to main.o(.bss.Motor_SetDirectionH) for Motor_SetDirectionH
    main.o(.text.Resume_MyTasks) refers to tasks.o(.text.vTaskResume) for vTaskResume
    main.o(.text.Resume_MyTasks) refers to main.o(.bss.CAN_SendDataH) for CAN_SendDataH
    main.o(.text.Resume_MyTasks) refers to main.o(.bss.US_GetDistanceH) for US_GetDistanceH
    main.o(.text.Resume_MyTasks) refers to main.o(.bss.EEPROM_WriteLogsTH) for EEPROM_WriteLogsTH
    main.o(.ARM.exidx.text.Resume_MyTasks) refers to main.o(.text.Resume_MyTasks) for [Anonymous Symbol]
    main.o(.text.SYS_INIT) refers to rcc.o(.text.RCC_voidEnablePeripheral) for RCC_voidEnablePeripheral
    main.o(.text.SYS_INIT) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    main.o(.text.SYS_INIT) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    main.o(.text.SYS_INIT) refers to can.o(.text.CAN_enuCreateFilter) for CAN_enuCreateFilter
    main.o(.text.SYS_INIT) refers to can.o(.text.CAN_enuInit) for CAN_enuInit
    main.o(.text.SYS_INIT) refers to motor.o(.text.DCmotor_Init) for DCmotor_Init
    main.o(.text.SYS_INIT) refers to us.o(.text.US_voidInit) for US_voidInit
    main.o(.text.SYS_INIT) refers to ble.o(.text.HBLE_VInit) for HBLE_VInit
    main.o(.text.SYS_INIT) refers to eeprom.o(.text.EEPROM_init) for EEPROM_init
    main.o(.ARM.exidx.text.SYS_INIT) refers to main.o(.text.SYS_INIT) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.RCC_voidInitSYSCLK) refers to rcc.o(.text.RCC_voidInitSYSCLK) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.RCC_voidEnablePeripheral) refers to rcc.o(.text.RCC_voidEnablePeripheral) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.RCC_voidDisablePeripheral) refers to rcc.o(.text.RCC_voidDisablePeripheral) for [Anonymous Symbol]
    gpio.o(.text.GPIO_init) refers to gpio.o(.rodata..L__const.GPIO_init.LOC_pinsConfigurations) for .L__const.GPIO_init.LOC_pinsConfigurations
    gpio.o(.text.GPIO_init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    gpio.o(.ARM.exidx.text.GPIO_init) refers to gpio.o(.text.GPIO_init) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_configurePin) refers to gpio.o(.text.GPIO_configurePin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_writePin) refers to gpio.o(.text.GPIO_writePin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_writePort) refers to gpio.o(.text.GPIO_writePort) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_readPin) refers to gpio.o(.text.GPIO_readPin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_readPort) refers to gpio.o(.text.GPIO_readPort) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_togglePin) refers to gpio.o(.text.GPIO_togglePin) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_setPinFuction) refers to gpio.o(.text.GPIO_setPinFuction) for [Anonymous Symbol]
    gpio.o(.ARM.exidx.text.GPIO_lockPin) refers to gpio.o(.text.GPIO_lockPin) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.NVIC_Init) refers to nvic.o(.text.NVIC_Init) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC__Venable_irq) refers to nvic.o(.text.MNVIC__Venable_irq) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC__Vdisable_irq) refers to nvic.o(.text.MNVIC__Vdisable_irq) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuEnablePerInterrupt) refers to nvic.o(.text.MNVIC_EnuEnablePerInterrupt) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuDisablePerInterrupt) refers to nvic.o(.text.MNVIC_EnuDisablePerInterrupt) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuSetPendingFlag) refers to nvic.o(.text.MNVIC_EnuSetPendingFlag) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuClearPendingFlag) refers to nvic.o(.text.MNVIC_EnuClearPendingFlag) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuActiveFlagStatus) refers to nvic.o(.text.MNVIC_EnuActiveFlagStatus) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuSetPriorityGroup) refers to nvic.o(.text.MNVIC_EnuSetPriorityGroup) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_VSystemReset) refers to nvic.o(.text.MNVIC_VSystemReset) for [Anonymous Symbol]
    pwm.o(.text.PWM_enu_Init) refers to pwm.o(.rodata..L__const.PWM_enu_Init.Timx_BASE) for .L__const.PWM_enu_Init.Timx_BASE
    pwm.o(.text.PWM_enu_Init) refers to pwm.o(.data.PA0) for PA0
    pwm.o(.text.PWM_enu_Init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    pwm.o(.text.PWM_enu_Init) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    pwm.o(.text.PWM_enu_Init) refers to pwm.o(.data.PB6) for PB6
    pwm.o(.ARM.exidx.text.PWM_enu_Init) refers to pwm.o(.text.PWM_enu_Init) for [Anonymous Symbol]
    pwm.o(.text.PWM_enu_SetDutyCycle) refers to pwm.o(.rodata..L__const.PWM_enu_SetDutyCycle.Timx_BASE) for .L__const.PWM_enu_SetDutyCycle.Timx_BASE
    pwm.o(.ARM.exidx.text.PWM_enu_SetDutyCycle) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for [Anonymous Symbol]
    usart.o(.text.MUSART_voidInit) refers to usart.o(.data.arr_Bases) for arr_Bases
    usart.o(.ARM.exidx.text.MUSART_voidInit) refers to usart.o(.text.MUSART_voidInit) for [Anonymous Symbol]
    usart.o(.text.MUSART1_VidSendCharSync) refers to usart.o(.data.arr_Bases) for arr_Bases
    usart.o(.ARM.exidx.text.MUSART1_VidSendCharSync) refers to usart.o(.text.MUSART1_VidSendCharSync) for [Anonymous Symbol]
    usart.o(.text.MUSART1_VidSendStringSynch) refers to usart.o(.text.MUSART1_VidSendCharSync) for MUSART1_VidSendCharSync
    usart.o(.ARM.exidx.text.MUSART1_VidSendStringSynch) refers to usart.o(.text.MUSART1_VidSendStringSynch) for [Anonymous Symbol]
    usart.o(.text.MUSART1_u8RecCharSynch) refers to usart.o(.data.arr_Bases) for arr_Bases
    usart.o(.ARM.exidx.text.MUSART1_u8RecCharSynch) refers to usart.o(.text.MUSART1_u8RecCharSynch) for [Anonymous Symbol]
    usart.o(.text.MUSART1_VidSetCallBack) refers to usart.o(.bss.MUSART2_CallBack) for MUSART2_CallBack
    usart.o(.text.MUSART1_VidSetCallBack) refers to usart.o(.bss.MUSART3_CallBack) for MUSART3_CallBack
    usart.o(.text.MUSART1_VidSetCallBack) refers to usart.o(.bss.MUSART1_CallBack) for MUSART1_CallBack
    usart.o(.ARM.exidx.text.MUSART1_VidSetCallBack) refers to usart.o(.text.MUSART1_VidSetCallBack) for [Anonymous Symbol]
    usart.o(.text.USART1_IRQHandler) refers to usart.o(.bss.MUSART1_CallBack) for MUSART1_CallBack
    usart.o(.ARM.exidx.text.USART1_IRQHandler) refers to usart.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    usart.o(.text.USART2_IRQHandler) refers to usart.o(.bss.MUSART1_CallBack) for MUSART1_CallBack
    usart.o(.ARM.exidx.text.USART2_IRQHandler) refers to usart.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    usart.o(.text.USART3_IRQHandler) refers to usart.o(.bss.MUSART1_CallBack) for MUSART1_CallBack
    usart.o(.ARM.exidx.text.USART3_IRQHandler) refers to usart.o(.text.USART3_IRQHandler) for [Anonymous Symbol]
    icu.o(.text.ICU_voidInitTimer) refers to icu.o(.data.Timer) for Timer
    icu.o(.text.ICU_voidInitTimer) refers to icu.o(.text.ICU_voidSetSensingEdge) for ICU_voidSetSensingEdge
    icu.o(.ARM.exidx.text.ICU_voidInitTimer) refers to icu.o(.text.ICU_voidInitTimer) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetSensingEdge) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetSensingEdge) refers to icu.o(.text.ICU_voidSetSensingEdge) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetCountTime) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetCountTime) refers to icu.o(.text.ICU_voidSetCountTime) for [Anonymous Symbol]
    icu.o(.text.ICU_voidEnableTimer) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidEnableTimer) refers to icu.o(.text.ICU_voidEnableTimer) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetICU_Count) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetICU_Count) refers to icu.o(.text.ICU_voidGetICU_Count) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetTimerOvStatus) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetTimerOvStatus) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for [Anonymous Symbol]
    icu.o(.text.ICU_voidClrTimerOvFlag) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidClrTimerOvFlag) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetTimerIcuStatus) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetTimerIcuStatus) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetArrTime) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetArrTime) refers to icu.o(.text.ICU_voidSetArrTime) for [Anonymous Symbol]
    icu.o(.text.ICU_voidClrTimerIcuFlag) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidClrTimerIcuFlag) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for [Anonymous Symbol]
    icu.o(.text.ICU_voidDisableTimer) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidDisableTimer) refers to icu.o(.text.ICU_voidDisableTimer) for [Anonymous Symbol]
    exti.o(.ARM.exidx.text.EXTI_enuEnableINT) refers to exti.o(.text.EXTI_enuEnableINT) for [Anonymous Symbol]
    exti.o(.ARM.exidx.text.EXTI_enuDisableINT) refers to exti.o(.text.EXTI_enuDisableINT) for [Anonymous Symbol]
    exti.o(.text.EXTI_enuCallBack) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti.o(.ARM.exidx.text.EXTI_enuCallBack) refers to exti.o(.text.EXTI_enuCallBack) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI0_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI0_IRQHandler) refers to exti_irq.o(.text.EXTI0_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI1_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI1_IRQHandler) refers to exti_irq.o(.text.EXTI1_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI2_TSC_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI2_TSC_IRQHandler) refers to exti_irq.o(.text.EXTI2_TSC_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI3_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI3_IRQHandler) refers to exti_irq.o(.text.EXTI3_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI4_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI4_IRQHandler) refers to exti_irq.o(.text.EXTI4_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI9_5_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI9_5_IRQHandler) refers to exti_irq.o(.text.EXTI9_5_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI15_10_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI15_10_IRQHandler) refers to exti_irq.o(.text.EXTI15_10_IRQHandler) for [Anonymous Symbol]
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input1PinBack) for input1PinBack
    motor.o(.text.DCmotor_Init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input2PinBack) for input2PinBack
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input1PinFront) for input1PinFront
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input2PinFront) for input2PinFront
    motor.o(.text.DCmotor_Init) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_Init) refers to pwm.o(.text.PWM_enu_Init) for PWM_enu_Init
    motor.o(.ARM.exidx.text.DCmotor_Init) refers to motor.o(.text.DCmotor_Init) for [Anonymous Symbol]
    motor.o(.text.DCmotor_frontMove) refers to motor.o(.text.MOTOR_SET_SPEED) for MOTOR_SET_SPEED
    motor.o(.text.DCmotor_frontMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor_frontMove) refers to motor.o(.text.DCmotor_frontMove) for [Anonymous Symbol]
    motor.o(.text.MOTOR_SET_SPEED) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.MOTOR_SET_SPEED) refers to motor.o(.text.MOTOR_SET_SPEED) for [Anonymous Symbol]
    motor.o(.text.DCmotor_backMove) refers to motor.o(.text.MOTOR_SET_SPEED) for MOTOR_SET_SPEED
    motor.o(.text.DCmotor_backMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor_backMove) refers to motor.o(.text.DCmotor_backMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_rightMove) refers to motor.o(.text.MOTOR_SET_SPEED) for MOTOR_SET_SPEED
    motor.o(.text.DCmotor_rightMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor_rightMove) refers to motor.o(.text.DCmotor_rightMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_leftMove) refers to motor.o(.text.MOTOR_SET_SPEED) for MOTOR_SET_SPEED
    motor.o(.text.DCmotor_leftMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor_leftMove) refers to motor.o(.text.DCmotor_leftMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_stop) refers to motor.o(.text.MOTOR_SET_SPEED) for MOTOR_SET_SPEED
    motor.o(.text.DCmotor_stop) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor_stop) refers to motor.o(.text.DCmotor_stop) for [Anonymous Symbol]
    motor.o(.text.DCmotor1_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor1_) refers to motor.o(.text.DCmotor1_) for [Anonymous Symbol]
    motor.o(.text.DCmotor2_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor2_) refers to motor.o(.text.DCmotor2_) for [Anonymous Symbol]
    motor.o(.text.DCmotor3_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor3_) refers to motor.o(.text.DCmotor3_) for [Anonymous Symbol]
    motor.o(.text.DCmotor4_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor4_) refers to motor.o(.text.DCmotor4_) for [Anonymous Symbol]
    us.o(.text.US_voidInit) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    us.o(.text.US_voidInit) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    us.o(.text.US_voidInit) refers to icu.o(.text.ICU_voidInitTimer) for ICU_voidInitTimer
    us.o(.ARM.exidx.text.US_voidInit) refers to us.o(.text.US_voidInit) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistance) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistance) refers to us.o(.text.US_voidGetUSSensorDistance) for [Anonymous Symbol]
    us.o(.text.US_voidSetTrigger) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidDisableTimer) for ICU_voidDisableTimer
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.ARM.exidx.text.US_voidSetTrigger) refers to us.o(.text.US_voidSetTrigger) for [Anonymous Symbol]
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.ARM.exidx.text.US_voidSetICUTime) refers to us.o(.text.US_voidSetICUTime) for [Anonymous Symbol]
    us.o(.text.US_voidGetTimeStatus) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.ARM.exidx.text.US_voidGetTimeStatus) refers to us.o(.text.US_voidGetTimeStatus) for [Anonymous Symbol]
    us.o(.text.US_voidGetICU_Distance) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.text.US_voidGetICU_Distance) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.ARM.exidx.text.US_voidGetICU_Distance) refers to us.o(.text.US_voidGetICU_Distance) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.bss.US_voidGetUSSensorDistanceAsync.US_flag) for US_voidGetUSSensorDistanceAsync.US_flag
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidSetTrigger) for US_voidSetTrigger
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidSetICUTime) for US_voidSetICUTime
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.bss.US_voidGetUSSensorDistanceAsync.US_TimerStatus) for US_voidGetUSSensorDistanceAsync.US_TimerStatus
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidGetTimeStatus) for US_voidGetTimeStatus
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidGetICU_Distance) for US_voidGetICU_Distance
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidGetUSSensorDistanceAsync) for [Anonymous Symbol]
    us.o(.text.US_voidGetDistancePolling) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for ICU_voidGetTimerIcuStatus
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.ARM.exidx.text.US_voidGetDistancePolling) refers to us.o(.text.US_voidGetDistancePolling) for [Anonymous Symbol]
    us.o(.text.US_voidGetTimeICUStatus) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for ICU_voidGetTimerIcuStatus
    us.o(.ARM.exidx.text.US_voidGetTimeICUStatus) refers to us.o(.text.US_voidGetTimeICUStatus) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_flag) for US_voidGetUSSensorDistanceAsyncTask.US_flag
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidSetTrigger) for US_voidSetTrigger
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidSetICUTime) for US_voidSetICUTime
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_TimerStatus) for US_voidGetUSSensorDistanceAsyncTask.US_TimerStatus
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidGetTimeStatus) for US_voidGetTimeStatus
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_TimerICUStatus) for US_voidGetUSSensorDistanceAsyncTask.US_TimerICUStatus
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidGetTimeICUStatus) for US_voidGetTimeICUStatus
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidGetICU_Distance) for US_voidGetICU_Distance
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidGetUSSensorDistanceAsyncTask) for [Anonymous Symbol]
    us.o(.text.US_voidUltraSonicStart) refers to us.o(.text.US_voidSetTrigger) for US_voidSetTrigger
    us.o(.text.US_voidUltraSonicStart) refers to us.o(.text.US_voidSetICUTime) for US_voidSetICUTime
    us.o(.ARM.exidx.text.US_voidUltraSonicStart) refers to us.o(.text.US_voidUltraSonicStart) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerStatus) for US_voidGetUSSensorDistanceTask.US_TimerStatus
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to us.o(.text.US_voidGetTimeStatus) for US_voidGetTimeStatus
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerICUStatus) for US_voidGetUSSensorDistanceTask.US_TimerICUStatus
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to us.o(.text.US_voidGetTimeICUStatus) for US_voidGetTimeICUStatus
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to us.o(.text.US_voidGetICU_Distance) for US_voidGetICU_Distance
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceTask) refers to us.o(.text.US_voidGetUSSensorDistanceTask) for [Anonymous Symbol]
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART_PIN_TX) for UART_PIN_TX
    ble.o(.text.HBLE_VInit) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART_PIN_RX) for UART_PIN_RX
    ble.o(.text.HBLE_VInit) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART_PIN_TX1) for UART_PIN_TX1
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART_PIN_RX1) for UART_PIN_RX1
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART) for UART
    ble.o(.text.HBLE_VInit) refers to usart.o(.text.MUSART_voidInit) for MUSART_voidInit
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART1) for UART1
    ble.o(.text.HBLE_VInit) refers to ble.o(.text.HBLE_VGetChar) for HBLE_VGetChar
    ble.o(.text.HBLE_VInit) refers to usart.o(.text.MUSART1_VidSetCallBack) for MUSART1_VidSetCallBack
    ble.o(.text.HBLE_VInit) refers to nvic.o(.text.MNVIC_EnuEnablePerInterrupt) for MNVIC_EnuEnablePerInterrupt
    ble.o(.ARM.exidx.text.HBLE_VInit) refers to ble.o(.text.HBLE_VInit) for [Anonymous Symbol]
    ble.o(.text.HBLE_VGetChar) refers to ble.o(.data.G_Key) for G_Key
    ble.o(.ARM.exidx.text.HBLE_VGetChar) refers to ble.o(.text.HBLE_VGetChar) for [Anonymous Symbol]
    ble.o(.text.HBLE_VGetKey) refers to ble.o(.data.G_Key) for G_Key
    ble.o(.ARM.exidx.text.HBLE_VGetKey) refers to ble.o(.text.HBLE_VGetKey) for [Anonymous Symbol]
    ble.o(.text.HBLE_VSendReport) refers to usart.o(.text.MUSART1_VidSendStringSynch) for MUSART1_VidSendStringSynch
    ble.o(.ARM.exidx.text.HBLE_VSendReport) refers to ble.o(.text.HBLE_VSendReport) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuInit) refers to can.o(.text.CAN_enuInit) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuTransmit) refers to can.o(.text.CAN_enuTransmit) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuCreateFilter) refers to can.o(.text.CAN_enuCreateFilter) for [Anonymous Symbol]
    can.o(.text.CAN_enuRecieve) refers to can.o(.bss.ARR_Recieved_Data) for ARR_Recieved_Data
    can.o(.ARM.exidx.text.CAN_enuRecieve) refers to can.o(.text.CAN_enuRecieve) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuChangeMode) refers to can.o(.text.CAN_enuChangeMode) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuAbort) refers to can.o(.text.CAN_enuAbort) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuGoTestMode) refers to can.o(.text.CAN_enuGoTestMode) for [Anonymous Symbol]
    eeprom.o(.text.EEPROM_init) refers to rcc.o(.text.RCC_voidEnablePeripheral) for RCC_voidEnablePeripheral
    eeprom.o(.text.EEPROM_init) refers to eeprom.o(.data.SDA) for SDA
    eeprom.o(.text.EEPROM_init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    eeprom.o(.text.EEPROM_init) refers to eeprom.o(.data.SCL) for SCL
    eeprom.o(.text.EEPROM_init) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    eeprom.o(.text.EEPROM_init) refers to i2c.o(.text.I2C_init) for I2C_init
    eeprom.o(.ARM.exidx.text.EEPROM_init) refers to eeprom.o(.text.EEPROM_init) for [Anonymous Symbol]
    eeprom.o(.text.EEPROM_WRITE_BYTE) refers to i2c.o(.text.I2C_MASTER_init) for I2C_MASTER_init
    eeprom.o(.text.EEPROM_WRITE_BYTE) refers to i2c.o(.text.I2C_Start) for I2C_Start
    eeprom.o(.text.EEPROM_WRITE_BYTE) refers to i2c.o(.text.I2C1_Write_byte) for I2C1_Write_byte
    eeprom.o(.text.EEPROM_WRITE_BYTE) refers to i2c.o(.text.I2C_Stop) for I2C_Stop
    eeprom.o(.ARM.exidx.text.EEPROM_WRITE_BYTE) refers to eeprom.o(.text.EEPROM_WRITE_BYTE) for [Anonymous Symbol]
    eeprom.o(.text.EEPROM_WRITE_STRING) refers to eeprom.o(.text.EEPROM_WRITE_BYTE) for EEPROM_WRITE_BYTE
    eeprom.o(.ARM.exidx.text.EEPROM_WRITE_STRING) refers to eeprom.o(.text.EEPROM_WRITE_STRING) for [Anonymous Symbol]
    eeprom.o(.text.EEPROM_READ_BYTE) refers to i2c.o(.text.I2C_MASTER_init) for I2C_MASTER_init
    eeprom.o(.text.EEPROM_READ_BYTE) refers to i2c.o(.text.I2C_Start) for I2C_Start
    eeprom.o(.text.EEPROM_READ_BYTE) refers to i2c.o(.text.I2C1_Write_byte) for I2C1_Write_byte
    eeprom.o(.text.EEPROM_READ_BYTE) refers to i2c.o(.text.I2C1_Read_byte) for I2C1_Read_byte
    eeprom.o(.text.EEPROM_READ_BYTE) refers to i2c.o(.text.I2C_Stop) for I2C_Stop
    eeprom.o(.ARM.exidx.text.EEPROM_READ_BYTE) refers to eeprom.o(.text.EEPROM_READ_BYTE) for [Anonymous Symbol]
    eeprom.o(.text.EEPROM_READ_STRING) refers to eeprom.o(.text.EEPROM_READ_BYTE) for EEPROM_READ_BYTE
    eeprom.o(.ARM.exidx.text.EEPROM_READ_STRING) refers to eeprom.o(.text.EEPROM_READ_STRING) for [Anonymous Symbol]
    i2c.o(.text.I2C_init) refers to i2c.o(.rodata..L__const.I2C_init.loc_u32_I2Cx) for .L__const.I2C_init.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C_init) refers to i2c.o(.text.I2C_init) for [Anonymous Symbol]
    i2c.o(.text.I2C_MASTER_init) refers to i2c.o(.rodata..L__const.I2C_MASTER_init.loc_u32_I2Cx) for .L__const.I2C_MASTER_init.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C_MASTER_init) refers to i2c.o(.text.I2C_MASTER_init) for [Anonymous Symbol]
    i2c.o(.text.I2C_Start) refers to i2c.o(.rodata..L__const.I2C_Start.loc_u32_I2Cx) for .L__const.I2C_Start.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C_Start) refers to i2c.o(.text.I2C_Start) for [Anonymous Symbol]
    i2c.o(.text.I2C_Stop) refers to i2c.o(.rodata..L__const.I2C_Stop.loc_u32_I2Cx) for .L__const.I2C_Stop.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C_Stop) refers to i2c.o(.text.I2C_Stop) for [Anonymous Symbol]
    i2c.o(.text.I2C1_Write_byte) refers to i2c.o(.rodata..L__const.I2C1_Write_byte.loc_u32_I2Cx) for .L__const.I2C1_Write_byte.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C1_Write_byte) refers to i2c.o(.text.I2C1_Write_byte) for [Anonymous Symbol]
    i2c.o(.text.I2C1_Read_byte) refers to i2c.o(.rodata..L__const.I2C1_Read_byte.loc_u32_I2Cx) for .L__const.I2C1_Read_byte.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C1_Read_byte) refers to i2c.o(.text.I2C1_Read_byte) for [Anonymous Symbol]
    adc.o(.text.ADC_Init) refers to rcc.o(.text.RCC_voidEnablePeripheral) for RCC_voidEnablePeripheral
    adc.o(.text.ADC_Init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    adc.o(.ARM.exidx.text.ADC_Init) refers to adc.o(.text.ADC_Init) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.ADC_StartConversion) refers to adc.o(.text.ADC_StartConversion) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.ADC_GetConversionState) refers to adc.o(.text.ADC_GetConversionState) for [Anonymous Symbol]
    adc.o(.ARM.exidx.text.ADC_ReadData) refers to adc.o(.text.ADC_ReadData) for [Anonymous Symbol]
    adc.o(.text.ADC_setCallBack) refers to adc.o(.bss.ADCClbk_ptr) for ADCClbk_ptr
    adc.o(.ARM.exidx.text.ADC_setCallBack) refers to adc.o(.text.ADC_setCallBack) for [Anonymous Symbol]
    temp_sensor.o(.text.TEMP_Get) refers to adc.o(.text.ADC_StartConversion) for ADC_StartConversion
    temp_sensor.o(.text.TEMP_Get) refers to adc.o(.text.ADC_ReadData) for ADC_ReadData
    temp_sensor.o(.text.TEMP_Get) refers to dflt_clz.o(x$fpl$dfltu) for __aeabi_ui2d
    temp_sensor.o(.text.TEMP_Get) refers to dmul.o(x$fpl$dmul) for __aeabi_dmul
    temp_sensor.o(.text.TEMP_Get) refers to dfix.o(x$fpl$dfix) for __aeabi_d2iz
    temp_sensor.o(.ARM.exidx.text.TEMP_Get) refers to temp_sensor.o(.text.TEMP_Get) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init) refers to clib_arm.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace) for os_libspace
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace_id) for os_libspace_id
    clib_arm.o(.ARM.exidx.text.__user_perthread_libspace) refers to clib_arm.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    clib_arm.o(.text.os_kernel_is_active) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.ARM.exidx.text.os_kernel_is_active) refers to clib_arm.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_cb) for clib_mutex_cb
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    clib_arm.o(.ARM.exidx.text._mutex_initialize) refers to clib_arm.o(.text._mutex_initialize) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.is_thread_mode) for is_thread_mode
    clib_arm.o(.text._mutex_acquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    clib_arm.o(.ARM.exidx.text._mutex_acquire) refers to clib_arm.o(.text._mutex_acquire) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text.is_thread_mode) refers to clib_arm.o(.text.is_thread_mode) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.is_thread_mode) for is_thread_mode
    clib_arm.o(.text._mutex_release) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    clib_arm.o(.ARM.exidx.text._mutex_release) refers to clib_arm.o(.text._mutex_release) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    clib_arm.o(.text._mutex_free) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.ARM.exidx.text._mutex_free) refers to clib_arm.o(.text._mutex_free) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelInitialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.IRQ_Context) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.IRQ_Context) refers to cmsis_os2.o(.text.IRQ_Context) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.SVC_Setup) for SVC_Setup
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.SVC_Setup) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    cmsis_os2.o(.ARM.exidx.text.SVC_Setup) refers to cmsis_os2.o(.text.SVC_Setup) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.AllocBlock) for AllocBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.CreateBlock) for CreateBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.AllocBlock) refers to cmsis_os2.o(.text.AllocBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.CreateBlock) refers to cmsis_os2.o(.text.CreateBlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.FreeBlock) for FreeBlock
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.FreeBlock) refers to cmsis_os2.o(.text.FreeBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB) for vApplicationGetIdleTaskMemory.Idle_TCB
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack) for vApplicationGetIdleTaskMemory.Idle_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB) for vApplicationGetTimerTaskMemory.Timer_TCB
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack) for vApplicationGetTimerTaskMemory.Timer_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.__NVIC_SetPriority) refers to os_systick.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    startup_stm32f303xe.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(RESET) refers to startup_stm32f303xe.o(STACK) for __initial_sp
    startup_stm32f303xe.o(RESET) refers to startup_stm32f303xe.o(.text) for Reset_Handler
    startup_stm32f303xe.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f303xe.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f303xe.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI0_IRQHandler) for EXTI0_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI1_IRQHandler) for EXTI1_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI2_TSC_IRQHandler) for EXTI2_TSC_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI3_IRQHandler) for EXTI3_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI4_IRQHandler) for EXTI4_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI9_5_IRQHandler) for EXTI9_5_IRQHandler
    startup_stm32f303xe.o(RESET) refers to usart.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f303xe.o(RESET) refers to usart.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f303xe.o(RESET) refers to usart.o(.text.USART3_IRQHandler) for USART3_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI15_10_IRQHandler) for EXTI15_10_IRQHandler
    startup_stm32f303xe.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(.text) refers to system_stm32f3xx.o(.text.SystemInit) for SystemInit
    startup_stm32f303xe.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f303xe.o(.text) refers to startup_stm32f303xe.o(HEAP) for Heap_Mem
    startup_stm32f303xe.o(.text) refers to startup_stm32f303xe.o(STACK) for Stack_Mem
    system_stm32f3xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f3xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f3xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f3xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f3xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    dfix.o(x$fpl$dfix) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfix) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dfix.o(x$fpl$dfixr) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dfix.o(x$fpl$dfixr) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    dflt_clz.o(x$fpl$dfltu) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dflt) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dflt_clz.o(x$fpl$dfltn) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dmul.o(x$fpl$dmul) refers to dretinf.o(x$fpl$dretinf) for __fpl_dretinf
    dmul.o(x$fpl$dmul) refers to dnaninf.o(x$fpl$dnaninf) for __fpl_dnaninf
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    dnaninf.o(x$fpl$dnaninf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    dretinf.o(x$fpl$dretinf) refers (Special) to usenofp.o(x$fpl$usenofp) for __I$use$fp
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to clib_arm.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f303xe.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.exidx.text.Motor_SetDirectionT), (8 bytes).
    Removing main.o(.ARM.exidx.text.Button_StateT), (8 bytes).
    Removing main.o(.ARM.exidx.text.CAN_SendDataT), (8 bytes).
    Removing main.o(.ARM.exidx.text.US_GetDistanceT), (8 bytes).
    Removing main.o(.ARM.exidx.text.EEPROM_WriteLogsT), (8 bytes).
    Removing main.o(.ARM.exidx.text.Suspend_MyTasks), (8 bytes).
    Removing main.o(.ARM.exidx.text.Resume_MyTasks), (8 bytes).
    Removing main.o(.ARM.exidx.text.SYS_INIT), (8 bytes).
    Removing main.o(.bss.Global_u16Distance), (2 bytes).
    Removing main.o(.bss.TEMP_GetTempH), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing rcc.o(.text), (0 bytes).
    Removing rcc.o(.text.RCC_voidInitSYSCLK), (62 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidInitSYSCLK), (8 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidEnablePeripheral), (8 bytes).
    Removing rcc.o(.text.RCC_voidDisablePeripheral), (80 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidDisablePeripheral), (8 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.text.GPIO_init), (78 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_init), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_configurePin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_writePin), (8 bytes).
    Removing gpio.o(.text.GPIO_writePort), (52 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_writePort), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_readPin), (8 bytes).
    Removing gpio.o(.text.GPIO_readPort), (64 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_readPort), (8 bytes).
    Removing gpio.o(.text.GPIO_togglePin), (72 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_togglePin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_setPinFuction), (8 bytes).
    Removing gpio.o(.text.GPIO_lockPin), (72 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_lockPin), (8 bytes).
    Removing gpio.o(.rodata..L__const.GPIO_init.LOC_pinsConfigurations), (128 bytes).
    Removing nvic.o(.text), (0 bytes).
    Removing nvic.o(.text.NVIC_Init), (20 bytes).
    Removing nvic.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing nvic.o(.text.MNVIC__Venable_irq), (4 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC__Venable_irq), (8 bytes).
    Removing nvic.o(.text.MNVIC__Vdisable_irq), (4 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC__Vdisable_irq), (8 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuEnablePerInterrupt), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuDisablePerInterrupt), (70 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuDisablePerInterrupt), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuSetPendingFlag), (70 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuSetPendingFlag), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuClearPendingFlag), (70 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuClearPendingFlag), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuActiveFlagStatus), (50 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuActiveFlagStatus), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuSetPriorityGroup), (36 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuSetPriorityGroup), (8 bytes).
    Removing nvic.o(.text.MNVIC_VSystemReset), (18 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_VSystemReset), (8 bytes).
    Removing pwm.o(.text), (0 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_enu_Init), (8 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_enu_SetDutyCycle), (8 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART_voidInit), (8 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSendCharSync), (8 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSendStringSynch), (8 bytes).
    Removing usart.o(.text.MUSART1_u8RecCharSynch), (52 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_u8RecCharSynch), (8 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSetCallBack), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART3_IRQHandler), (8 bytes).
    Removing icu.o(.text), (0 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidInitTimer), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetSensingEdge), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetCountTime), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidEnableTimer), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetICU_Count), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetTimerOvStatus), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidClrTimerOvFlag), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetTimerIcuStatus), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetArrTime), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidClrTimerIcuFlag), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidDisableTimer), (8 bytes).
    Removing exti.o(.text), (0 bytes).
    Removing exti.o(.text.EXTI_enuEnableINT), (110 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuEnableINT), (8 bytes).
    Removing exti.o(.text.EXTI_enuDisableINT), (34 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuDisableINT), (8 bytes).
    Removing exti.o(.text.EXTI_enuCallBack), (24 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuCallBack), (8 bytes).
    Removing exti_irq.o(.text), (0 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI0_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI1_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI2_TSC_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI3_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI4_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI9_5_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI15_10_IRQHandler), (8 bytes).
    Removing motor.o(.text), (0 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_Init), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_frontMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.MOTOR_SET_SPEED), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_backMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_rightMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_leftMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_stop), (8 bytes).
    Removing motor.o(.text.DCmotor1_), (26 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor1_), (8 bytes).
    Removing motor.o(.text.DCmotor2_), (26 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor2_), (8 bytes).
    Removing motor.o(.text.DCmotor3_), (26 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor3_), (8 bytes).
    Removing motor.o(.text.DCmotor4_), (26 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor4_), (8 bytes).
    Removing motor.o(.bss.state), (1 bytes).
    Removing us.o(.text), (0 bytes).
    Removing us.o(.ARM.exidx.text.US_voidInit), (8 bytes).
    Removing us.o(.text.US_voidGetUSSensorDistance), (322 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistance), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidSetTrigger), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidSetICUTime), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetTimeStatus), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetICU_Distance), (8 bytes).
    Removing us.o(.text.US_voidGetUSSensorDistanceAsync), (68 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsync), (8 bytes).
    Removing us.o(.text.US_voidGetDistancePolling), (344 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetDistancePolling), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetTimeICUStatus), (8 bytes).
    Removing us.o(.text.US_voidGetUSSensorDistanceAsyncTask), (138 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsyncTask), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidUltraSonicStart), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceTask), (8 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsync.US_flag), (1 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsync.US_TimerStatus), (1 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_flag), (1 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_TimerStatus), (1 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsyncTask.US_TimerICUStatus), (1 bytes).
    Removing ble.o(.text), (0 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VInit), (8 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VGetChar), (8 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VGetKey), (8 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VSendReport), (8 bytes).
    Removing can.o(.text), (0 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuInit), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuTransmit), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuCreateFilter), (8 bytes).
    Removing can.o(.text.CAN_enuRecieve), (1180 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuRecieve), (8 bytes).
    Removing can.o(.text.CAN_enuChangeMode), (146 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuChangeMode), (8 bytes).
    Removing can.o(.text.CAN_enuAbort), (48 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuAbort), (8 bytes).
    Removing can.o(.text.CAN_enuGoTestMode), (122 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuGoTestMode), (8 bytes).
    Removing can.o(.bss.ARR_Recieved_Data), (448 bytes).
    Removing eeprom.o(.text), (0 bytes).
    Removing eeprom.o(.ARM.exidx.text.EEPROM_init), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EEPROM_WRITE_BYTE), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EEPROM_WRITE_STRING), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EEPROM_READ_BYTE), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EEPROM_READ_STRING), (8 bytes).
    Removing i2c.o(.text), (0 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_init), (8 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_MASTER_init), (8 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_Start), (8 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_Stop), (8 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C1_Write_byte), (8 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C1_Read_byte), (8 bytes).
    Removing adc.o(.text), (0 bytes).
    Removing adc.o(.text.ADC_Init), (128 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_Init), (8 bytes).
    Removing adc.o(.text.ADC_StartConversion), (26 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_StartConversion), (8 bytes).
    Removing adc.o(.text.ADC_GetConversionState), (14 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_GetConversionState), (8 bytes).
    Removing adc.o(.text.ADC_ReadData), (38 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_ReadData), (8 bytes).
    Removing adc.o(.text.ADC_setCallBack), (12 bytes).
    Removing adc.o(.ARM.exidx.text.ADC_setCallBack), (8 bytes).
    Removing adc.o(.bss.ADCClbk_ptr), (4 bytes).
    Removing temp_sensor.o(.text), (0 bytes).
    Removing temp_sensor.o(.text.TEMP_Get), (80 bytes).
    Removing temp_sensor.o(.ARM.exidx.text.TEMP_Get), (8 bytes).
    Removing clib_arm.o(.text), (0 bytes).
    Removing clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing clib_arm.o(.text.__user_perthread_libspace), (68 bytes).
    Removing clib_arm.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.is_thread_mode), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing clib_arm.o(.bss.os_libspace), (480 bytes).
    Removing clib_arm.o(.bss.os_libspace_id), (16 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.IRQ_Context), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.IRQ_Context), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (72 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.SVC_Setup), (4 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (44 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (162 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (26 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (4 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (22 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (144 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (100 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (190 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (222 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (26 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (26 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (70 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (78 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (26 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (90 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (116 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (96 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (168 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (112 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (102 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (112 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (154 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (144 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (292 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (160 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.AllocBlock), (16 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.AllocBlock), (8 bytes).
    Removing cmsis_os2.o(.text.CreateBlock), (30 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.CreateBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (218 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.text.__NVIC_SetPriority), (14 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (70 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.__NVIC_SetPriority), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (50 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).
    Removing system_stm32f3xx.o(.text), (0 bytes).
    Removing system_stm32f3xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f3xx.o(.text.SystemCoreClockUpdate), (86 bytes).
    Removing system_stm32f3xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f3xx.o(.rodata.AHBPrescTable), (16 bytes).
    Removing system_stm32f3xx.o(.rodata.APBPrescTable), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (146 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (126 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (170 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (26 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (18 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (46 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (18 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (38 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (154 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (26 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (36 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (164 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (150 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (256 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (124 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (54 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (22 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (10 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (14 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (170 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (174 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (180 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (88 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (182 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (128 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (160 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (226 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (308 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (236 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (62 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (32 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (86 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (38 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (24 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (4 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (24 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (18 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (20 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

648 unused section(s) (total 18923 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/dfix.s                          0x00000000   Number         0  dfix.o ABSOLUTE
    ../fplib/dflt.s                          0x00000000   Number         0  dflt_clz.o ABSOLUTE
    ../fplib/dmul.s                          0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/dnaninf.s                       0x00000000   Number         0  dnaninf.o ABSOLUTE
    ../fplib/dretinf.s                       0x00000000   Number         0  dretinf.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/usenofp.s                       0x00000000   Number         0  usenofp.o ABSOLUTE
    ADC.c                                    0x00000000   Number         0  adc.o ABSOLUTE
    BLE.c                                    0x00000000   Number         0  ble.o ABSOLUTE
    Can.c                                    0x00000000   Number         0  can.o ABSOLUTE
    EXTI.c                                   0x00000000   Number         0  exti.o ABSOLUTE
    EXTI_IRQ.c                               0x00000000   Number         0  exti_irq.o ABSOLUTE
    I2C.c                                    0x00000000   Number         0  i2c.o ABSOLUTE
    ICU.c                                    0x00000000   Number         0  icu.o ABSOLUTE
    NVIC.c                                   0x00000000   Number         0  nvic.o ABSOLUTE
    PWM.c                                    0x00000000   Number         0  pwm.o ABSOLUTE
    RCC.c                                    0x00000000   Number         0  rcc.o ABSOLUTE
    RTE/Device/STM32F303RETx/startup_stm32f303xe.s 0x00000000   Number         0  startup_stm32f303xe.o ABSOLUTE
    Temp_sensor.c                            0x00000000   Number         0  temp_sensor.o ABSOLUTE
    US.c                                     0x00000000   Number         0  us.o ABSOLUTE
    USART.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    clib_arm.c                               0x00000000   Number         0  clib_arm.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    eeprom.c                                 0x00000000   Number         0  eeprom.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    motor.c                                  0x00000000   Number         0  motor.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_stm32f3xx.c                       0x00000000   Number         0  system_stm32f3xx.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      404  startup_stm32f303xe.o(RESET)
    !!!main                                  0x08000194   Section        8  __main.o(!!!main)
    !!!scatter                               0x0800019c   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x080001d0   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x080001ec   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000208   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800020a   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800020e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000210   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000212   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000214   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000214   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000214   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800021a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000222   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000226   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000226   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800022e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000230   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000230   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000234   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0800023c   Number         0  startup_stm32f303xe.o(.text)
    .text                                    0x0800023c   Section       64  startup_stm32f303xe.o(.text)
    .text                                    0x0800027c   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000306   Section       16  aeabi_memset4.o(.text)
    .text                                    0x08000316   Section       68  rt_memclr.o(.text)
    .text                                    0x0800035a   Section        0  heapauxi.o(.text)
    .text                                    0x08000360   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080003c4   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000412   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800045c   Section        0  exit.o(.text)
    .text                                    0x08000470   Section        8  libspace.o(.text)
    .text                                    0x08000478   Section        0  sys_exit.o(.text)
    .text                                    0x08000484   Section        2  use_no_semi.o(.text)
    .text                                    0x08000486   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000488   Section        0  main.o(.text.Button_StateT)
    [Anonymous Symbol]                       0x08000634   Section        0  main.o(.text.CAN_SendDataT)
    [Anonymous Symbol]                       0x08000688   Section        0  can.o(.text.CAN_enuCreateFilter)
    [Anonymous Symbol]                       0x08001c70   Section        0  can.o(.text.CAN_enuInit)
    [Anonymous Symbol]                       0x08001dc4   Section        0  can.o(.text.CAN_enuTransmit)
    [Anonymous Symbol]                       0x080029b4   Section        0  motor.o(.text.DCmotor_Init)
    [Anonymous Symbol]                       0x08002a24   Section        0  motor.o(.text.DCmotor_backMove)
    [Anonymous Symbol]                       0x08002a58   Section        0  motor.o(.text.DCmotor_frontMove)
    [Anonymous Symbol]                       0x08002a8c   Section        0  motor.o(.text.DCmotor_leftMove)
    [Anonymous Symbol]                       0x08002ac0   Section        0  motor.o(.text.DCmotor_rightMove)
    [Anonymous Symbol]                       0x08002af4   Section        0  motor.o(.text.DCmotor_stop)
    [Anonymous Symbol]                       0x08002b28   Section        0  eeprom.o(.text.EEPROM_READ_BYTE)
    [Anonymous Symbol]                       0x08002b78   Section        0  eeprom.o(.text.EEPROM_READ_STRING)
    [Anonymous Symbol]                       0x08002bd0   Section        0  eeprom.o(.text.EEPROM_WRITE_BYTE)
    [Anonymous Symbol]                       0x08002c10   Section        0  eeprom.o(.text.EEPROM_WRITE_STRING)
    [Anonymous Symbol]                       0x08002c68   Section        0  main.o(.text.EEPROM_WriteLogsT)
    [Anonymous Symbol]                       0x08002c84   Section        0  eeprom.o(.text.EEPROM_init)
    [Anonymous Symbol]                       0x08002ccc   Section        0  exti_irq.o(.text.EXTI0_IRQHandler)
    [Anonymous Symbol]                       0x08002cd8   Section        0  exti_irq.o(.text.EXTI15_10_IRQHandler)
    [Anonymous Symbol]                       0x08002d7c   Section        0  exti_irq.o(.text.EXTI1_IRQHandler)
    [Anonymous Symbol]                       0x08002d88   Section        0  exti_irq.o(.text.EXTI2_TSC_IRQHandler)
    [Anonymous Symbol]                       0x08002d94   Section        0  exti_irq.o(.text.EXTI3_IRQHandler)
    [Anonymous Symbol]                       0x08002da0   Section        0  exti_irq.o(.text.EXTI4_IRQHandler)
    [Anonymous Symbol]                       0x08002dac   Section        0  exti_irq.o(.text.EXTI9_5_IRQHandler)
    [Anonymous Symbol]                       0x08002e30   Section        0  gpio.o(.text.GPIO_configurePin)
    [Anonymous Symbol]                       0x08002f14   Section        0  gpio.o(.text.GPIO_readPin)
    [Anonymous Symbol]                       0x08002f60   Section        0  gpio.o(.text.GPIO_setPinFuction)
    [Anonymous Symbol]                       0x08002fe4   Section        0  gpio.o(.text.GPIO_writePin)
    HBLE_VGetChar                            0x08003041   Thumb Code    12  ble.o(.text.HBLE_VGetChar)
    [Anonymous Symbol]                       0x08003040   Section        0  ble.o(.text.HBLE_VGetChar)
    [Anonymous Symbol]                       0x0800304c   Section        0  ble.o(.text.HBLE_VGetKey)
    [Anonymous Symbol]                       0x0800306c   Section        0  ble.o(.text.HBLE_VInit)
    [Anonymous Symbol]                       0x080030f8   Section        0  ble.o(.text.HBLE_VSendReport)
    [Anonymous Symbol]                       0x08003100   Section        0  i2c.o(.text.I2C1_Read_byte)
    [Anonymous Symbol]                       0x08003118   Section        0  i2c.o(.text.I2C1_Write_byte)
    [Anonymous Symbol]                       0x08003130   Section        0  i2c.o(.text.I2C_MASTER_init)
    [Anonymous Symbol]                       0x080031bc   Section        0  i2c.o(.text.I2C_Start)
    [Anonymous Symbol]                       0x080031dc   Section        0  i2c.o(.text.I2C_Stop)
    [Anonymous Symbol]                       0x08003208   Section        0  i2c.o(.text.I2C_init)
    [Anonymous Symbol]                       0x08003240   Section        0  icu.o(.text.ICU_voidClrTimerIcuFlag)
    [Anonymous Symbol]                       0x0800325c   Section        0  icu.o(.text.ICU_voidClrTimerOvFlag)
    [Anonymous Symbol]                       0x08003274   Section        0  icu.o(.text.ICU_voidDisableTimer)
    [Anonymous Symbol]                       0x0800328c   Section        0  icu.o(.text.ICU_voidEnableTimer)
    [Anonymous Symbol]                       0x080032a4   Section        0  icu.o(.text.ICU_voidGetICU_Count)
    [Anonymous Symbol]                       0x080032f8   Section        0  icu.o(.text.ICU_voidGetTimerIcuStatus)
    [Anonymous Symbol]                       0x08003314   Section        0  icu.o(.text.ICU_voidGetTimerOvStatus)
    [Anonymous Symbol]                       0x0800332c   Section        0  icu.o(.text.ICU_voidInitTimer)
    [Anonymous Symbol]                       0x080033d4   Section        0  icu.o(.text.ICU_voidSetArrTime)
    [Anonymous Symbol]                       0x080033e4   Section        0  icu.o(.text.ICU_voidSetCountTime)
    [Anonymous Symbol]                       0x080033f4   Section        0  icu.o(.text.ICU_voidSetSensingEdge)
    [Anonymous Symbol]                       0x08003480   Section        0  nvic.o(.text.MNVIC_EnuEnablePerInterrupt)
    MOTOR_SET_SPEED                          0x080034c9   Thumb Code    34  motor.o(.text.MOTOR_SET_SPEED)
    [Anonymous Symbol]                       0x080034c8   Section        0  motor.o(.text.MOTOR_SET_SPEED)
    [Anonymous Symbol]                       0x080034ec   Section        0  usart.o(.text.MUSART1_VidSendCharSync)
    [Anonymous Symbol]                       0x08003510   Section        0  usart.o(.text.MUSART1_VidSendStringSynch)
    [Anonymous Symbol]                       0x08003534   Section        0  usart.o(.text.MUSART1_VidSetCallBack)
    [Anonymous Symbol]                       0x08003564   Section        0  usart.o(.text.MUSART_voidInit)
    [Anonymous Symbol]                       0x08003774   Section        0  main.o(.text.Motor_SetDirectionT)
    [Anonymous Symbol]                       0x08003844   Section        0  pwm.o(.text.PWM_enu_Init)
    [Anonymous Symbol]                       0x080039e4   Section        0  pwm.o(.text.PWM_enu_SetDutyCycle)
    [Anonymous Symbol]                       0x08003a30   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x08003a90   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08003a94   Section        0  rcc.o(.text.RCC_voidEnablePeripheral)
    [Anonymous Symbol]                       0x08003ae0   Section        0  main.o(.text.Resume_MyTasks)
    [Anonymous Symbol]                       0x08003b20   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08003b40   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08003b44   Section        0  main.o(.text.SYS_INIT)
    [Anonymous Symbol]                       0x08003c24   Section        0  main.o(.text.Suspend_MyTasks)
    [Anonymous Symbol]                       0x08003c64   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08003c84   Section        0  system_stm32f3xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08003c98   Section        0  usart.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x08003cc4   Section        0  usart.o(.text.USART2_IRQHandler)
    [Anonymous Symbol]                       0x08003cf0   Section        0  usart.o(.text.USART3_IRQHandler)
    [Anonymous Symbol]                       0x08003d1c   Section        0  main.o(.text.US_GetDistanceT)
    [Anonymous Symbol]                       0x08003d90   Section        0  us.o(.text.US_voidGetICU_Distance)
    [Anonymous Symbol]                       0x08003dc4   Section        0  us.o(.text.US_voidGetTimeICUStatus)
    [Anonymous Symbol]                       0x08003dd0   Section        0  us.o(.text.US_voidGetTimeStatus)
    [Anonymous Symbol]                       0x08003dd8   Section        0  us.o(.text.US_voidGetUSSensorDistanceTask)
    [Anonymous Symbol]                       0x08003e3c   Section        0  us.o(.text.US_voidInit)
    [Anonymous Symbol]                       0x08003e78   Section        0  us.o(.text.US_voidSetICUTime)
    [Anonymous Symbol]                       0x08003ea4   Section        0  us.o(.text.US_voidSetTrigger)
    [Anonymous Symbol]                       0x08003f5c   Section        0  us.o(.text.US_voidUltraSonicStart)
    __tagsym$$used.1                         0x08003f6c   Number         0  clib_arm.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08003f6c   Section        0  clib_arm.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08003f90   Number         0  clib_arm.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08003f90   Section        0  clib_arm.o(.text._mutex_free)
    __tagsym$$used.0                         0x08003fc4   Number         0  clib_arm.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08003fc4   Section        0  clib_arm.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x08004020   Number         0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08004020   Section        0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08004048   Section        0  clib_arm.o(.text._platform_post_stackheap_init)
    is_thread_mode                           0x0800404d   Thumb Code    12  clib_arm.o(.text.is_thread_mode)
    [Anonymous Symbol]                       0x0800404c   Section        0  clib_arm.o(.text.is_thread_mode)
    [Anonymous Symbol]                       0x08004058   Section        0  main.o(.text.main)
    os_kernel_is_active                      0x08004109   Thumb Code    16  clib_arm.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08004108   Section        0  clib_arm.o(.text.os_kernel_is_active)
    prvAddCurrentTaskToDelayedList           0x08004119   Thumb Code   158  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08004118   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x080041b9   Thumb Code   172  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x080041b8   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x08004265   Thumb Code   108  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x08004264   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x080042d1   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x080042d0   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x08004321   Thumb Code    34  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x08004320   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x08004345   Thumb Code   114  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x08004344   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x080043b9   Thumb Code    34  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x080043b8   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x080043dd   Thumb Code    18  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x080043dc   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x080043f1   Thumb Code    32  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x080043f0   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x08004411   Thumb Code   106  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x08004410   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x0800447d   Thumb Code    28  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0800447c   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x08004499   Thumb Code    32  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x08004498   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x080044b9   Thumb Code    32  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x080044b8   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x080044d9   Thumb Code   138  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x080044d8   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x08004565   Thumb Code   112  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x08004564   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x080045d5   Thumb Code    98  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x080045d4   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x08004639   Thumb Code    64  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x08004638   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x08004679   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x08004678   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x08004691   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x08004690   Section        0  queue.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x080046ad   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x080046ac   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x080046d5   Thumb Code    64  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x080046d4   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x08004715   Thumb Code   250  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x08004714   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x08004811   Thumb Code   128  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x08004810   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x08004891   Thumb Code    58  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x08004890   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x080048cd   Thumb Code    38  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x080048cc   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x080048f5   Thumb Code    42  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x080048f4   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x08004921   Thumb Code    52  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x08004920   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x08004955   Thumb Code    34  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x08004954   Section        0  port.o(.text.prvTaskExitError)
    prvTaskIsTaskSuspended                   0x08004979   Thumb Code    46  tasks.o(.text.prvTaskIsTaskSuspended)
    [Anonymous Symbol]                       0x08004978   Section        0  tasks.o(.text.prvTaskIsTaskSuspended)
    prvTimerTask                             0x080049a9   Thumb Code    22  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x080049a8   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x080049c1   Thumb Code   116  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x080049c0   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08004a34   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08004b20   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x08004b38   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x08004b60   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x08004b88   Section        0  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x08004ba4   Section        0  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x08004bc0   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x08004bc4   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08004bdc   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08004be4   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x08004c20   Section        0  list.o(.text.vListInsertEnd)
    vPortEnableVFP                           0x08004c3d   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08004c3c   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08004c50   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x08004c70   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08004c8c   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08004ce4   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x08004d18   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x08004d28   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x08004d70   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08004da0   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x08004dbc   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x08004dcc   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x08004dec   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x08004e48   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x08004ec8   Section        0  tasks.o(.text.vTaskResume)
    [Anonymous Symbol]                       0x08004f40   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08004fd4   Section        0  tasks.o(.text.vTaskSuspend)
    [Anonymous Symbol]                       0x08005084   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x08005094   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08005094   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08005140   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x0800518c   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x080051bc   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x080051d4   Section        0  queue.o(.text.xQueueCreateMutexStatic)
    [Anonymous Symbol]                       0x080051f8   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x08005244   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x08005280   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x080052e8   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x080053e8   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x080054f4   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x08005628   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08005688   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x080056ec   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x08005740   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x08005768   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x08005774   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x080058bc   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x0800592c   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x080059d4   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08005ab4   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x08005bdc   Section        0  timers.o(.text.xTimerCreateTimerTask)
    $v0                                      0x08005c44   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x08005c44   Section       26  fpinit.o(x$fpl$fpinit)
    .L__const.I2C1_Read_byte.loc_u32_I2Cx    0x08005c60   Data          12  i2c.o(.rodata..L__const.I2C1_Read_byte.loc_u32_I2Cx)
    .L__const.I2C1_Write_byte.loc_u32_I2Cx   0x08005c6c   Data          12  i2c.o(.rodata..L__const.I2C1_Write_byte.loc_u32_I2Cx)
    .L__const.I2C_MASTER_init.loc_u32_I2Cx   0x08005c78   Data          12  i2c.o(.rodata..L__const.I2C_MASTER_init.loc_u32_I2Cx)
    .L__const.I2C_Start.loc_u32_I2Cx         0x08005c84   Data          12  i2c.o(.rodata..L__const.I2C_Start.loc_u32_I2Cx)
    .L__const.I2C_Stop.loc_u32_I2Cx          0x08005c90   Data          12  i2c.o(.rodata..L__const.I2C_Stop.loc_u32_I2Cx)
    .L__const.I2C_init.loc_u32_I2Cx          0x08005c9c   Data          12  i2c.o(.rodata..L__const.I2C_init.loc_u32_I2Cx)
    .L__const.PWM_enu_Init.Timx_BASE         0x08005ca8   Data          12  pwm.o(.rodata..L__const.PWM_enu_Init.Timx_BASE)
    .L__const.PWM_enu_SetDutyCycle.Timx_BASE 0x08005cb4   Data          12  pwm.o(.rodata..L__const.PWM_enu_SetDutyCycle.Timx_BASE)
    .L.str.8                                 0x08005cc0   Data          18  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x08005cc0   Section        0  main.o(.rodata.str1.1)
    .L.str.4                                 0x08005cd2   Data           7  main.o(.rodata.str1.1)
    uxCriticalNesting                        0x20000068   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000068   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000070   Section       96  libspace.o(.bss)
    Button_StateT.counter                    0x200000d4   Data           2  main.o(.bss.Button_StateT.counter)
    [Anonymous Symbol]                       0x200000d4   Section        0  main.o(.bss.Button_StateT.counter)
    US_GetDistanceT.Local_Dist               0x2000013c   Data           2  main.o(.bss.US_GetDistanceT.Local_Dist)
    [Anonymous Symbol]                       0x2000013c   Section        0  main.o(.bss.US_GetDistanceT.Local_Dist)
    US_voidGetUSSensorDistanceTask.US_TimerICUStatus 0x2000013e   Data           1  us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerICUStatus)
    [Anonymous Symbol]                       0x2000013e   Section        0  us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerICUStatus)
    US_voidGetUSSensorDistanceTask.US_TimerStatus 0x2000013f   Data           1  us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerStatus)
    [Anonymous Symbol]                       0x2000013f   Section        0  us.o(.bss.US_voidGetUSSensorDistanceTask.US_TimerStatus)
    clib_mutex_cb                            0x20000140   Data         400  clib_arm.o(.bss.clib_mutex_cb)
    [Anonymous Symbol]                       0x20000140   Section        0  clib_arm.o(.bss.clib_mutex_cb)
    clib_mutex_id                            0x200002d0   Data          20  clib_arm.o(.bss.clib_mutex_id)
    [Anonymous Symbol]                       0x200002d0   Section        0  clib_arm.o(.bss.clib_mutex_id)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x200002e4   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x200002e4   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x20000334   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x20000334   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x20000384   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000384   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20000388   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x2000038c   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x2000038c   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000390   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000390   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000394   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000394   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000398   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000398   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x2000039c   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x2000039c   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x200003a0   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x200003a0   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000800   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000800   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x20002800   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002800   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002804   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002804   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002808   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002808   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x2000280c   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x2000280c   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002810   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002810   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.Idle_Stack 0x20002814   Data         320  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    [Anonymous Symbol]                       0x20002814   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    vApplicationGetIdleTaskMemory.Idle_TCB   0x20002954   Data          92  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    [Anonymous Symbol]                       0x20002954   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    vApplicationGetTimerTaskMemory.Timer_Stack 0x200029b0   Data         320  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    [Anonymous Symbol]                       0x200029b0   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    vApplicationGetTimerTaskMemory.Timer_TCB 0x20002af0   Data          92  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    [Anonymous Symbol]                       0x20002af0   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    xActiveTimerList1                        0x20002b4c   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002b4c   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002b60   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002b60   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20002b74   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002b74   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002b88   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002b88   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002b9c   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002b9c   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002ba0   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002ba0   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002ba4   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002ba4   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002ba8   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002ba8   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002bac   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002bac   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002bb0   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002bb0   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002bb4   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002bb4   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002bb8   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002bb8   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002bbc   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002bbc   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002bd0   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002bd0   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002bd4   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002bd4   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002bdc   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002bdc   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002bf0   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002bf0   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002c04   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002c04   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002c08   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002c08   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002c0c   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002c0c   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002c10   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002c10   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002c18   Data         512  startup_stm32f303xe.o(HEAP)
    HEAP                                     0x20002c18   Section      512  startup_stm32f303xe.o(HEAP)
    Stack_Mem                                0x20002e18   Data        1024  startup_stm32f303xe.o(STACK)
    STACK                                    0x20002e18   Section     1024  startup_stm32f303xe.o(STACK)
    __initial_sp                             0x20003218   Data           0  startup_stm32f303xe.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000194   Number         0  startup_stm32f303xe.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f303xe.o(RESET)
    __Vectors_End                            0x08000194   Data           0  startup_stm32f303xe.o(RESET)
    __main                                   0x08000195   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x0800019d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0800019d   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x0800019d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080001ab   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080001d1   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x080001ed   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000209   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800020b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000211   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000215   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000215   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000215   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800021b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000223   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000227   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000227   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800022f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000235   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0800023d   Thumb Code     8  startup_stm32f303xe.o(.text)
    NMI_Handler                              0x08000245   Thumb Code     2  startup_stm32f303xe.o(.text)
    HardFault_Handler                        0x08000247   Thumb Code     2  startup_stm32f303xe.o(.text)
    MemManage_Handler                        0x08000249   Thumb Code     2  startup_stm32f303xe.o(.text)
    BusFault_Handler                         0x0800024b   Thumb Code     2  startup_stm32f303xe.o(.text)
    UsageFault_Handler                       0x0800024d   Thumb Code     2  startup_stm32f303xe.o(.text)
    DebugMon_Handler                         0x08000251   Thumb Code     2  startup_stm32f303xe.o(.text)
    ADC1_2_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    ADC3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    ADC4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    CAN_RX1_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    CAN_SCE_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP1_2_3_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP4_5_6_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP7_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel2_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel3_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel4_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel5_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel6_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel7_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel1_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel2_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel3_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel4_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel5_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FLASH_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FMC_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FPU_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C1_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C1_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C2_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C2_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C3_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C3_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    PVD_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RCC_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RTC_Alarm_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RTC_WKUP_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI1_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI2_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TAMP_STAMP_IRQHandler                    0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_BRK_TIM15_IRQHandler                0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_CC_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_TRG_COM_TIM17_IRQHandler            0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_UP_TIM16_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_BRK_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_CC_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_TRG_COM_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_UP_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM2_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM6_DAC_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM7_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_BRK_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_CC_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_UP_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    UART4_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    UART5_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USBWakeUp_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USBWakeUp_RMP_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_HP_CAN_TX_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_HP_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_LP_CAN_RX0_IRQHandler                0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_LP_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    WWDG_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    __user_initial_stackheap                 0x08000259   Thumb Code     0  startup_stm32f303xe.o(.text)
    __aeabi_memcpy                           0x0800027d   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0800027d   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080002e3   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x08000307   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x08000307   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x08000317   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x08000317   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0800031b   Thumb Code    64  rt_memclr.o(.text)
    __use_two_region_memory                  0x0800035b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0800035d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0800035f   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x08000361   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000361   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000361   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080003a9   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x080003c5   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080003c5   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080003c5   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x080003c9   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x08000413   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800045d   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000471   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000471   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000479   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000485   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000485   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000487   Thumb Code     0  indicate_semi.o(.text)
    Button_StateT                            0x08000489   Thumb Code   428  main.o(.text.Button_StateT)
    CAN_SendDataT                            0x08000635   Thumb Code    84  main.o(.text.CAN_SendDataT)
    CAN_enuCreateFilter                      0x08000689   Thumb Code  5608  can.o(.text.CAN_enuCreateFilter)
    CAN_enuInit                              0x08001c71   Thumb Code   338  can.o(.text.CAN_enuInit)
    CAN_enuTransmit                          0x08001dc5   Thumb Code  3054  can.o(.text.CAN_enuTransmit)
    DCmotor_Init                             0x080029b5   Thumb Code   110  motor.o(.text.DCmotor_Init)
    DCmotor_backMove                         0x08002a25   Thumb Code    50  motor.o(.text.DCmotor_backMove)
    DCmotor_frontMove                        0x08002a59   Thumb Code    50  motor.o(.text.DCmotor_frontMove)
    DCmotor_leftMove                         0x08002a8d   Thumb Code    50  motor.o(.text.DCmotor_leftMove)
    DCmotor_rightMove                        0x08002ac1   Thumb Code    50  motor.o(.text.DCmotor_rightMove)
    DCmotor_stop                             0x08002af5   Thumb Code    52  motor.o(.text.DCmotor_stop)
    EEPROM_READ_BYTE                         0x08002b29   Thumb Code    78  eeprom.o(.text.EEPROM_READ_BYTE)
    EEPROM_READ_STRING                       0x08002b79   Thumb Code    88  eeprom.o(.text.EEPROM_READ_STRING)
    EEPROM_WRITE_BYTE                        0x08002bd1   Thumb Code    62  eeprom.o(.text.EEPROM_WRITE_BYTE)
    EEPROM_WRITE_STRING                      0x08002c11   Thumb Code    88  eeprom.o(.text.EEPROM_WRITE_STRING)
    EEPROM_WriteLogsT                        0x08002c69   Thumb Code    28  main.o(.text.EEPROM_WriteLogsT)
    EEPROM_init                              0x08002c85   Thumb Code    72  eeprom.o(.text.EEPROM_init)
    EXTI0_IRQHandler                         0x08002ccd   Thumb Code    12  exti_irq.o(.text.EXTI0_IRQHandler)
    EXTI15_10_IRQHandler                     0x08002cd9   Thumb Code   162  exti_irq.o(.text.EXTI15_10_IRQHandler)
    EXTI1_IRQHandler                         0x08002d7d   Thumb Code    12  exti_irq.o(.text.EXTI1_IRQHandler)
    EXTI2_TSC_IRQHandler                     0x08002d89   Thumb Code    12  exti_irq.o(.text.EXTI2_TSC_IRQHandler)
    EXTI3_IRQHandler                         0x08002d95   Thumb Code    12  exti_irq.o(.text.EXTI3_IRQHandler)
    EXTI4_IRQHandler                         0x08002da1   Thumb Code    12  exti_irq.o(.text.EXTI4_IRQHandler)
    EXTI9_5_IRQHandler                       0x08002dad   Thumb Code   132  exti_irq.o(.text.EXTI9_5_IRQHandler)
    GPIO_configurePin                        0x08002e31   Thumb Code   228  gpio.o(.text.GPIO_configurePin)
    GPIO_readPin                             0x08002f15   Thumb Code    76  gpio.o(.text.GPIO_readPin)
    GPIO_setPinFuction                       0x08002f61   Thumb Code   132  gpio.o(.text.GPIO_setPinFuction)
    GPIO_writePin                            0x08002fe5   Thumb Code    92  gpio.o(.text.GPIO_writePin)
    HBLE_VGetKey                             0x0800304d   Thumb Code    30  ble.o(.text.HBLE_VGetKey)
    HBLE_VInit                               0x0800306d   Thumb Code   140  ble.o(.text.HBLE_VInit)
    HBLE_VSendReport                         0x080030f9   Thumb Code     8  ble.o(.text.HBLE_VSendReport)
    I2C1_Read_byte                           0x08003101   Thumb Code    24  i2c.o(.text.I2C1_Read_byte)
    I2C1_Write_byte                          0x08003119   Thumb Code    24  i2c.o(.text.I2C1_Write_byte)
    I2C_MASTER_init                          0x08003131   Thumb Code   138  i2c.o(.text.I2C_MASTER_init)
    I2C_Start                                0x080031bd   Thumb Code    32  i2c.o(.text.I2C_Start)
    I2C_Stop                                 0x080031dd   Thumb Code    42  i2c.o(.text.I2C_Stop)
    I2C_init                                 0x08003209   Thumb Code    56  i2c.o(.text.I2C_init)
    ICU_voidClrTimerIcuFlag                  0x08003241   Thumb Code    28  icu.o(.text.ICU_voidClrTimerIcuFlag)
    ICU_voidClrTimerOvFlag                   0x0800325d   Thumb Code    22  icu.o(.text.ICU_voidClrTimerOvFlag)
    ICU_voidDisableTimer                     0x08003275   Thumb Code    22  icu.o(.text.ICU_voidDisableTimer)
    ICU_voidEnableTimer                      0x0800328d   Thumb Code    22  icu.o(.text.ICU_voidEnableTimer)
    ICU_voidGetICU_Count                     0x080032a5   Thumb Code    84  icu.o(.text.ICU_voidGetICU_Count)
    ICU_voidGetTimerIcuStatus                0x080032f9   Thumb Code    28  icu.o(.text.ICU_voidGetTimerIcuStatus)
    ICU_voidGetTimerOvStatus                 0x08003315   Thumb Code    22  icu.o(.text.ICU_voidGetTimerOvStatus)
    ICU_voidInitTimer                        0x0800332d   Thumb Code   168  icu.o(.text.ICU_voidInitTimer)
    ICU_voidSetArrTime                       0x080033d5   Thumb Code    16  icu.o(.text.ICU_voidSetArrTime)
    ICU_voidSetCountTime                     0x080033e5   Thumb Code    16  icu.o(.text.ICU_voidSetCountTime)
    ICU_voidSetSensingEdge                   0x080033f5   Thumb Code   138  icu.o(.text.ICU_voidSetSensingEdge)
    MNVIC_EnuEnablePerInterrupt              0x08003481   Thumb Code    70  nvic.o(.text.MNVIC_EnuEnablePerInterrupt)
    MUSART1_VidSendCharSync                  0x080034ed   Thumb Code    36  usart.o(.text.MUSART1_VidSendCharSync)
    MUSART1_VidSendStringSynch               0x08003511   Thumb Code    36  usart.o(.text.MUSART1_VidSendStringSynch)
    MUSART1_VidSetCallBack                   0x08003535   Thumb Code    46  usart.o(.text.MUSART1_VidSetCallBack)
    MUSART_voidInit                          0x08003565   Thumb Code   526  usart.o(.text.MUSART_voidInit)
    Motor_SetDirectionT                      0x08003775   Thumb Code   208  main.o(.text.Motor_SetDirectionT)
    PWM_enu_Init                             0x08003845   Thumb Code   416  pwm.o(.text.PWM_enu_Init)
    PWM_enu_SetDutyCycle                     0x080039e5   Thumb Code    68  pwm.o(.text.PWM_enu_SetDutyCycle)
    PendSV_Handler                           0x08003a31   Thumb Code   100  port.o(.text.PendSV_Handler)
    RCC_voidEnablePeripheral                 0x08003a95   Thumb Code    74  rcc.o(.text.RCC_voidEnablePeripheral)
    Resume_MyTasks                           0x08003ae1   Thumb Code    62  main.o(.text.Resume_MyTasks)
    SVC_Handler                              0x08003b21   Thumb Code    36  port.o(.text.SVC_Handler)
    SYS_INIT                                 0x08003b45   Thumb Code   224  main.o(.text.SYS_INIT)
    Suspend_MyTasks                          0x08003c25   Thumb Code    62  main.o(.text.Suspend_MyTasks)
    SysTick_Handler                          0x08003c65   Thumb Code    30  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x08003c85   Thumb Code    18  system_stm32f3xx.o(.text.SystemInit)
    USART1_IRQHandler                        0x08003c99   Thumb Code    42  usart.o(.text.USART1_IRQHandler)
    USART2_IRQHandler                        0x08003cc5   Thumb Code    42  usart.o(.text.USART2_IRQHandler)
    USART3_IRQHandler                        0x08003cf1   Thumb Code    42  usart.o(.text.USART3_IRQHandler)
    US_GetDistanceT                          0x08003d1d   Thumb Code   114  main.o(.text.US_GetDistanceT)
    US_voidGetICU_Distance                   0x08003d91   Thumb Code    52  us.o(.text.US_voidGetICU_Distance)
    US_voidGetTimeICUStatus                  0x08003dc5   Thumb Code    10  us.o(.text.US_voidGetTimeICUStatus)
    US_voidGetTimeStatus                     0x08003dd1   Thumb Code     8  us.o(.text.US_voidGetTimeStatus)
    US_voidGetUSSensorDistanceTask           0x08003dd9   Thumb Code    98  us.o(.text.US_voidGetUSSensorDistanceTask)
    US_voidInit                              0x08003e3d   Thumb Code    58  us.o(.text.US_voidInit)
    US_voidSetICUTime                        0x08003e79   Thumb Code    44  us.o(.text.US_voidSetICUTime)
    US_voidSetTrigger                        0x08003ea5   Thumb Code   184  us.o(.text.US_voidSetTrigger)
    US_voidUltraSonicStart                   0x08003f5d   Thumb Code    14  us.o(.text.US_voidUltraSonicStart)
    _mutex_acquire                           0x08003f6d   Thumb Code    36  clib_arm.o(.text._mutex_acquire)
    _mutex_free                              0x08003f91   Thumb Code    50  clib_arm.o(.text._mutex_free)
    _mutex_initialize                        0x08003fc5   Thumb Code    90  clib_arm.o(.text._mutex_initialize)
    _mutex_release                           0x08004021   Thumb Code    38  clib_arm.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08004049   Thumb Code     2  clib_arm.o(.text._platform_post_stackheap_init)
    main                                     0x08004059   Thumb Code   176  main.o(.text.main)
    pvPortMalloc                             0x08004a35   Thumb Code   234  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x08004b21   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x08004b39   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x08004b61   Thumb Code    40  list.o(.text.uxListRemove)
    vApplicationGetIdleTaskMemory            0x08004b89   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x08004ba5   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x08004bc1   Thumb Code     2  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x08004bc5   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x08004bdd   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x08004be5   Thumb Code    58  list.o(.text.vListInsert)
    vListInsertEnd                           0x08004c21   Thumb Code    28  list.o(.text.vListInsertEnd)
    vPortEnterCritical                       0x08004c51   Thumb Code    32  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x08004c71   Thumb Code    26  port.o(.text.vPortExitCritical)
    vPortFree                                0x08004c8d   Thumb Code    86  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08004ce5   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vQueueDelete                             0x08004d19   Thumb Code    14  queue.o(.text.vQueueDelete)
    vQueueWaitForMessageRestricted           0x08004d29   Thumb Code    70  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x08004d71   Thumb Code    46  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x08004da1   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08004dbd   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08004dcd   Thumb Code    32  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x08004ded   Thumb Code    90  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x08004e49   Thumb Code   128  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskResume                              0x08004ec9   Thumb Code   120  tasks.o(.text.vTaskResume)
    vTaskStartScheduler                      0x08004f41   Thumb Code   148  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspend                             0x08004fd5   Thumb Code   176  tasks.o(.text.vTaskSuspend)
    vTaskSuspendAll                          0x08005085   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08005095   Thumb Code   170  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x08005141   Thumb Code    74  port.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x0800518d   Thumb Code    46  port.o(.text.xPortSysTickHandler)
    xQueueCreateMutex                        0x080051bd   Thumb Code    22  queue.o(.text.xQueueCreateMutex)
    xQueueCreateMutexStatic                  0x080051d5   Thumb Code    34  queue.o(.text.xQueueCreateMutexStatic)
    xQueueGenericCreate                      0x080051f9   Thumb Code    76  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x08005245   Thumb Code    58  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericReset                       0x08005281   Thumb Code   104  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x080052e9   Thumb Code   256  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x080053e9   Thumb Code   266  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x080054f5   Thumb Code   306  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x08005629   Thumb Code    96  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x08005689   Thumb Code   100  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x080056ed   Thumb Code    82  tasks.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x08005741   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x08005769   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x08005775   Thumb Code   328  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x080058bd   Thumb Code   112  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x0800592d   Thumb Code   166  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x080059d5   Thumb Code   224  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08005ab5   Thumb Code   296  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08005bdd   Thumb Code   104  timers.o(.text.xTimerCreateTimerTask)
    _fp_init                                 0x08005c45   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08005c5d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08005c5d   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    uxTopUsedPriority                        0x08005cdc   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x08005ce0   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08005d00   Number         0  anon$$obj.o(Region$$Table)
    G_Key                                    0x20000000   Data           1  ble.o(.data.G_Key)
    Global_u8LogsArr                         0x20000001   Data           3  main.o(.data.Global_u8LogsArr)
    My_Data                                  0x20000004   Data           3  main.o(.data.My_Data)
    PA0                                      0x20000007   Data           4  pwm.o(.data.PA0)
    PB6                                      0x2000000b   Data           4  pwm.o(.data.PB6)
    SCL                                      0x2000000f   Data           4  eeprom.o(.data.SCL)
    SDA                                      0x20000013   Data           4  eeprom.o(.data.SDA)
    SystemCoreClock                          0x20000018   Data           4  system_stm32f3xx.o(.data.SystemCoreClock)
    Timer                                    0x2000001c   Data          12  icu.o(.data.Timer)
    UART                                     0x20000028   Data          10  ble.o(.data.UART)
    UART1                                    0x20000032   Data          10  ble.o(.data.UART1)
    UART_PIN_RX                              0x2000003c   Data           4  ble.o(.data.UART_PIN_RX)
    UART_PIN_RX1                             0x20000040   Data           4  ble.o(.data.UART_PIN_RX1)
    UART_PIN_TX                              0x20000044   Data           4  ble.o(.data.UART_PIN_TX)
    UART_PIN_TX1                             0x20000048   Data           4  ble.o(.data.UART_PIN_TX1)
    arr_Bases                                0x2000004c   Data          12  usart.o(.data.arr_Bases)
    input1PinBack                            0x20000058   Data           4  motor.o(.data.input1PinBack)
    input1PinFront                           0x2000005c   Data           4  motor.o(.data.input1PinFront)
    input2PinBack                            0x20000060   Data           4  motor.o(.data.input2PinBack)
    input2PinFront                           0x20000064   Data           4  motor.o(.data.input2PinFront)
    __libspace_start                         0x20000070   Data          96  libspace.o(.bss)
    Button_StateH                            0x200000d0   Data           4  main.o(.bss.Button_StateH)
    __temporary_stack_top$libspace           0x200000d0   Data           0  libspace.o(.bss)
    CAN_SendDataH                            0x200000d8   Data           4  main.o(.bss.CAN_SendDataH)
    Call_Ptr                                 0x200000dc   Data          60  exti.o(.bss.Call_Ptr)
    EEPROM_WriteLogsTH                       0x20000118   Data           4  main.o(.bss.EEPROM_WriteLogsTH)
    Global_readEEPROM                        0x2000011c   Data           3  main.o(.bss.Global_readEEPROM)
    Global_u8DataArr                         0x2000011f   Data           3  main.o(.bss.Global_u8DataArr)
    Global_u8ManagmentMode                   0x20000122   Data           1  main.o(.bss.Global_u8ManagmentMode)
    MUSART1_CallBack                         0x20000124   Data           4  usart.o(.bss.MUSART1_CallBack)
    MUSART2_CallBack                         0x20000128   Data           4  usart.o(.bss.MUSART2_CallBack)
    MUSART3_CallBack                         0x2000012c   Data           4  usart.o(.bss.MUSART3_CallBack)
    Motor_SetDirectionH                      0x20000130   Data           4  main.o(.bss.Motor_SetDirectionH)
    REC_Data                                 0x20000134   Data           3  main.o(.bss.REC_Data)
    US_GetDistanceH                          0x20000138   Data           4  main.o(.bss.US_GetDistanceH)
    pxCurrentTCB                             0x20000388   Data           4  tasks.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0800023d

  Load Region LR_1 (Base: 0x08000000, Size: 0x00005d6c, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00005d00, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000194   Data   RO          674    RESET               startup_stm32f303xe.o
    0x08000194   0x08000194   0x00000008   Code   RO         1148  * !!!main             c_w.l(__main.o)
    0x0800019c   0x0800019c   0x00000034   Code   RO         1332    !!!scatter          c_w.l(__scatter.o)
    0x080001d0   0x080001d0   0x0000001a   Code   RO         1334    !!handler_copy      c_w.l(__scatter_copy.o)
    0x080001ea   0x080001ea   0x00000002   PAD
    0x080001ec   0x080001ec   0x0000001c   Code   RO         1336    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000208   0x08000208   0x00000002   Code   RO         1194    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800020a   0x0800020a   0x00000004   Code   RO         1200    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1203    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1205    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1208    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1210    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1212    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1215    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1217    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1219    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1221    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1223    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1225    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1227    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1229    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1231    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1233    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1235    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1239    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1241    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1243    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1245    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000002   Code   RO         1246    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000210   0x08000210   0x00000002   Code   RO         1268    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1283    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1285    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1288    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1291    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1293    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1296    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000002   Code   RO         1297    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000214   0x08000214   0x00000000   Code   RO         1162    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000214   0x08000214   0x00000000   Code   RO         1173    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000214   0x08000214   0x00000006   Code   RO         1185    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800021a   0x0800021a   0x00000008   Code   RO         1174    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000222   0x08000222   0x00000004   Code   RO         1176    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000226   0x08000226   0x00000000   Code   RO         1178    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000226   0x08000226   0x00000008   Code   RO         1179    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800022e   0x0800022e   0x00000002   Code   RO         1198    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000230   0x08000230   0x00000000   Code   RO         1248    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000230   0x08000230   0x00000004   Code   RO         1249    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000234   0x08000234   0x00000006   Code   RO         1250    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800023a   0x0800023a   0x00000002   PAD
    0x0800023c   0x0800023c   0x00000040   Code   RO          675  * .text               startup_stm32f303xe.o
    0x0800027c   0x0800027c   0x0000008a   Code   RO         1140    .text               c_w.l(rt_memcpy_v6.o)
    0x08000306   0x08000306   0x00000010   Code   RO         1142    .text               c_w.l(aeabi_memset4.o)
    0x08000316   0x08000316   0x00000044   Code   RO         1144    .text               c_w.l(rt_memclr.o)
    0x0800035a   0x0800035a   0x00000006   Code   RO         1146    .text               c_w.l(heapauxi.o)
    0x08000360   0x08000360   0x00000064   Code   RO         1163    .text               c_w.l(rt_memcpy_w.o)
    0x080003c4   0x080003c4   0x0000004e   Code   RO         1165    .text               c_w.l(rt_memclr_w.o)
    0x08000412   0x08000412   0x0000004a   Code   RO         1187    .text               c_w.l(sys_stackheap_outer.o)
    0x0800045c   0x0800045c   0x00000012   Code   RO         1189    .text               c_w.l(exit.o)
    0x0800046e   0x0800046e   0x00000002   PAD
    0x08000470   0x08000470   0x00000008   Code   RO         1195    .text               c_w.l(libspace.o)
    0x08000478   0x08000478   0x0000000c   Code   RO         1258    .text               c_w.l(sys_exit.o)
    0x08000484   0x08000484   0x00000002   Code   RO         1273    .text               c_w.l(use_no_semi.o)
    0x08000486   0x08000486   0x00000000   Code   RO         1275    .text               c_w.l(indicate_semi.o)
    0x08000486   0x08000486   0x00000002   PAD
    0x08000488   0x08000488   0x000001ac   Code   RO            6    .text.Button_StateT  main.o
    0x08000634   0x08000634   0x00000054   Code   RO            8    .text.CAN_SendDataT  main.o
    0x08000688   0x08000688   0x000015e8   Code   RO          338    .text.CAN_enuCreateFilter  can.o
    0x08001c70   0x08001c70   0x00000152   Code   RO          334    .text.CAN_enuInit   can.o
    0x08001dc2   0x08001dc2   0x00000002   PAD
    0x08001dc4   0x08001dc4   0x00000bee   Code   RO          336    .text.CAN_enuTransmit  can.o
    0x080029b2   0x080029b2   0x00000002   PAD
    0x080029b4   0x080029b4   0x0000006e   Code   RO          234    .text.DCmotor_Init  motor.o
    0x08002a22   0x08002a22   0x00000002   PAD
    0x08002a24   0x08002a24   0x00000032   Code   RO          240    .text.DCmotor_backMove  motor.o
    0x08002a56   0x08002a56   0x00000002   PAD
    0x08002a58   0x08002a58   0x00000032   Code   RO          236    .text.DCmotor_frontMove  motor.o
    0x08002a8a   0x08002a8a   0x00000002   PAD
    0x08002a8c   0x08002a8c   0x00000032   Code   RO          244    .text.DCmotor_leftMove  motor.o
    0x08002abe   0x08002abe   0x00000002   PAD
    0x08002ac0   0x08002ac0   0x00000032   Code   RO          242    .text.DCmotor_rightMove  motor.o
    0x08002af2   0x08002af2   0x00000002   PAD
    0x08002af4   0x08002af4   0x00000034   Code   RO          246    .text.DCmotor_stop  motor.o
    0x08002b28   0x08002b28   0x0000004e   Code   RO          364    .text.EEPROM_READ_BYTE  eeprom.o
    0x08002b76   0x08002b76   0x00000002   PAD
    0x08002b78   0x08002b78   0x00000058   Code   RO          366    .text.EEPROM_READ_STRING  eeprom.o
    0x08002bd0   0x08002bd0   0x0000003e   Code   RO          360    .text.EEPROM_WRITE_BYTE  eeprom.o
    0x08002c0e   0x08002c0e   0x00000002   PAD
    0x08002c10   0x08002c10   0x00000058   Code   RO          362    .text.EEPROM_WRITE_STRING  eeprom.o
    0x08002c68   0x08002c68   0x0000001c   Code   RO           12    .text.EEPROM_WriteLogsT  main.o
    0x08002c84   0x08002c84   0x00000048   Code   RO          358    .text.EEPROM_init   eeprom.o
    0x08002ccc   0x08002ccc   0x0000000c   Code   RO          212    .text.EXTI0_IRQHandler  exti_irq.o
    0x08002cd8   0x08002cd8   0x000000a2   Code   RO          224    .text.EXTI15_10_IRQHandler  exti_irq.o
    0x08002d7a   0x08002d7a   0x00000002   PAD
    0x08002d7c   0x08002d7c   0x0000000c   Code   RO          214    .text.EXTI1_IRQHandler  exti_irq.o
    0x08002d88   0x08002d88   0x0000000c   Code   RO          216    .text.EXTI2_TSC_IRQHandler  exti_irq.o
    0x08002d94   0x08002d94   0x0000000c   Code   RO          218    .text.EXTI3_IRQHandler  exti_irq.o
    0x08002da0   0x08002da0   0x0000000c   Code   RO          220    .text.EXTI4_IRQHandler  exti_irq.o
    0x08002dac   0x08002dac   0x00000084   Code   RO          222    .text.EXTI9_5_IRQHandler  exti_irq.o
    0x08002e30   0x08002e30   0x000000e4   Code   RO           63    .text.GPIO_configurePin  gpio.o
    0x08002f14   0x08002f14   0x0000004c   Code   RO           69    .text.GPIO_readPin  gpio.o
    0x08002f60   0x08002f60   0x00000084   Code   RO           75    .text.GPIO_setPinFuction  gpio.o
    0x08002fe4   0x08002fe4   0x0000005c   Code   RO           65    .text.GPIO_writePin  gpio.o
    0x08003040   0x08003040   0x0000000c   Code   RO          312    .text.HBLE_VGetChar  ble.o
    0x0800304c   0x0800304c   0x0000001e   Code   RO          314    .text.HBLE_VGetKey  ble.o
    0x0800306a   0x0800306a   0x00000002   PAD
    0x0800306c   0x0800306c   0x0000008c   Code   RO          310    .text.HBLE_VInit    ble.o
    0x080030f8   0x080030f8   0x00000008   Code   RO          316    .text.HBLE_VSendReport  ble.o
    0x08003100   0x08003100   0x00000018   Code   RO          389    .text.I2C1_Read_byte  i2c.o
    0x08003118   0x08003118   0x00000018   Code   RO          387    .text.I2C1_Write_byte  i2c.o
    0x08003130   0x08003130   0x0000008a   Code   RO          381    .text.I2C_MASTER_init  i2c.o
    0x080031ba   0x080031ba   0x00000002   PAD
    0x080031bc   0x080031bc   0x00000020   Code   RO          383    .text.I2C_Start     i2c.o
    0x080031dc   0x080031dc   0x0000002a   Code   RO          385    .text.I2C_Stop      i2c.o
    0x08003206   0x08003206   0x00000002   PAD
    0x08003208   0x08003208   0x00000038   Code   RO          379    .text.I2C_init      i2c.o
    0x08003240   0x08003240   0x0000001c   Code   RO          182    .text.ICU_voidClrTimerIcuFlag  icu.o
    0x0800325c   0x0800325c   0x00000016   Code   RO          176    .text.ICU_voidClrTimerOvFlag  icu.o
    0x08003272   0x08003272   0x00000002   PAD
    0x08003274   0x08003274   0x00000016   Code   RO          184    .text.ICU_voidDisableTimer  icu.o
    0x0800328a   0x0800328a   0x00000002   PAD
    0x0800328c   0x0800328c   0x00000016   Code   RO          170    .text.ICU_voidEnableTimer  icu.o
    0x080032a2   0x080032a2   0x00000002   PAD
    0x080032a4   0x080032a4   0x00000054   Code   RO          172    .text.ICU_voidGetICU_Count  icu.o
    0x080032f8   0x080032f8   0x0000001c   Code   RO          178    .text.ICU_voidGetTimerIcuStatus  icu.o
    0x08003314   0x08003314   0x00000016   Code   RO          174    .text.ICU_voidGetTimerOvStatus  icu.o
    0x0800332a   0x0800332a   0x00000002   PAD
    0x0800332c   0x0800332c   0x000000a8   Code   RO          164    .text.ICU_voidInitTimer  icu.o
    0x080033d4   0x080033d4   0x00000010   Code   RO          180    .text.ICU_voidSetArrTime  icu.o
    0x080033e4   0x080033e4   0x00000010   Code   RO          168    .text.ICU_voidSetCountTime  icu.o
    0x080033f4   0x080033f4   0x0000008a   Code   RO          166    .text.ICU_voidSetSensingEdge  icu.o
    0x0800347e   0x0800347e   0x00000002   PAD
    0x08003480   0x08003480   0x00000046   Code   RO           95    .text.MNVIC_EnuEnablePerInterrupt  nvic.o
    0x080034c6   0x080034c6   0x00000002   PAD
    0x080034c8   0x080034c8   0x00000022   Code   RO          238    .text.MOTOR_SET_SPEED  motor.o
    0x080034ea   0x080034ea   0x00000002   PAD
    0x080034ec   0x080034ec   0x00000024   Code   RO          137    .text.MUSART1_VidSendCharSync  usart.o
    0x08003510   0x08003510   0x00000024   Code   RO          139    .text.MUSART1_VidSendStringSynch  usart.o
    0x08003534   0x08003534   0x0000002e   Code   RO          143    .text.MUSART1_VidSetCallBack  usart.o
    0x08003562   0x08003562   0x00000002   PAD
    0x08003564   0x08003564   0x0000020e   Code   RO          135    .text.MUSART_voidInit  usart.o
    0x08003772   0x08003772   0x00000002   PAD
    0x08003774   0x08003774   0x000000d0   Code   RO            4    .text.Motor_SetDirectionT  main.o
    0x08003844   0x08003844   0x000001a0   Code   RO          118    .text.PWM_enu_Init  pwm.o
    0x080039e4   0x080039e4   0x00000044   Code   RO          120    .text.PWM_enu_SetDutyCycle  pwm.o
    0x08003a28   0x08003a28   0x00000008   PAD
    0x08003a30   0x08003a30   0x00000064   Code   RO          777    .text.PendSV_Handler  port.o
    0x08003a94   0x08003a94   0x0000004a   Code   RO           48    .text.RCC_voidEnablePeripheral  rcc.o
    0x08003ade   0x08003ade   0x00000002   PAD
    0x08003ae0   0x08003ae0   0x0000003e   Code   RO           16    .text.Resume_MyTasks  main.o
    0x08003b1e   0x08003b1e   0x00000002   PAD
    0x08003b20   0x08003b20   0x00000024   Code   RO          761    .text.SVC_Handler   port.o
    0x08003b44   0x08003b44   0x000000e0   Code   RO           18    .text.SYS_INIT      main.o
    0x08003c24   0x08003c24   0x0000003e   Code   RO           14    .text.Suspend_MyTasks  main.o
    0x08003c62   0x08003c62   0x00000002   PAD
    0x08003c64   0x08003c64   0x0000001e   Code   RO          465    .text.SysTick_Handler  cmsis_os2.o
    0x08003c82   0x08003c82   0x00000002   PAD
    0x08003c84   0x08003c84   0x00000012   Code   RO          682    .text.SystemInit    system_stm32f3xx.o
    0x08003c96   0x08003c96   0x00000002   PAD
    0x08003c98   0x08003c98   0x0000002a   Code   RO          145    .text.USART1_IRQHandler  usart.o
    0x08003cc2   0x08003cc2   0x00000002   PAD
    0x08003cc4   0x08003cc4   0x0000002a   Code   RO          147    .text.USART2_IRQHandler  usart.o
    0x08003cee   0x08003cee   0x00000002   PAD
    0x08003cf0   0x08003cf0   0x0000002a   Code   RO          149    .text.USART3_IRQHandler  usart.o
    0x08003d1a   0x08003d1a   0x00000002   PAD
    0x08003d1c   0x08003d1c   0x00000072   Code   RO           10    .text.US_GetDistanceT  main.o
    0x08003d8e   0x08003d8e   0x00000002   PAD
    0x08003d90   0x08003d90   0x00000034   Code   RO          280    .text.US_voidGetICU_Distance  us.o
    0x08003dc4   0x08003dc4   0x0000000a   Code   RO          286    .text.US_voidGetTimeICUStatus  us.o
    0x08003dce   0x08003dce   0x00000002   PAD
    0x08003dd0   0x08003dd0   0x00000008   Code   RO          278    .text.US_voidGetTimeStatus  us.o
    0x08003dd8   0x08003dd8   0x00000062   Code   RO          292    .text.US_voidGetUSSensorDistanceTask  us.o
    0x08003e3a   0x08003e3a   0x00000002   PAD
    0x08003e3c   0x08003e3c   0x0000003a   Code   RO          270    .text.US_voidInit   us.o
    0x08003e76   0x08003e76   0x00000002   PAD
    0x08003e78   0x08003e78   0x0000002c   Code   RO          276    .text.US_voidSetICUTime  us.o
    0x08003ea4   0x08003ea4   0x000000b8   Code   RO          274    .text.US_voidSetTrigger  us.o
    0x08003f5c   0x08003f5c   0x0000000e   Code   RO          290    .text.US_voidUltraSonicStart  us.o
    0x08003f6a   0x08003f6a   0x00000002   PAD
    0x08003f6c   0x08003f6c   0x00000024   Code   RO          444    .text._mutex_acquire  clib_arm.o
    0x08003f90   0x08003f90   0x00000032   Code   RO          450    .text._mutex_free   clib_arm.o
    0x08003fc2   0x08003fc2   0x00000002   PAD
    0x08003fc4   0x08003fc4   0x0000005a   Code   RO          442    .text._mutex_initialize  clib_arm.o
    0x0800401e   0x0800401e   0x00000002   PAD
    0x08004020   0x08004020   0x00000026   Code   RO          448    .text._mutex_release  clib_arm.o
    0x08004046   0x08004046   0x00000002   PAD
    0x08004048   0x08004048   0x00000002   Code   RO          436    .text._platform_post_stackheap_init  clib_arm.o
    0x0800404a   0x0800404a   0x00000002   PAD
    0x0800404c   0x0800404c   0x0000000c   Code   RO          446    .text.is_thread_mode  clib_arm.o
    0x08004058   0x08004058   0x000000b0   Code   RO            2    .text.main          main.o
    0x08004108   0x08004108   0x00000010   Code   RO          440    .text.os_kernel_is_active  clib_arm.o
    0x08004118   0x08004118   0x0000009e   Code   RO          926    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x080041b6   0x080041b6   0x00000002   PAD
    0x080041b8   0x080041b8   0x000000ac   Code   RO          912    .text.prvAddNewTaskToReadyList  tasks.o
    0x08004264   0x08004264   0x0000006c   Code   RO         1065    .text.prvCheckForValidListAndQueue  timers.o
    0x080042d0   0x080042d0   0x0000004e   Code   RO         1030    .text.prvCheckTasksWaitingTermination  tasks.o
    0x0800431e   0x0800431e   0x00000002   PAD
    0x08004320   0x08004320   0x00000022   Code   RO          867    .text.prvCopyDataFromQueue  queue.o
    0x08004342   0x08004342   0x00000002   PAD
    0x08004344   0x08004344   0x00000072   Code   RO          855    .text.prvCopyDataToQueue  queue.o
    0x080043b6   0x080043b6   0x00000002   PAD
    0x080043b8   0x080043b8   0x00000022   Code   RO          920    .text.prvDeleteTCB  tasks.o
    0x080043da   0x080043da   0x00000002   PAD
    0x080043dc   0x080043dc   0x00000012   Code   RO          871    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x080043ee   0x080043ee   0x00000002   PAD
    0x080043f0   0x080043f0   0x00000020   Code   RO         1105    .text.prvGetNextExpireTime  timers.o
    0x08004410   0x08004410   0x0000006a   Code   RO          793    .text.prvHeapInit   heap_4.o
    0x0800447a   0x0800447a   0x00000002   PAD
    0x0800447c   0x0800447c   0x0000001c   Code   RO          952    .text.prvIdleTask   tasks.o
    0x08004498   0x08004498   0x00000020   Code   RO          835    .text.prvInitialiseMutex  queue.o
    0x080044b8   0x080044b8   0x00000020   Code   RO          829    .text.prvInitialiseNewQueue  queue.o
    0x080044d8   0x080044d8   0x0000008a   Code   RO          910    .text.prvInitialiseNewTask  tasks.o
    0x08004562   0x08004562   0x00000002   PAD
    0x08004564   0x08004564   0x00000070   Code   RO         1028    .text.prvInitialiseTaskLists  tasks.o
    0x080045d4   0x080045d4   0x00000062   Code   RO          795    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x08004636   0x08004636   0x00000002   PAD
    0x08004638   0x08004638   0x00000040   Code   RO         1119    .text.prvInsertTimerInActiveList  timers.o
    0x08004678   0x08004678   0x00000018   Code   RO          869    .text.prvIsQueueEmpty  queue.o
    0x08004690   0x08004690   0x0000001c   Code   RO          857    .text.prvIsQueueFull  queue.o
    0x080046ac   0x080046ac   0x00000028   Code   RO          769    .text.prvPortStartFirstTask  port.o
    0x080046d4   0x080046d4   0x00000040   Code   RO         1113    .text.prvProcessExpiredTimer  timers.o
    0x08004714   0x08004714   0x000000fa   Code   RO         1109    .text.prvProcessReceivedCommands  timers.o
    0x0800480e   0x0800480e   0x00000002   PAD
    0x08004810   0x08004810   0x00000080   Code   RO         1107    .text.prvProcessTimerOrBlockTask  timers.o
    0x08004890   0x08004890   0x0000003a   Code   RO         1117    .text.prvReloadTimer  timers.o
    0x080048ca   0x080048ca   0x00000002   PAD
    0x080048cc   0x080048cc   0x00000026   Code   RO          918    .text.prvResetNextTaskUnblockTime  tasks.o
    0x080048f2   0x080048f2   0x00000002   PAD
    0x080048f4   0x080048f4   0x0000002a   Code   RO         1111    .text.prvSampleTimeNow  timers.o
    0x0800491e   0x0800491e   0x00000002   PAD
    0x08004920   0x08004920   0x00000034   Code   RO         1115    .text.prvSwitchTimerLists  timers.o
    0x08004954   0x08004954   0x00000022   Code   RO          759    .text.prvTaskExitError  port.o
    0x08004976   0x08004976   0x00000002   PAD
    0x08004978   0x08004978   0x0000002e   Code   RO          946    .text.prvTaskIsTaskSuspended  tasks.o
    0x080049a6   0x080049a6   0x00000002   PAD
    0x080049a8   0x080049a8   0x00000016   Code   RO         1067    .text.prvTimerTask  timers.o
    0x080049be   0x080049be   0x00000002   PAD
    0x080049c0   0x080049c0   0x00000074   Code   RO          859    .text.prvUnlockQueue  queue.o
    0x08004a34   0x08004a34   0x000000ea   Code   RO          791    .text.pvPortMalloc  heap_4.o
    0x08004b1e   0x08004b1e   0x00000002   PAD
    0x08004b20   0x08004b20   0x00000018   Code   RO         1012    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x08004b38   0x08004b38   0x00000028   Code   RO          757    .text.pxPortInitialiseStack  port.o
    0x08004b60   0x08004b60   0x00000028   Code   RO          746    .text.uxListRemove  list.o
    0x08004b88   0x08004b88   0x0000001a   Code   RO          623    .text.vApplicationGetIdleTaskMemory  cmsis_os2.o
    0x08004ba2   0x08004ba2   0x00000002   PAD
    0x08004ba4   0x08004ba4   0x0000001a   Code   RO          625    .text.vApplicationGetTimerTaskMemory  cmsis_os2.o
    0x08004bbe   0x08004bbe   0x00000002   PAD
    0x08004bc0   0x08004bc0   0x00000002   Code   RO          621    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x08004bc2   0x08004bc2   0x00000002   PAD
    0x08004bc4   0x08004bc4   0x00000016   Code   RO          738    .text.vListInitialise  list.o
    0x08004bda   0x08004bda   0x00000002   PAD
    0x08004bdc   0x08004bdc   0x00000006   Code   RO          740    .text.vListInitialiseItem  list.o
    0x08004be2   0x08004be2   0x00000002   PAD
    0x08004be4   0x08004be4   0x0000003a   Code   RO          744    .text.vListInsert   list.o
    0x08004c1e   0x08004c1e   0x00000002   PAD
    0x08004c20   0x08004c20   0x0000001c   Code   RO          742    .text.vListInsertEnd  list.o
    0x08004c3c   0x08004c3c   0x00000014   Code   RO          767    .text.vPortEnableVFP  port.o
    0x08004c50   0x08004c50   0x00000020   Code   RO          773    .text.vPortEnterCritical  port.o
    0x08004c70   0x08004c70   0x0000001a   Code   RO          775    .text.vPortExitCritical  port.o
    0x08004c8a   0x08004c8a   0x00000002   PAD
    0x08004c8c   0x08004c8c   0x00000056   Code   RO          797    .text.vPortFree     heap_4.o
    0x08004ce2   0x08004ce2   0x00000002   PAD
    0x08004ce4   0x08004ce4   0x00000034   Code   RO          765    .text.vPortSetupTimerInterrupt  port.o
    0x08004d18   0x08004d18   0x0000000e   Code   RO          885    .text.vQueueDelete  queue.o
    0x08004d26   0x08004d26   0x00000002   PAD
    0x08004d28   0x08004d28   0x00000046   Code   RO          897    .text.vQueueWaitForMessageRestricted  queue.o
    0x08004d6e   0x08004d6e   0x00000002   PAD
    0x08004d70   0x08004d70   0x0000002e   Code   RO          930    .text.vTaskDelay    tasks.o
    0x08004d9e   0x08004d9e   0x00000002   PAD
    0x08004da0   0x08004da0   0x0000001a   Code   RO          984    .text.vTaskInternalSetTimeOutState  tasks.o
    0x08004dba   0x08004dba   0x00000002   PAD
    0x08004dbc   0x08004dbc   0x0000000e   Code   RO          988    .text.vTaskMissedYield  tasks.o
    0x08004dca   0x08004dca   0x00000002   PAD
    0x08004dcc   0x08004dcc   0x00000020   Code   RO          972    .text.vTaskPlaceOnEventList  tasks.o
    0x08004dec   0x08004dec   0x0000005a   Code   RO          976    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x08004e46   0x08004e46   0x00000002   PAD
    0x08004e48   0x08004e48   0x00000080   Code   RO         1008    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x08004ec8   0x08004ec8   0x00000078   Code   RO          944    .text.vTaskResume   tasks.o
    0x08004f40   0x08004f40   0x00000094   Code   RO          950    .text.vTaskStartScheduler  tasks.o
    0x08004fd4   0x08004fd4   0x000000b0   Code   RO          940    .text.vTaskSuspend  tasks.o
    0x08005084   0x08005084   0x00000010   Code   RO          924    .text.vTaskSuspendAll  tasks.o
    0x08005094   0x08005094   0x000000aa   Code   RO          942    .text.vTaskSwitchContext  tasks.o
    0x0800513e   0x0800513e   0x00000002   PAD
    0x08005140   0x08005140   0x0000004a   Code   RO          763    .text.xPortStartScheduler  port.o
    0x0800518a   0x0800518a   0x00000002   PAD
    0x0800518c   0x0800518c   0x0000002e   Code   RO          779    .text.xPortSysTickHandler  port.o
    0x080051ba   0x080051ba   0x00000002   PAD
    0x080051bc   0x080051bc   0x00000016   Code   RO          833    .text.xQueueCreateMutex  queue.o
    0x080051d2   0x080051d2   0x00000002   PAD
    0x080051d4   0x080051d4   0x00000022   Code   RO          837    .text.xQueueCreateMutexStatic  queue.o
    0x080051f6   0x080051f6   0x00000002   PAD
    0x080051f8   0x080051f8   0x0000004c   Code   RO          831    .text.xQueueGenericCreate  queue.o
    0x08005244   0x08005244   0x0000003a   Code   RO          827    .text.xQueueGenericCreateStatic  queue.o
    0x0800527e   0x0800527e   0x00000002   PAD
    0x08005280   0x08005280   0x00000068   Code   RO          825    .text.xQueueGenericReset  queue.o
    0x080052e8   0x080052e8   0x00000100   Code   RO          845    .text.xQueueGenericSend  queue.o
    0x080053e8   0x080053e8   0x0000010a   Code   RO          865    .text.xQueueReceive  queue.o
    0x080054f2   0x080054f2   0x00000002   PAD
    0x080054f4   0x080054f4   0x00000132   Code   RO          849    .text.xQueueSemaphoreTake  queue.o
    0x08005626   0x08005626   0x00000002   PAD
    0x08005628   0x08005628   0x00000060   Code   RO          986    .text.xTaskCheckForTimeOut  tasks.o
    0x08005688   0x08005688   0x00000064   Code   RO          914    .text.xTaskCreate   tasks.o
    0x080056ec   0x080056ec   0x00000052   Code   RO          908    .text.xTaskCreateStatic  tasks.o
    0x0800573e   0x0800573e   0x00000002   PAD
    0x08005740   0x08005740   0x00000026   Code   RO         1002    .text.xTaskGetSchedulerState  tasks.o
    0x08005766   0x08005766   0x00000002   PAD
    0x08005768   0x08005768   0x0000000c   Code   RO          958    .text.xTaskGetTickCount  tasks.o
    0x08005774   0x08005774   0x00000148   Code   RO          956    .text.xTaskIncrementTick  tasks.o
    0x080058bc   0x080058bc   0x00000070   Code   RO         1006    .text.xTaskPriorityDisinherit  tasks.o
    0x0800592c   0x0800592c   0x000000a6   Code   RO         1004    .text.xTaskPriorityInherit  tasks.o
    0x080059d2   0x080059d2   0x00000002   PAD
    0x080059d4   0x080059d4   0x000000e0   Code   RO          978    .text.xTaskRemoveFromEventList  tasks.o
    0x08005ab4   0x08005ab4   0x00000128   Code   RO          928    .text.xTaskResumeAll  tasks.o
    0x08005bdc   0x08005bdc   0x00000068   Code   RO         1063    .text.xTimerCreateTimerTask  timers.o
    0x08005c44   0x08005c44   0x0000001a   Code   RO         1256    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08005c5e   0x08005c5e   0x00000002   PAD
    0x08005c60   0x08005c60   0x0000000c   Data   RO          396    .rodata..L__const.I2C1_Read_byte.loc_u32_I2Cx  i2c.o
    0x08005c6c   0x08005c6c   0x0000000c   Data   RO          395    .rodata..L__const.I2C1_Write_byte.loc_u32_I2Cx  i2c.o
    0x08005c78   0x08005c78   0x0000000c   Data   RO          392    .rodata..L__const.I2C_MASTER_init.loc_u32_I2Cx  i2c.o
    0x08005c84   0x08005c84   0x0000000c   Data   RO          393    .rodata..L__const.I2C_Start.loc_u32_I2Cx  i2c.o
    0x08005c90   0x08005c90   0x0000000c   Data   RO          394    .rodata..L__const.I2C_Stop.loc_u32_I2Cx  i2c.o
    0x08005c9c   0x08005c9c   0x0000000c   Data   RO          391    .rodata..L__const.I2C_init.loc_u32_I2Cx  i2c.o
    0x08005ca8   0x08005ca8   0x0000000c   Data   RO          124    .rodata..L__const.PWM_enu_Init.Timx_BASE  pwm.o
    0x08005cb4   0x08005cb4   0x0000000c   Data   RO          125    .rodata..L__const.PWM_enu_SetDutyCycle.Timx_BASE  pwm.o
    0x08005cc0   0x08005cc0   0x00000019   Data   RO           33    .rodata.str1.1      main.o
    0x08005cd9   0x08005cd9   0x00000003   PAD
    0x08005cdc   0x08005cdc   0x00000004   Data   RO         1033    .rodata.uxTopUsedPriority  tasks.o
    0x08005ce0   0x08005ce0   0x00000020   Data   RO         1331    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08005d00, Size: 0x0000006c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08005d00   0x00000001   Data   RW          318    .data.G_Key         ble.o
    0x20000001   0x08005d01   0x00000003   Data   RW           20    .data.Global_u8LogsArr  main.o
    0x20000004   0x08005d04   0x00000003   Data   RW           22    .data.My_Data       main.o
    0x20000007   0x08005d07   0x00000004   Data   RW          122    .data.PA0           pwm.o
    0x2000000b   0x08005d0b   0x00000004   Data   RW          123    .data.PB6           pwm.o
    0x2000000f   0x08005d0f   0x00000004   Data   RW          368    .data.SCL           eeprom.o
    0x20000013   0x08005d13   0x00000004   Data   RW          369    .data.SDA           eeprom.o
    0x20000017   0x08005d17   0x00000001   PAD
    0x20000018   0x08005d18   0x00000004   Data   RW          686    .data.SystemCoreClock  system_stm32f3xx.o
    0x2000001c   0x08005d1c   0x0000000c   Data   RW          186    .data.Timer         icu.o
    0x20000028   0x08005d28   0x0000000a   Data   RW          323    .data.UART          ble.o
    0x20000032   0x08005d32   0x0000000a   Data   RW          324    .data.UART1         ble.o
    0x2000003c   0x08005d3c   0x00000004   Data   RW          320    .data.UART_PIN_RX   ble.o
    0x20000040   0x08005d40   0x00000004   Data   RW          322    .data.UART_PIN_RX1  ble.o
    0x20000044   0x08005d44   0x00000004   Data   RW          319    .data.UART_PIN_TX   ble.o
    0x20000048   0x08005d48   0x00000004   Data   RW          321    .data.UART_PIN_TX1  ble.o
    0x2000004c   0x08005d4c   0x0000000c   Data   RW          151    .data.arr_Bases     usart.o
    0x20000058   0x08005d58   0x00000004   Data   RW          256    .data.input1PinBack  motor.o
    0x2000005c   0x08005d5c   0x00000004   Data   RW          257    .data.input1PinFront  motor.o
    0x20000060   0x08005d60   0x00000004   Data   RW          258    .data.input2PinBack  motor.o
    0x20000064   0x08005d64   0x00000004   Data   RW          259    .data.input2PinFront  motor.o
    0x20000068   0x08005d68   0x00000004   Data   RW          781    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000070, Load base: 0x08005d6c, Size: 0x000031a8, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000070        -       0x00000060   Zero   RW         1196    .bss                c_w.l(libspace.o)
    0x200000d0        -       0x00000004   Zero   RW           24    .bss.Button_StateH  main.o
    0x200000d4        -       0x00000002   Zero   RW           31    .bss.Button_StateT.counter  main.o
    0x200000d6   0x08005d6c   0x00000002   PAD
    0x200000d8        -       0x00000004   Zero   RW           25    .bss.CAN_SendDataH  main.o
    0x200000dc        -       0x0000003c   Zero   RW          202    .bss.Call_Ptr       exti.o
    0x20000118        -       0x00000004   Zero   RW           27    .bss.EEPROM_WriteLogsTH  main.o
    0x2000011c        -       0x00000003   Zero   RW           32    .bss.Global_readEEPROM  main.o
    0x2000011f        -       0x00000003   Zero   RW           30    .bss.Global_u8DataArr  main.o
    0x20000122        -       0x00000001   Zero   RW           21    .bss.Global_u8ManagmentMode  main.o
    0x20000123   0x08005d6c   0x00000001   PAD
    0x20000124        -       0x00000004   Zero   RW          152    .bss.MUSART1_CallBack  usart.o
    0x20000128        -       0x00000004   Zero   RW          153    .bss.MUSART2_CallBack  usart.o
    0x2000012c        -       0x00000004   Zero   RW          154    .bss.MUSART3_CallBack  usart.o
    0x20000130        -       0x00000004   Zero   RW           23    .bss.Motor_SetDirectionH  main.o
    0x20000134        -       0x00000003   Zero   RW           28    .bss.REC_Data       main.o
    0x20000137   0x08005d6c   0x00000001   PAD
    0x20000138        -       0x00000004   Zero   RW           26    .bss.US_GetDistanceH  main.o
    0x2000013c        -       0x00000002   Zero   RW           29    .bss.US_GetDistanceT.Local_Dist  main.o
    0x2000013e        -       0x00000001   Zero   RW          300    .bss.US_voidGetUSSensorDistanceTask.US_TimerICUStatus  us.o
    0x2000013f        -       0x00000001   Zero   RW          299    .bss.US_voidGetUSSensorDistanceTask.US_TimerStatus  us.o
    0x20000140        -       0x00000190   Zero   RW          455    .bss.clib_mutex_cb  clib_arm.o
    0x200002d0        -       0x00000014   Zero   RW          454    .bss.clib_mutex_id  clib_arm.o
    0x200002e4        -       0x00000050   Zero   RW         1129    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x20000334        -       0x00000050   Zero   RW         1128    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x20000384        -       0x00000004   Zero   RW         1125    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000388        -       0x00000004   Zero   RW         1032    .bss.pxCurrentTCB   tasks.o
    0x2000038c        -       0x00000004   Zero   RW         1123    .bss.pxCurrentTimerList  timers.o
    0x20000390        -       0x00000004   Zero   RW         1040    .bss.pxDelayedTaskList  tasks.o
    0x20000394        -       0x00000004   Zero   RW          809    .bss.pxEnd          heap_4.o
    0x20000398        -       0x00000004   Zero   RW         1041    .bss.pxOverflowDelayedTaskList  tasks.o
    0x2000039c        -       0x00000004   Zero   RW         1124    .bss.pxOverflowTimerList  timers.o
    0x200003a0        -       0x00000460   Zero   RW         1043    .bss.pxReadyTasksLists  tasks.o
    0x20000800        -       0x00002000   Zero   RW          815    .bss.ucHeap         heap_4.o
    0x20002800        -       0x00000004   Zero   RW         1037    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002804        -       0x00000004   Zero   RW         1036    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002808        -       0x00000004   Zero   RW         1045    .bss.uxSchedulerSuspended  tasks.o
    0x2000280c        -       0x00000004   Zero   RW         1034    .bss.uxTaskNumber   tasks.o
    0x20002810        -       0x00000004   Zero   RW         1044    .bss.uxTopReadyPriority  tasks.o
    0x20002814        -       0x00000140   Zero   RW          631    .bss.vApplicationGetIdleTaskMemory.Idle_Stack  cmsis_os2.o
    0x20002954        -       0x0000005c   Zero   RW          630    .bss.vApplicationGetIdleTaskMemory.Idle_TCB  cmsis_os2.o
    0x200029b0        -       0x00000140   Zero   RW          633    .bss.vApplicationGetTimerTaskMemory.Timer_Stack  cmsis_os2.o
    0x20002af0        -       0x0000005c   Zero   RW          632    .bss.vApplicationGetTimerTaskMemory.Timer_TCB  cmsis_os2.o
    0x20002b4c        -       0x00000014   Zero   RW         1126    .bss.xActiveTimerList1  timers.o
    0x20002b60        -       0x00000014   Zero   RW         1127    .bss.xActiveTimerList2  timers.o
    0x20002b74        -       0x00000014   Zero   RW         1052    .bss.xDelayedTaskList1  tasks.o
    0x20002b88        -       0x00000014   Zero   RW         1053    .bss.xDelayedTaskList2  tasks.o
    0x20002b9c        -       0x00000004   Zero   RW          810    .bss.xFreeBytesRemaining  heap_4.o
    0x20002ba0        -       0x00000004   Zero   RW         1048    .bss.xIdleTaskHandle  tasks.o
    0x20002ba4        -       0x00000004   Zero   RW          812    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002ba8        -       0x00000004   Zero   RW         1049    .bss.xNextTaskUnblockTime  tasks.o
    0x20002bac        -       0x00000004   Zero   RW         1051    .bss.xNumOfOverflows  tasks.o
    0x20002bb0        -       0x00000004   Zero   RW          813    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002bb4        -       0x00000004   Zero   RW          814    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002bb8        -       0x00000004   Zero   RW         1050    .bss.xPendedTicks   tasks.o
    0x20002bbc        -       0x00000014   Zero   RW         1047    .bss.xPendingReadyList  tasks.o
    0x20002bd0        -       0x00000004   Zero   RW         1038    .bss.xSchedulerRunning  tasks.o
    0x20002bd4        -       0x00000008   Zero   RW          811    .bss.xStart         heap_4.o
    0x20002bdc        -       0x00000014   Zero   RW         1042    .bss.xSuspendedTaskList  tasks.o
    0x20002bf0        -       0x00000014   Zero   RW         1035    .bss.xTasksWaitingTermination  tasks.o
    0x20002c04        -       0x00000004   Zero   RW         1039    .bss.xTickCount     tasks.o
    0x20002c08        -       0x00000004   Zero   RW         1121    .bss.xTimerQueue    timers.o
    0x20002c0c        -       0x00000004   Zero   RW         1122    .bss.xTimerTaskHandle  timers.o
    0x20002c10        -       0x00000004   Zero   RW         1046    .bss.xYieldPending  tasks.o
    0x20002c14   0x08005d6c   0x00000004   PAD
    0x20002c18        -       0x00000200   Zero   RW          673    HEAP                startup_stm32f303xe.o
    0x20002e18        -       0x00000400   Zero   RW          672    STACK               startup_stm32f303xe.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       190          0          0         37          0       2926   ble.o
      9000         76          0          0          0      19064   can.o
       244          0          0          0        420       3875   clib_arm.o
        84          0          0          0        824      38703   cmsis_os2.o
       388          0          0          8          0       3418   eeprom.o
         0          0          0          0         60       1554   exti.o
       354          0          0          0          0       1118   exti_irq.o
       528        128          0          0          0       5660   gpio.o
       524          0          0          0       8220       4672   heap_4.o
       316          0         72          0          0       2636   i2c.o
       566          8          0         12          0       3294   icu.o
       154          0          0          0          0       2254   list.o
      1386        198         25          6         34       6821   main.o
       396          0          0         16          0       3348   motor.o
        70          0          0          0          0       3331   nvic.o
       500         16          0          4          0       2940   port.o
       484          4         24          8          0       3490   pwm.o
      1604          0          0          0          0      17493   queue.o
        74          0          0          0          0       1513   rcc.o
        64         26        404          0       1536        896   startup_stm32f303xe.o
        18          0          0          4          0       2272   system_stm32f3xx.o
      3248          8          4          0       1280      27646   tasks.o
       924         18          0          0        220      12438   timers.o
       468          0          0          0          2       5672   us.o
       770          8          0         12         12       3427   usart.o

    ----------------------------------------------------------------------
     22524        490        564        108      12616     180461   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       170          0          3          1          8          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       720         16          0          0         96       1064   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       684         16          0          0         96        948   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       720         16          0          0         96       1064   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     23244        506        564        108      12712     180669   Grand Totals
     23244        506        564        108      12712     180669   ELF Image Totals
     23244        506        564        108          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                23808 (  23.25kB)
    Total RW  Size (RW Data + ZI Data)             12820 (  12.52kB)
    Total ROM Size (Code + RO Data + RW Data)      23916 (  23.36kB)

==============================================================================

