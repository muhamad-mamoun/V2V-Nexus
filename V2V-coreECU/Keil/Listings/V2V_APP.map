Component: ARM Compiler 6.13.1 Tool: armlink [5d895400]

==============================================================================

Section Cross References

    main.o(.text.Motor_SetDirectionT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.Motor_SetDirectionT) refers to main.o(.data..L_MergedGlobals) for .L_MergedGlobals
    main.o(.text.Motor_SetDirectionT) refers to main.o(.bss.REC_Data) for REC_Data
    main.o(.text.Motor_SetDirectionT) refers to ble.o(.text.HBLE_VGetKey) for HBLE_VGetKey
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_stop) for DCmotor_stop
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_backMove) for DCmotor_backMove
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_leftMove) for DCmotor_leftMove
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_rightMove) for DCmotor_rightMove
    main.o(.text.Motor_SetDirectionT) refers to motor.o(.text.DCmotor_frontMove) for DCmotor_frontMove
    main.o(.ARM.exidx.text.Motor_SetDirectionT) refers to main.o(.text.Motor_SetDirectionT) for [Anonymous Symbol]
    main.o(.text.EEPROM_WriteLogsT) refers to main.o(.data..L_MergedGlobals) for .L_MergedGlobals
    main.o(.text.EEPROM_WriteLogsT) refers to eeprom.o(.text.EEPROM_WRITE_STRING) for EEPROM_WRITE_STRING
    main.o(.text.EEPROM_WriteLogsT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.EEPROM_WriteLogsT) refers to main.o(.text.EEPROM_WriteLogsT) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.TEMP_GetTempT) refers to main.o(.text.TEMP_GetTempT) for [Anonymous Symbol]
    main.o(.text.US_GetDistanceT) refers to main.o(.bss.US_GetDistanceT.Local_Dist) for US_GetDistanceT.Local_Dist
    main.o(.text.US_GetDistanceT) refers to main.o(.data..L_MergedGlobals) for .L_MergedGlobals
    main.o(.text.US_GetDistanceT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.US_GetDistanceT) refers to us.o(.text.US_voidUltraSonicStart) for US_voidUltraSonicStart
    main.o(.text.US_GetDistanceT) refers to us.o(.text.US_voidGetUSSensorDistanceTask) for US_voidGetUSSensorDistanceTask
    main.o(.ARM.exidx.text.US_GetDistanceT) refers to main.o(.text.US_GetDistanceT) for [Anonymous Symbol]
    main.o(.text.CAN_SendDataT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.CAN_SendDataT) refers to main.o(.data..L_MergedGlobals) for .L_MergedGlobals
    main.o(.text.CAN_SendDataT) refers to main.o(.bss.Global_u8DataArr) for Global_u8DataArr
    main.o(.text.CAN_SendDataT) refers to can.o(.text.CAN_enuTransmit) for CAN_enuTransmit
    main.o(.ARM.exidx.text.CAN_SendDataT) refers to main.o(.text.CAN_SendDataT) for [Anonymous Symbol]
    main.o(.text.CAN_RevieveDataT) refers to can.o(.bss.ARR_Recieved_Data) for ARR_Recieved_Data
    main.o(.text.CAN_RevieveDataT) refers to main.o(.bss.REC_Data) for REC_Data
    main.o(.text.CAN_RevieveDataT) refers to can.o(.text.CAN_enuRecieve) for CAN_enuRecieve
    main.o(.text.CAN_RevieveDataT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.ARM.exidx.text.CAN_RevieveDataT) refers to main.o(.text.CAN_RevieveDataT) for [Anonymous Symbol]
    main.o(.text.Button_StateT) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    main.o(.text.Button_StateT) refers to main.o(.bss..L_MergedGlobals.1) for .L_MergedGlobals.1
    main.o(.text.Button_StateT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    main.o(.text.Button_StateT) refers to gpio.o(.text.GPIO_readPin) for GPIO_readPin
    main.o(.text.Button_StateT) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    main.o(.text.Button_StateT) refers to eeprom.o(.text.EEPROM_READ_STRING) for EEPROM_READ_STRING
    main.o(.ARM.exidx.text.Button_StateT) refers to main.o(.text.Button_StateT) for [Anonymous Symbol]
    main.o(.text.CAN_voidSysInit) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    main.o(.text.CAN_voidSysInit) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    main.o(.text.CAN_voidSysInit) refers to main.o(.rodata.cst16) for .L__const.CAN_voidSysInit.R_Filter
    main.o(.text.CAN_voidSysInit) refers to can.o(.text.CAN_enuCreateFilter) for CAN_enuCreateFilter
    main.o(.text.CAN_voidSysInit) refers to can.o(.text.CAN_enuInit) for CAN_enuInit
    main.o(.ARM.exidx.text.CAN_voidSysInit) refers to main.o(.text.CAN_voidSysInit) for [Anonymous Symbol]
    main.o(.text.main) refers to rcc.o(.text.RCC_voidEnablePeripheral) for RCC_voidEnablePeripheral
    main.o(.text.main) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    main.o(.text.main) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    main.o(.text.main) refers to main.o(.rodata.cst16) for .L__const.CAN_voidSysInit.R_Filter
    main.o(.text.main) refers to can.o(.text.CAN_enuCreateFilter) for CAN_enuCreateFilter
    main.o(.text.main) refers to can.o(.text.CAN_enuInit) for CAN_enuInit
    main.o(.text.main) refers to motor.o(.text.DCmotor_Init) for DCmotor_Init
    main.o(.text.main) refers to us.o(.text.US_voidInit) for US_voidInit
    main.o(.text.main) refers to ble.o(.text.HBLE_VInit) for HBLE_VInit
    main.o(.text.main) refers to eeprom.o(.text.EEPROM_init) for EEPROM_init
    main.o(.text.main) refers to main.o(.text.Motor_SetDirectionT) for Motor_SetDirectionT
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to main.o(.text.Button_StateT) for Button_StateT
    main.o(.text.main) refers to main.o(.text.CAN_SendDataT) for CAN_SendDataT
    main.o(.text.main) refers to main.o(.text.CAN_RevieveDataT) for CAN_RevieveDataT
    main.o(.text.main) refers to main.o(.text.US_GetDistanceT) for US_GetDistanceT
    main.o(.text.main) refers to main.o(.text.EEPROM_WriteLogsT) for EEPROM_WriteLogsT
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.RCC_voidInitSYSCLK) refers to rcc.o(.text.RCC_voidInitSYSCLK) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.RCC_voidEnablePeripheral) refers to rcc.o(.text.RCC_voidEnablePeripheral) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.RCC_voidDisablePeripheral) refers to rcc.o(.text.RCC_voidDisablePeripheral) for [Anonymous Symbol]
    gpio.o(.text.GPIO_init) refers to gpio.o(.rodata..L__const.GPIO_init.LOC_pinsConfigurations) for .L__const.GPIO_init.LOC_pinsConfigurations
    gpio.o(.text.GPIO_init) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_lockPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_init) refers to gpio.o(.text.GPIO_init) for [Anonymous Symbol]
    gpio.o(.text.GPIO_configurePin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_lockPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_configurePin) refers to gpio.o(.text.GPIO_configurePin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_writePin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_lockPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_writePin) refers to gpio.o(.text.GPIO_writePin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_writePort) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_lockPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_writePort) refers to gpio.o(.text.GPIO_writePort) for [Anonymous Symbol]
    gpio.o(.text.GPIO_readPin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_lockPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_readPin) refers to gpio.o(.text.GPIO_readPin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_readPort) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_lockPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_readPort) refers to gpio.o(.text.GPIO_readPort) for [Anonymous Symbol]
    gpio.o(.text.GPIO_togglePin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_lockPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_togglePin) refers to gpio.o(.text.GPIO_togglePin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_setPinFuction) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_lockPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_setPinFuction) refers to gpio.o(.text.GPIO_setPinFuction) for [Anonymous Symbol]
    gpio.o(.text.GPIO_lockPin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_lockPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_lockPin) refers to gpio.o(.text.GPIO_lockPin) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.NVIC_Init) refers to nvic.o(.text.NVIC_Init) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC__Venable_irq) refers to nvic.o(.text.MNVIC__Venable_irq) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC__Vdisable_irq) refers to nvic.o(.text.MNVIC__Vdisable_irq) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuEnablePerInterrupt) refers to nvic.o(.text.MNVIC_EnuEnablePerInterrupt) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuDisablePerInterrupt) refers to nvic.o(.text.MNVIC_EnuDisablePerInterrupt) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuSetPendingFlag) refers to nvic.o(.text.MNVIC_EnuSetPendingFlag) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuClearPendingFlag) refers to nvic.o(.text.MNVIC_EnuClearPendingFlag) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuActiveFlagStatus) refers to nvic.o(.text.MNVIC_EnuActiveFlagStatus) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuSetPriorityGroup) refers to nvic.o(.text.MNVIC_EnuSetPriorityGroup) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_VSystemReset) refers to nvic.o(.text.MNVIC_VSystemReset) for [Anonymous Symbol]
    pwm.o(.text.PWM_enu_Init) refers to pwm.o(.rodata..L__const.PWM_enu_SetDutyCycle.Timx_BASE) for .L__const.PWM_enu_SetDutyCycle.Timx_BASE
    pwm.o(.text.PWM_enu_Init) refers to pwm.o(.data..L_MergedGlobals) for .L_MergedGlobals
    pwm.o(.text.PWM_enu_Init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    pwm.o(.text.PWM_enu_Init) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    pwm.o(.ARM.exidx.text.PWM_enu_Init) refers to pwm.o(.text.PWM_enu_Init) for [Anonymous Symbol]
    pwm.o(.text.PWM_enu_SetDutyCycle) refers to pwm.o(.rodata..L__const.PWM_enu_SetDutyCycle.Timx_BASE) for .L__const.PWM_enu_SetDutyCycle.Timx_BASE
    pwm.o(.ARM.exidx.text.PWM_enu_SetDutyCycle) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.MUSART_voidInit) refers to usart.o(.text.MUSART_voidInit) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.MUSART1_VidSendCharSync) refers to usart.o(.text.MUSART1_VidSendCharSync) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.MUSART1_VidSendStringSynch) refers to usart.o(.text.MUSART1_VidSendStringSynch) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.MUSART1_u8RecCharSynch) refers to usart.o(.text.MUSART1_u8RecCharSynch) for [Anonymous Symbol]
    usart.o(.text.MUSART1_VidSetCallBack) refers to usart.o(.bss.MUSART1_CallBack) for MUSART1_CallBack
    usart.o(.ARM.exidx.text.MUSART1_VidSetCallBack) refers to usart.o(.text.MUSART1_VidSetCallBack) for [Anonymous Symbol]
    usart.o(.text.USART1_IRQHandler) refers to usart.o(.bss.MUSART1_CallBack) for MUSART1_CallBack
    usart.o(.ARM.exidx.text.USART1_IRQHandler) refers to usart.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    icu.o(.text.ICU_voidInitTimer) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidInitTimer) refers to icu.o(.text.ICU_voidInitTimer) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetSensingEdge) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetSensingEdge) refers to icu.o(.text.ICU_voidSetSensingEdge) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetCountTime) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetCountTime) refers to icu.o(.text.ICU_voidSetCountTime) for [Anonymous Symbol]
    icu.o(.text.ICU_voidEnableTimer) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidEnableTimer) refers to icu.o(.text.ICU_voidEnableTimer) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetICU_Count) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetICU_Count) refers to icu.o(.text.ICU_voidGetICU_Count) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetTimerOvStatus) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetTimerOvStatus) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for [Anonymous Symbol]
    icu.o(.text.ICU_voidClrTimerOvFlag) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidClrTimerOvFlag) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetTimerIcuStatus) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetTimerIcuStatus) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetArrTime) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetArrTime) refers to icu.o(.text.ICU_voidSetArrTime) for [Anonymous Symbol]
    icu.o(.text.ICU_voidClrTimerIcuFlag) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidClrTimerIcuFlag) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for [Anonymous Symbol]
    icu.o(.text.ICU_voidDisableTimer) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidDisableTimer) refers to icu.o(.text.ICU_voidDisableTimer) for [Anonymous Symbol]
    exti.o(.ARM.exidx.text.EXTI_enuEnableINT) refers to exti.o(.text.EXTI_enuEnableINT) for [Anonymous Symbol]
    exti.o(.ARM.exidx.text.EXTI_enuDisableINT) refers to exti.o(.text.EXTI_enuDisableINT) for [Anonymous Symbol]
    exti.o(.text.EXTI_enuCallBack) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti.o(.ARM.exidx.text.EXTI_enuCallBack) refers to exti.o(.text.EXTI_enuCallBack) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI0_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI0_IRQHandler) refers to exti_irq.o(.text.EXTI0_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI1_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI1_IRQHandler) refers to exti_irq.o(.text.EXTI1_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI2_TSC_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI2_TSC_IRQHandler) refers to exti_irq.o(.text.EXTI2_TSC_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI3_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI3_IRQHandler) refers to exti_irq.o(.text.EXTI3_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI4_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI4_IRQHandler) refers to exti_irq.o(.text.EXTI4_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI9_5_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI9_5_IRQHandler) refers to exti_irq.o(.text.EXTI9_5_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI15_10_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI15_10_IRQHandler) refers to exti_irq.o(.text.EXTI15_10_IRQHandler) for [Anonymous Symbol]
    motor.o(.text.DCmotor_Init) refers to motor.o(.data..L_MergedGlobals) for .L_MergedGlobals
    motor.o(.text.DCmotor_Init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    motor.o(.text.DCmotor_Init) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_Init) refers to pwm.o(.text.PWM_enu_Init) for PWM_enu_Init
    motor.o(.ARM.exidx.text.DCmotor_Init) refers to motor.o(.text.DCmotor_Init) for [Anonymous Symbol]
    motor.o(.text.DCmotor_frontMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_frontMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.DCmotor_frontMove) refers to motor.o(.text.DCmotor_frontMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_backMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.text.DCmotor_backMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor_backMove) refers to motor.o(.text.DCmotor_backMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_rightMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.text.DCmotor_rightMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor_rightMove) refers to motor.o(.text.DCmotor_rightMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_leftMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.text.DCmotor_leftMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor_leftMove) refers to motor.o(.text.DCmotor_leftMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_stop) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.text.DCmotor_stop) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor_stop) refers to motor.o(.text.DCmotor_stop) for [Anonymous Symbol]
    motor.o(.text.DCmotor1_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor1_) refers to motor.o(.text.DCmotor1_) for [Anonymous Symbol]
    motor.o(.text.DCmotor2_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor2_) refers to motor.o(.text.DCmotor2_) for [Anonymous Symbol]
    motor.o(.text.DCmotor3_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor3_) refers to motor.o(.text.DCmotor3_) for [Anonymous Symbol]
    motor.o(.text.DCmotor4_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor4_) refers to motor.o(.text.DCmotor4_) for [Anonymous Symbol]
    us.o(.text.US_voidInit) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    us.o(.text.US_voidInit) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    us.o(.text.US_voidInit) refers to icu.o(.text.ICU_voidInitTimer) for ICU_voidInitTimer
    us.o(.ARM.exidx.text.US_voidInit) refers to us.o(.text.US_voidInit) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistance) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistance) refers to us.o(.text.US_voidGetUSSensorDistance) for [Anonymous Symbol]
    us.o(.text.US_voidSetTrigger) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidDisableTimer) for ICU_voidDisableTimer
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.ARM.exidx.text.US_voidSetTrigger) refers to us.o(.text.US_voidSetTrigger) for [Anonymous Symbol]
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.ARM.exidx.text.US_voidSetICUTime) refers to us.o(.text.US_voidSetICUTime) for [Anonymous Symbol]
    us.o(.text.US_voidGetTimeStatus) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.ARM.exidx.text.US_voidGetTimeStatus) refers to us.o(.text.US_voidGetTimeStatus) for [Anonymous Symbol]
    us.o(.text.US_voidGetICU_Distance) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.text.US_voidGetICU_Distance) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.ARM.exidx.text.US_voidGetICU_Distance) refers to us.o(.text.US_voidGetICU_Distance) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidSetTrigger) for US_voidSetTrigger
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidGetUSSensorDistanceAsync) for [Anonymous Symbol]
    us.o(.text.US_voidGetDistancePolling) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for ICU_voidGetTimerIcuStatus
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.ARM.exidx.text.US_voidGetDistancePolling) refers to us.o(.text.US_voidGetDistancePolling) for [Anonymous Symbol]
    us.o(.text.US_voidGetTimeICUStatus) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for ICU_voidGetTimerIcuStatus
    us.o(.ARM.exidx.text.US_voidGetTimeICUStatus) refers to us.o(.text.US_voidGetTimeICUStatus) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidSetTrigger) for US_voidSetTrigger
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for ICU_voidGetTimerIcuStatus
    us.o(.text.US_voidGetUSSensorDistanceAsyncTask) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsyncTask) refers to us.o(.text.US_voidGetUSSensorDistanceAsyncTask) for [Anonymous Symbol]
    us.o(.text.US_voidUltraSonicStart) refers to us.o(.text.US_voidSetTrigger) for US_voidSetTrigger
    us.o(.text.US_voidUltraSonicStart) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidUltraSonicStart) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidUltraSonicStart) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidUltraSonicStart) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidUltraSonicStart) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.ARM.exidx.text.US_voidUltraSonicStart) refers to us.o(.text.US_voidUltraSonicStart) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to us.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for ICU_voidGetTimerIcuStatus
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidGetUSSensorDistanceTask) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceTask) refers to us.o(.text.US_voidGetUSSensorDistanceTask) for [Anonymous Symbol]
    ble.o(.text.HBLE_VInit) refers to ble.o(.data..L_MergedGlobals) for .L_MergedGlobals
    ble.o(.text.HBLE_VInit) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    ble.o(.text.HBLE_VInit) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    ble.o(.text.HBLE_VInit) refers to usart.o(.text.MUSART_voidInit) for MUSART_voidInit
    ble.o(.text.HBLE_VInit) refers to ble.o(.text.HBLE_VGetChar) for HBLE_VGetChar
    ble.o(.text.HBLE_VInit) refers to usart.o(.text.MUSART1_VidSetCallBack) for MUSART1_VidSetCallBack
    ble.o(.text.HBLE_VInit) refers to nvic.o(.text.MNVIC_EnuEnablePerInterrupt) for MNVIC_EnuEnablePerInterrupt
    ble.o(.ARM.exidx.text.HBLE_VInit) refers to ble.o(.text.HBLE_VInit) for [Anonymous Symbol]
    ble.o(.text.HBLE_VGetChar) refers to ble.o(.data.G_Key) for G_Key
    ble.o(.ARM.exidx.text.HBLE_VGetChar) refers to ble.o(.text.HBLE_VGetChar) for [Anonymous Symbol]
    ble.o(.text.HBLE_VGetKey) refers to ble.o(.data.G_Key) for G_Key
    ble.o(.ARM.exidx.text.HBLE_VGetKey) refers to ble.o(.text.HBLE_VGetKey) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuInit) refers to can.o(.text.CAN_enuInit) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuTransmit) refers to can.o(.text.CAN_enuTransmit) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuCreateFilter) refers to can.o(.text.CAN_enuCreateFilter) for [Anonymous Symbol]
    can.o(.text.CAN_enuRecieve) refers to can.o(.bss.ARR_Recieved_Data) for ARR_Recieved_Data
    can.o(.ARM.exidx.text.CAN_enuRecieve) refers to can.o(.text.CAN_enuRecieve) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuChangeMode) refers to can.o(.text.CAN_enuChangeMode) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuAbort) refers to can.o(.text.CAN_enuAbort) for [Anonymous Symbol]
    can.o(.ARM.exidx.text.CAN_enuGoTestMode) refers to can.o(.text.CAN_enuGoTestMode) for [Anonymous Symbol]
    eeprom.o(.text.EEPROM_init) refers to rcc.o(.text.RCC_voidEnablePeripheral) for RCC_voidEnablePeripheral
    eeprom.o(.text.EEPROM_init) refers to eeprom.o(.data..L_MergedGlobals) for .L_MergedGlobals
    eeprom.o(.text.EEPROM_init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    eeprom.o(.text.EEPROM_init) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    eeprom.o(.text.EEPROM_init) refers to i2c.o(.text.I2C_init) for I2C_init
    eeprom.o(.ARM.exidx.text.EEPROM_init) refers to eeprom.o(.text.EEPROM_init) for [Anonymous Symbol]
    eeprom.o(.text.EEPROM_WRITE_BYTE) refers to i2c.o(.text.I2C_MASTER_init) for I2C_MASTER_init
    eeprom.o(.text.EEPROM_WRITE_BYTE) refers to i2c.o(.text.I2C_Start) for I2C_Start
    eeprom.o(.text.EEPROM_WRITE_BYTE) refers to i2c.o(.text.I2C1_Write_byte) for I2C1_Write_byte
    eeprom.o(.text.EEPROM_WRITE_BYTE) refers to i2c.o(.text.I2C_Stop) for I2C_Stop
    eeprom.o(.ARM.exidx.text.EEPROM_WRITE_BYTE) refers to eeprom.o(.text.EEPROM_WRITE_BYTE) for [Anonymous Symbol]
    eeprom.o(.text.EEPROM_WRITE_STRING) refers to i2c.o(.text.I2C_MASTER_init) for I2C_MASTER_init
    eeprom.o(.text.EEPROM_WRITE_STRING) refers to i2c.o(.text.I2C_Start) for I2C_Start
    eeprom.o(.text.EEPROM_WRITE_STRING) refers to i2c.o(.text.I2C1_Write_byte) for I2C1_Write_byte
    eeprom.o(.text.EEPROM_WRITE_STRING) refers to i2c.o(.text.I2C_Stop) for I2C_Stop
    eeprom.o(.ARM.exidx.text.EEPROM_WRITE_STRING) refers to eeprom.o(.text.EEPROM_WRITE_STRING) for [Anonymous Symbol]
    eeprom.o(.text.EEPROM_READ_BYTE) refers to i2c.o(.text.I2C_MASTER_init) for I2C_MASTER_init
    eeprom.o(.text.EEPROM_READ_BYTE) refers to i2c.o(.text.I2C_Start) for I2C_Start
    eeprom.o(.text.EEPROM_READ_BYTE) refers to i2c.o(.text.I2C1_Write_byte) for I2C1_Write_byte
    eeprom.o(.text.EEPROM_READ_BYTE) refers to i2c.o(.text.I2C1_Read_byte) for I2C1_Read_byte
    eeprom.o(.text.EEPROM_READ_BYTE) refers to i2c.o(.text.I2C_Stop) for I2C_Stop
    eeprom.o(.ARM.exidx.text.EEPROM_READ_BYTE) refers to eeprom.o(.text.EEPROM_READ_BYTE) for [Anonymous Symbol]
    eeprom.o(.text.EEPROM_READ_STRING) refers to i2c.o(.text.I2C_MASTER_init) for I2C_MASTER_init
    eeprom.o(.text.EEPROM_READ_STRING) refers to i2c.o(.text.I2C_Start) for I2C_Start
    eeprom.o(.text.EEPROM_READ_STRING) refers to i2c.o(.text.I2C1_Write_byte) for I2C1_Write_byte
    eeprom.o(.text.EEPROM_READ_STRING) refers to i2c.o(.text.I2C1_Read_byte) for I2C1_Read_byte
    eeprom.o(.text.EEPROM_READ_STRING) refers to i2c.o(.text.I2C_Stop) for I2C_Stop
    eeprom.o(.ARM.exidx.text.EEPROM_READ_STRING) refers to eeprom.o(.text.EEPROM_READ_STRING) for [Anonymous Symbol]
    i2c.o(.text.I2C_init) refers to i2c.o(.rodata..L__const.I2C1_Read_byte.loc_u32_I2Cx) for .L__const.I2C1_Read_byte.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C_init) refers to i2c.o(.text.I2C_init) for [Anonymous Symbol]
    i2c.o(.text.I2C_MASTER_init) refers to i2c.o(.rodata..L__const.I2C1_Read_byte.loc_u32_I2Cx) for .L__const.I2C1_Read_byte.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C_MASTER_init) refers to i2c.o(.text.I2C_MASTER_init) for [Anonymous Symbol]
    i2c.o(.text.I2C_Start) refers to i2c.o(.rodata..L__const.I2C1_Read_byte.loc_u32_I2Cx) for .L__const.I2C1_Read_byte.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C_Start) refers to i2c.o(.text.I2C_Start) for [Anonymous Symbol]
    i2c.o(.text.I2C_Stop) refers to i2c.o(.rodata..L__const.I2C1_Read_byte.loc_u32_I2Cx) for .L__const.I2C1_Read_byte.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C_Stop) refers to i2c.o(.text.I2C_Stop) for [Anonymous Symbol]
    i2c.o(.text.I2C1_Write_byte) refers to i2c.o(.rodata..L__const.I2C1_Read_byte.loc_u32_I2Cx) for .L__const.I2C1_Read_byte.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C1_Write_byte) refers to i2c.o(.text.I2C1_Write_byte) for [Anonymous Symbol]
    i2c.o(.text.I2C1_Read_byte) refers to i2c.o(.rodata..L__const.I2C1_Read_byte.loc_u32_I2Cx) for .L__const.I2C1_Read_byte.loc_u32_I2Cx
    i2c.o(.ARM.exidx.text.I2C1_Read_byte) refers to i2c.o(.text.I2C1_Read_byte) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init) refers to clib_arm.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace) for os_libspace
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace_id) for os_libspace_id
    clib_arm.o(.ARM.exidx.text.__user_perthread_libspace) refers to clib_arm.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_cb) for clib_mutex_cb
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    clib_arm.o(.text._mutex_initialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    clib_arm.o(.ARM.exidx.text._mutex_initialize) refers to clib_arm.o(.text._mutex_initialize) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_acquire) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.text._mutex_acquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    clib_arm.o(.ARM.exidx.text._mutex_acquire) refers to clib_arm.o(.text._mutex_acquire) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_release) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.text._mutex_release) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    clib_arm.o(.ARM.exidx.text._mutex_release) refers to clib_arm.o(.text._mutex_release) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    clib_arm.o(.text._mutex_free) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.ARM.exidx.text._mutex_free) refers to clib_arm.o(.text._mutex_free) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB) for vApplicationGetIdleTaskMemory.Idle_TCB
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack) for vApplicationGetIdleTaskMemory.Idle_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB) for vApplicationGetTimerTaskMemory.Timer_TCB
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack) for vApplicationGetTimerTaskMemory.Timer_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    startup_stm32f303xe.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(RESET) refers to startup_stm32f303xe.o(STACK) for __initial_sp
    startup_stm32f303xe.o(RESET) refers to startup_stm32f303xe.o(.text) for Reset_Handler
    startup_stm32f303xe.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f303xe.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f303xe.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI0_IRQHandler) for EXTI0_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI1_IRQHandler) for EXTI1_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI2_TSC_IRQHandler) for EXTI2_TSC_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI3_IRQHandler) for EXTI3_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI4_IRQHandler) for EXTI4_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI9_5_IRQHandler) for EXTI9_5_IRQHandler
    startup_stm32f303xe.o(RESET) refers to usart.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI15_10_IRQHandler) for EXTI15_10_IRQHandler
    startup_stm32f303xe.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(.text) refers to system_stm32f3xx.o(.text.SystemInit) for SystemInit
    startup_stm32f303xe.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f303xe.o(.text) refers to startup_stm32f303xe.o(HEAP) for Heap_Mem
    startup_stm32f303xe.o(.text) refers to startup_stm32f303xe.o(STACK) for Stack_Mem
    system_stm32f3xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f3xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f3xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f3xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f3xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreateStatic) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueCreateMutex) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateMutex) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateMutex) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateMutexStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateMutexStatic) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueCreateCountingSemaphore) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueCreateCountingSemaphore) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueCreateCountingSemaphore) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreateStatic) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.xTaskCreateStatic) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.xTaskCreateStatic) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss..L_MergedGlobals.1) for .L_MergedGlobals.1
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.xTaskCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.xTaskCreate) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskDelayUntil) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskDelayUntil) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelay) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelay) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.vTaskStartScheduler) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.vTaskStartScheduler) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.vTaskStartScheduler) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.prvIdleTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvIdleTask) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvIdleTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskGetInfo) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    timers.o(.text.xTimerCreateTimerTask) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerCreateTimerTask) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvTimerTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvTimerTask) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvTimerTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.text.prvTimerTask) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvTimerTask) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvTimerTask) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerCreate) refers to timers.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    timers.o(.text.xTimerCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.xTimerCreate) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.xTimerCreate) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.xTimerCreate) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerCreate) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    timers.o(.text.xTimerCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.xTimerCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.xTimerCreateStatic) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.text.xTimerCreateStatic) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss..L_MergedGlobals) for .L_MergedGlobals
    timers.o(.text.prvSampleTimeNow) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvSampleTimeNow) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to clib_arm.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f303xe.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.Motor_SetDirectionT), (8 bytes).
    Removing main.o(.ARM.exidx.text.EEPROM_WriteLogsT), (8 bytes).
    Removing main.o(.text.TEMP_GetTempT), (2 bytes).
    Removing main.o(.ARM.exidx.text.TEMP_GetTempT), (8 bytes).
    Removing main.o(.ARM.exidx.text.US_GetDistanceT), (8 bytes).
    Removing main.o(.ARM.exidx.text.CAN_SendDataT), (8 bytes).
    Removing main.o(.ARM.exidx.text.CAN_RevieveDataT), (8 bytes).
    Removing main.o(.ARM.exidx.text.Button_StateT), (8 bytes).
    Removing main.o(.text.CAN_voidSysInit), (118 bytes).
    Removing main.o(.ARM.exidx.text.CAN_voidSysInit), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.bss.Global_u16Distance), (2 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing rcc.o(.text), (0 bytes).
    Removing rcc.o(.text.RCC_voidInitSYSCLK), (118 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidInitSYSCLK), (8 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidEnablePeripheral), (8 bytes).
    Removing rcc.o(.text.RCC_voidDisablePeripheral), (80 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidDisablePeripheral), (8 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.text.GPIO_init), (332 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_init), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_configurePin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_writePin), (8 bytes).
    Removing gpio.o(.text.GPIO_writePort), (26 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_writePort), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_readPin), (8 bytes).
    Removing gpio.o(.text.GPIO_readPort), (36 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_readPort), (8 bytes).
    Removing gpio.o(.text.GPIO_togglePin), (44 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_togglePin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_setPinFuction), (8 bytes).
    Removing gpio.o(.text.GPIO_lockPin), (46 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_lockPin), (8 bytes).
    Removing gpio.o(.rodata..L__const.GPIO_init.LOC_pinsConfigurations), (128 bytes).
    Removing nvic.o(.text), (0 bytes).
    Removing nvic.o(.text.NVIC_Init), (20 bytes).
    Removing nvic.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing nvic.o(.text.MNVIC__Venable_irq), (4 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC__Venable_irq), (8 bytes).
    Removing nvic.o(.text.MNVIC__Vdisable_irq), (4 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC__Vdisable_irq), (8 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuEnablePerInterrupt), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuDisablePerInterrupt), (70 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuDisablePerInterrupt), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuSetPendingFlag), (70 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuSetPendingFlag), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuClearPendingFlag), (70 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuClearPendingFlag), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuActiveFlagStatus), (50 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuActiveFlagStatus), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuSetPriorityGroup), (36 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuSetPriorityGroup), (8 bytes).
    Removing nvic.o(.text.MNVIC_VSystemReset), (18 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_VSystemReset), (8 bytes).
    Removing pwm.o(.text), (0 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_enu_Init), (8 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_enu_SetDutyCycle), (8 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART_voidInit), (8 bytes).
    Removing usart.o(.text.MUSART1_VidSendCharSync), (46 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSendCharSync), (8 bytes).
    Removing usart.o(.text.MUSART1_VidSendStringSynch), (70 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSendStringSynch), (8 bytes).
    Removing usart.o(.text.MUSART1_u8RecCharSynch), (126 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_u8RecCharSynch), (8 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSetCallBack), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing icu.o(.text), (0 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidInitTimer), (8 bytes).
    Removing icu.o(.text.ICU_voidSetSensingEdge), (138 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetSensingEdge), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetCountTime), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidEnableTimer), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetICU_Count), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetTimerOvStatus), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidClrTimerOvFlag), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetTimerIcuStatus), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetArrTime), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidClrTimerIcuFlag), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidDisableTimer), (8 bytes).
    Removing exti.o(.text), (0 bytes).
    Removing exti.o(.text.EXTI_enuEnableINT), (110 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuEnableINT), (8 bytes).
    Removing exti.o(.text.EXTI_enuDisableINT), (34 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuDisableINT), (8 bytes).
    Removing exti.o(.text.EXTI_enuCallBack), (24 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuCallBack), (8 bytes).
    Removing exti_irq.o(.text), (0 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI0_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI1_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI2_TSC_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI3_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI4_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI9_5_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI15_10_IRQHandler), (8 bytes).
    Removing motor.o(.text), (0 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_Init), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_frontMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_backMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_rightMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_leftMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_stop), (8 bytes).
    Removing motor.o(.text.DCmotor1_), (26 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor1_), (8 bytes).
    Removing motor.o(.text.DCmotor2_), (26 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor2_), (8 bytes).
    Removing motor.o(.text.DCmotor3_), (26 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor3_), (8 bytes).
    Removing motor.o(.text.DCmotor4_), (26 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor4_), (8 bytes).
    Removing motor.o(.bss.state), (1 bytes).
    Removing us.o(.text), (0 bytes).
    Removing us.o(.ARM.exidx.text.US_voidInit), (8 bytes).
    Removing us.o(.text.US_voidGetUSSensorDistance), (328 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistance), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidSetTrigger), (8 bytes).
    Removing us.o(.text.US_voidSetICUTime), (44 bytes).
    Removing us.o(.ARM.exidx.text.US_voidSetICUTime), (8 bytes).
    Removing us.o(.text.US_voidGetTimeStatus), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetTimeStatus), (8 bytes).
    Removing us.o(.text.US_voidGetICU_Distance), (52 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetICU_Distance), (8 bytes).
    Removing us.o(.text.US_voidGetUSSensorDistanceAsync), (138 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsync), (8 bytes).
    Removing us.o(.text.US_voidGetDistancePolling), (350 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetDistancePolling), (8 bytes).
    Removing us.o(.text.US_voidGetTimeICUStatus), (10 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetTimeICUStatus), (8 bytes).
    Removing us.o(.text.US_voidGetUSSensorDistanceAsyncTask), (226 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsyncTask), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidUltraSonicStart), (8 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceTask), (8 bytes).
    Removing ble.o(.text), (0 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VInit), (8 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VGetChar), (8 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VGetKey), (8 bytes).
    Removing can.o(.text), (0 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuInit), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuTransmit), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuCreateFilter), (8 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuRecieve), (8 bytes).
    Removing can.o(.text.CAN_enuChangeMode), (306 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuChangeMode), (8 bytes).
    Removing can.o(.text.CAN_enuAbort), (48 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuAbort), (8 bytes).
    Removing can.o(.text.CAN_enuGoTestMode), (178 bytes).
    Removing can.o(.ARM.exidx.text.CAN_enuGoTestMode), (8 bytes).
    Removing eeprom.o(.text), (0 bytes).
    Removing eeprom.o(.ARM.exidx.text.EEPROM_init), (8 bytes).
    Removing eeprom.o(.text.EEPROM_WRITE_BYTE), (62 bytes).
    Removing eeprom.o(.ARM.exidx.text.EEPROM_WRITE_BYTE), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EEPROM_WRITE_STRING), (8 bytes).
    Removing eeprom.o(.text.EEPROM_READ_BYTE), (78 bytes).
    Removing eeprom.o(.ARM.exidx.text.EEPROM_READ_BYTE), (8 bytes).
    Removing eeprom.o(.ARM.exidx.text.EEPROM_READ_STRING), (8 bytes).
    Removing i2c.o(.text), (0 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_init), (8 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_MASTER_init), (8 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_Start), (8 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C_Stop), (8 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C1_Write_byte), (8 bytes).
    Removing i2c.o(.ARM.exidx.text.I2C1_Read_byte), (8 bytes).
    Removing clib_arm.o(.text), (0 bytes).
    Removing clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing clib_arm.o(.text.__user_perthread_libspace), (132 bytes).
    Removing clib_arm.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing clib_arm.o(.bss.os_libspace), (480 bytes).
    Removing clib_arm.o(.bss.os_libspace_id), (16 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (72 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (40 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (92 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (100 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (208 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (4 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (72 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (70 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (244 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (180 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (158 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (424 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (250 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (26 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (96 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (114 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (72 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (130 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (116 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (142 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (130 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (98 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (212 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (138 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (128 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (126 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (176 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (166 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (84 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (348 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (222 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (264 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (80 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (132 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (72 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (50 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).
    Removing system_stm32f3xx.o(.text), (0 bytes).
    Removing system_stm32f3xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f3xx.o(.text.SystemCoreClockUpdate), (84 bytes).
    Removing system_stm32f3xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f3xx.o(.rodata.AHBPrescTable), (16 bytes).
    Removing system_stm32f3xx.o(.rodata.APBPrescTable), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (294 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (122 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (216 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (26 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (18 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (50 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (118 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (18 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (28 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (38 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (186 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.text.xQueueGenericReset), (104 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.text.xQueueGenericCreate), (136 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (26 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (12 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (48 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (110 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (116 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (286 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (150 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (318 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (184 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (74 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (18 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (22 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (10 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (14 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (182 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (326 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (134 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (1400 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (40 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (88 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (176 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (320 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (128 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (160 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (240 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (232 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (156 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (148 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (94 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (38 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (24 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (24 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (4 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (4 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (24 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (18 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (20 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).

590 unused section(s) (total 23022 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    BLE.c                                    0x00000000   Number         0  ble.o ABSOLUTE
    Can.c                                    0x00000000   Number         0  can.o ABSOLUTE
    EXTI.c                                   0x00000000   Number         0  exti.o ABSOLUTE
    EXTI_IRQ.c                               0x00000000   Number         0  exti_irq.o ABSOLUTE
    I2C.c                                    0x00000000   Number         0  i2c.o ABSOLUTE
    ICU.c                                    0x00000000   Number         0  icu.o ABSOLUTE
    NVIC.c                                   0x00000000   Number         0  nvic.o ABSOLUTE
    PWM.c                                    0x00000000   Number         0  pwm.o ABSOLUTE
    RCC.c                                    0x00000000   Number         0  rcc.o ABSOLUTE
    RTE\Device\STM32F303RETx\startup_stm32f303xe.s 0x00000000   Number         0  startup_stm32f303xe.o ABSOLUTE
    US.c                                     0x00000000   Number         0  us.o ABSOLUTE
    USART.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    clib_arm.c                               0x00000000   Number         0  clib_arm.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    eeprom.c                                 0x00000000   Number         0  eeprom.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    motor.c                                  0x00000000   Number         0  motor.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_stm32f3xx.c                       0x00000000   Number         0  system_stm32f3xx.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      404  startup_stm32f303xe.o(RESET)
    !!!main                                  0x08000194   Section        8  __main.o(!!!main)
    !!!scatter                               0x0800019c   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x080001d0   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x080001ec   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000208   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800020a   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x0800020e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000210   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000212   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000214   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000214   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000214   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800021a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000222   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000226   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000226   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800022e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000230   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000230   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000234   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0800023c   Number         0  startup_stm32f303xe.o(.text)
    .text                                    0x0800023c   Section       64  startup_stm32f303xe.o(.text)
    .text                                    0x0800027c   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000306   Section       16  aeabi_memset4.o(.text)
    .text                                    0x08000316   Section       68  rt_memclr.o(.text)
    .text                                    0x0800035a   Section        0  heapauxi.o(.text)
    .text                                    0x08000360   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x080003c4   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000412   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x0800045c   Section        0  exit.o(.text)
    .text                                    0x08000470   Section        8  libspace.o(.text)
    .text                                    0x08000478   Section        0  sys_exit.o(.text)
    .text                                    0x08000484   Section        2  use_no_semi.o(.text)
    .text                                    0x08000486   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x08000488   Section        0  main.o(.text.Button_StateT)
    [Anonymous Symbol]                       0x080004fc   Section        0  main.o(.text.CAN_RevieveDataT)
    [Anonymous Symbol]                       0x08000550   Section        0  main.o(.text.CAN_SendDataT)
    [Anonymous Symbol]                       0x080005a4   Section        0  can.o(.text.CAN_enuCreateFilter)
    [Anonymous Symbol]                       0x08001b8c   Section        0  can.o(.text.CAN_enuInit)
    [Anonymous Symbol]                       0x08001d30   Section        0  can.o(.text.CAN_enuRecieve)
    [Anonymous Symbol]                       0x080021cc   Section        0  can.o(.text.CAN_enuTransmit)
    [Anonymous Symbol]                       0x08002dd8   Section        0  motor.o(.text.DCmotor_Init)
    [Anonymous Symbol]                       0x08002e3c   Section        0  motor.o(.text.DCmotor_backMove)
    [Anonymous Symbol]                       0x08002e88   Section        0  motor.o(.text.DCmotor_frontMove)
    [Anonymous Symbol]                       0x08002ed4   Section        0  motor.o(.text.DCmotor_leftMove)
    [Anonymous Symbol]                       0x08002f20   Section        0  motor.o(.text.DCmotor_rightMove)
    [Anonymous Symbol]                       0x08002f6c   Section        0  motor.o(.text.DCmotor_stop)
    [Anonymous Symbol]                       0x08002fb0   Section        0  eeprom.o(.text.EEPROM_READ_STRING)
    [Anonymous Symbol]                       0x08003068   Section        0  eeprom.o(.text.EEPROM_WRITE_STRING)
    [Anonymous Symbol]                       0x08003110   Section        0  main.o(.text.EEPROM_WriteLogsT)
    [Anonymous Symbol]                       0x0800312c   Section        0  eeprom.o(.text.EEPROM_init)
    [Anonymous Symbol]                       0x08003170   Section        0  exti_irq.o(.text.EXTI0_IRQHandler)
    [Anonymous Symbol]                       0x0800317c   Section        0  exti_irq.o(.text.EXTI15_10_IRQHandler)
    [Anonymous Symbol]                       0x0800323c   Section        0  exti_irq.o(.text.EXTI1_IRQHandler)
    [Anonymous Symbol]                       0x08003248   Section        0  exti_irq.o(.text.EXTI2_TSC_IRQHandler)
    [Anonymous Symbol]                       0x08003254   Section        0  exti_irq.o(.text.EXTI3_IRQHandler)
    [Anonymous Symbol]                       0x08003260   Section        0  exti_irq.o(.text.EXTI4_IRQHandler)
    [Anonymous Symbol]                       0x0800326c   Section        0  exti_irq.o(.text.EXTI9_5_IRQHandler)
    [Anonymous Symbol]                       0x08003308   Section        0  gpio.o(.text.GPIO_configurePin)
    [Anonymous Symbol]                       0x080033d4   Section        0  gpio.o(.text.GPIO_readPin)
    [Anonymous Symbol]                       0x08003408   Section        0  gpio.o(.text.GPIO_setPinFuction)
    [Anonymous Symbol]                       0x08003474   Section        0  gpio.o(.text.GPIO_writePin)
    HBLE_VGetChar                            0x080034b5   Thumb Code    12  ble.o(.text.HBLE_VGetChar)
    [Anonymous Symbol]                       0x080034b4   Section        0  ble.o(.text.HBLE_VGetChar)
    [Anonymous Symbol]                       0x080034c0   Section        0  ble.o(.text.HBLE_VGetKey)
    [Anonymous Symbol]                       0x080034e0   Section        0  ble.o(.text.HBLE_VInit)
    [Anonymous Symbol]                       0x0800352c   Section        0  i2c.o(.text.I2C1_Read_byte)
    [Anonymous Symbol]                       0x08003558   Section        0  i2c.o(.text.I2C1_Write_byte)
    [Anonymous Symbol]                       0x08003588   Section        0  i2c.o(.text.I2C_MASTER_init)
    [Anonymous Symbol]                       0x08003628   Section        0  i2c.o(.text.I2C_Start)
    [Anonymous Symbol]                       0x08003648   Section        0  i2c.o(.text.I2C_Stop)
    [Anonymous Symbol]                       0x08003688   Section        0  i2c.o(.text.I2C_init)
    [Anonymous Symbol]                       0x080036c0   Section        0  icu.o(.text.ICU_voidClrTimerIcuFlag)
    [Anonymous Symbol]                       0x080036dc   Section        0  icu.o(.text.ICU_voidClrTimerOvFlag)
    [Anonymous Symbol]                       0x080036f4   Section        0  icu.o(.text.ICU_voidDisableTimer)
    [Anonymous Symbol]                       0x0800370c   Section        0  icu.o(.text.ICU_voidEnableTimer)
    [Anonymous Symbol]                       0x08003724   Section        0  icu.o(.text.ICU_voidGetICU_Count)
    [Anonymous Symbol]                       0x08003784   Section        0  icu.o(.text.ICU_voidGetTimerIcuStatus)
    [Anonymous Symbol]                       0x080037a0   Section        0  icu.o(.text.ICU_voidGetTimerOvStatus)
    [Anonymous Symbol]                       0x080037b8   Section        0  icu.o(.text.ICU_voidInitTimer)
    [Anonymous Symbol]                       0x08003864   Section        0  icu.o(.text.ICU_voidSetArrTime)
    [Anonymous Symbol]                       0x08003874   Section        0  icu.o(.text.ICU_voidSetCountTime)
    [Anonymous Symbol]                       0x08003884   Section        0  nvic.o(.text.MNVIC_EnuEnablePerInterrupt)
    [Anonymous Symbol]                       0x080038cc   Section        0  usart.o(.text.MUSART1_VidSetCallBack)
    [Anonymous Symbol]                       0x080038dc   Section        0  usart.o(.text.MUSART_voidInit)
    [Anonymous Symbol]                       0x08003a50   Section        0  main.o(.text.Motor_SetDirectionT)
    [Anonymous Symbol]                       0x08003b34   Section        0  pwm.o(.text.PWM_enu_Init)
    [Anonymous Symbol]                       0x08003cd8   Section        0  pwm.o(.text.PWM_enu_SetDutyCycle)
    [Anonymous Symbol]                       0x08003d70   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x08003dd0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x08003dd4   Section        0  rcc.o(.text.RCC_voidEnablePeripheral)
    [Anonymous Symbol]                       0x08003e20   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08003e40   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08003e44   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08003e64   Section        0  system_stm32f3xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08003e78   Section        0  usart.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x08003ea4   Section        0  main.o(.text.US_GetDistanceT)
    [Anonymous Symbol]                       0x08003f10   Section        0  us.o(.text.US_voidGetUSSensorDistanceTask)
    [Anonymous Symbol]                       0x08003fb8   Section        0  us.o(.text.US_voidInit)
    [Anonymous Symbol]                       0x08003ff4   Section        0  us.o(.text.US_voidSetTrigger)
    [Anonymous Symbol]                       0x080040ac   Section        0  us.o(.text.US_voidUltraSonicStart)
    __tagsym$$used.1                         0x080040dc   Number         0  clib_arm.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x080040dc   Section        0  clib_arm.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08004100   Number         0  clib_arm.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08004100   Section        0  clib_arm.o(.text._mutex_free)
    __tagsym$$used.0                         0x08004154   Number         0  clib_arm.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08004154   Section        0  clib_arm.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x080041d4   Number         0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080041d4   Section        0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080041fc   Section        0  clib_arm.o(.text._platform_post_stackheap_init)
    [Anonymous Symbol]                       0x08004200   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x08004371   Thumb Code   134  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08004370   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x080043f9   Thumb Code   660  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x080043f8   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvIdleTask                              0x0800468d   Thumb Code   106  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x0800468c   Section        0  tasks.o(.text.prvIdleTask)
    prvPortStartFirstTask                    0x080046f9   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x080046f8   Section        0  port.o(.text.prvPortStartFirstTask)
    prvSampleTimeNow                         0x08004721   Thumb Code   160  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x08004720   Section        0  timers.o(.text.prvSampleTimeNow)
    prvTaskExitError                         0x080047c1   Thumb Code    46  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x080047c0   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x080047f1   Thumb Code   532  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x080047f0   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x08004a05   Thumb Code   116  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08004a04   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08004a78   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08004c5c   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x08004c74   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x08004c9c   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x08004cc0   Section        0  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x08004cdc   Section        0  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x08004cf8   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x08004cfc   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08004d14   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08004d1c   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x08004d7d   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08004d7c   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x08004d90   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x08004db0   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08004dcc   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08004e84   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x08004eb8   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x08004ec8   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x08004f18   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08004f84   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x08004f98   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x08004fa8   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x08004fc8   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x08005054   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x080050d4   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x080051a4   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x080051b4   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x080051b4   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08005268   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x080052d8   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x08005308   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x0800537c   Section        0  queue.o(.text.xQueueCreateMutexStatic)
    [Anonymous Symbol]                       0x080053ec   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x08005470   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x080055f0   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x0800573c   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x080058a0   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08005904   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x080059f4   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x08005ac4   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x08005ae4   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x08005af0   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08005bf8   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x08005c68   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x08005d14   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08005de8   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x08005ee8   Section        0  timers.o(.text.xTimerCreateTimerTask)
    $v0                                      0x08005f80   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x08005f80   Section       26  fpinit.o(x$fpl$fpinit)
    .L__const.I2C1_Read_byte.loc_u32_I2Cx    0x08005f9c   Data          12  i2c.o(.rodata..L__const.I2C1_Read_byte.loc_u32_I2Cx)
    .L__const.PWM_enu_SetDutyCycle.Timx_BASE 0x08005fa8   Data          12  pwm.o(.rodata..L__const.PWM_enu_SetDutyCycle.Timx_BASE)
    .L__const.CAN_voidSysInit.R_Filter       0x08005fb4   Data          16  main.o(.rodata.cst16)
    .L__const.GPIO_lockPin.LOC_ptr2GPIOx     0x08005fc4   Data          32  gpio.o(.rodata.cst32)
    .L_MergedGlobals                         0x20000000   Data           5  main.o(.data..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000000   Section        0  main.o(.data..L_MergedGlobals)
    .L_MergedGlobals                         0x20000005   Data           8  pwm.o(.data..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000005   Section        0  pwm.o(.data..L_MergedGlobals)
    .L_MergedGlobals                         0x2000000d   Data          16  motor.o(.data..L_MergedGlobals)
    [Anonymous Symbol]                       0x2000000d   Section        0  motor.o(.data..L_MergedGlobals)
    .L_MergedGlobals                         0x2000001e   Data          18  ble.o(.data..L_MergedGlobals)
    [Anonymous Symbol]                       0x2000001e   Section        0  ble.o(.data..L_MergedGlobals)
    .L_MergedGlobals                         0x20000030   Data           8  eeprom.o(.data..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000030   Section        0  eeprom.o(.data..L_MergedGlobals)
    uxCriticalNesting                        0x2000004c   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x2000004c   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000050   Section       96  libspace.o(.bss)
    .L_MergedGlobals                         0x200000b0   Data           7  us.o(.bss..L_MergedGlobals)
    US_voidGetUSSensorDistanceAsync.US_flag  0x200000b0   Data           1  us.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200000b0   Section        0  us.o(.bss..L_MergedGlobals)
    US_voidGetUSSensorDistanceAsync.US_TimerStatus 0x200000b1   Data           1  us.o(.bss..L_MergedGlobals)
    US_voidGetUSSensorDistanceAsyncTask.US_flag 0x200000b2   Data           1  us.o(.bss..L_MergedGlobals)
    US_voidGetUSSensorDistanceAsyncTask.US_TimerStatus 0x200000b3   Data           1  us.o(.bss..L_MergedGlobals)
    US_voidGetUSSensorDistanceAsyncTask.US_TimerICUStatus 0x200000b4   Data           1  us.o(.bss..L_MergedGlobals)
    US_voidGetUSSensorDistanceTask.US_TimerStatus 0x200000b5   Data           1  us.o(.bss..L_MergedGlobals)
    US_voidGetUSSensorDistanceTask.US_TimerICUStatus 0x200000b6   Data           1  us.o(.bss..L_MergedGlobals)
    .L_MergedGlobals                         0x200000b8   Data          28  heap_4.o(.bss..L_MergedGlobals)
    pxEnd                                    0x200000b8   Data           4  heap_4.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200000b8   Section        0  heap_4.o(.bss..L_MergedGlobals)
    xFreeBytesRemaining                      0x200000bc   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xMinimumEverFreeBytesRemaining           0x200000c0   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xNumberOfSuccessfulAllocations           0x200000c4   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xNumberOfSuccessfulFrees                 0x200000c8   Data           4  heap_4.o(.bss..L_MergedGlobals)
    xStart                                   0x200000cc   Data           8  heap_4.o(.bss..L_MergedGlobals)
    .L_MergedGlobals                         0x200000d4   Data         116  tasks.o(.bss..L_MergedGlobals)
    uxTaskNumber                             0x200000d4   Data           4  tasks.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x200000d4   Section        0  tasks.o(.bss..L_MergedGlobals)
    uxDeletedTasksWaitingCleanUp             0x200000d8   Data           4  tasks.o(.bss..L_MergedGlobals)
    uxCurrentNumberOfTasks                   0x200000dc   Data           4  tasks.o(.bss..L_MergedGlobals)
    xSchedulerRunning                        0x200000e0   Data           4  tasks.o(.bss..L_MergedGlobals)
    xTickCount                               0x200000e4   Data           4  tasks.o(.bss..L_MergedGlobals)
    pxDelayedTaskList                        0x200000e8   Data           4  tasks.o(.bss..L_MergedGlobals)
    pxOverflowDelayedTaskList                0x200000ec   Data           4  tasks.o(.bss..L_MergedGlobals)
    uxTopReadyPriority                       0x200000f0   Data           4  tasks.o(.bss..L_MergedGlobals)
    uxSchedulerSuspended                     0x200000f4   Data           4  tasks.o(.bss..L_MergedGlobals)
    xYieldPending                            0x200000f8   Data           4  tasks.o(.bss..L_MergedGlobals)
    xIdleTaskHandle                          0x200000fc   Data           4  tasks.o(.bss..L_MergedGlobals)
    xNextTaskUnblockTime                     0x20000100   Data           4  tasks.o(.bss..L_MergedGlobals)
    xPendedTicks                             0x20000104   Data           4  tasks.o(.bss..L_MergedGlobals)
    xNumOfOverflows                          0x20000108   Data           4  tasks.o(.bss..L_MergedGlobals)
    xTasksWaitingTermination                 0x2000010c   Data          20  tasks.o(.bss..L_MergedGlobals)
    xSuspendedTaskList                       0x20000120   Data          20  tasks.o(.bss..L_MergedGlobals)
    xPendingReadyList                        0x20000134   Data          20  tasks.o(.bss..L_MergedGlobals)
    .L_MergedGlobals                         0x20000148   Data          60  timers.o(.bss..L_MergedGlobals)
    xTimerQueue                              0x20000148   Data           4  timers.o(.bss..L_MergedGlobals)
    [Anonymous Symbol]                       0x20000148   Section        0  timers.o(.bss..L_MergedGlobals)
    xTimerTaskHandle                         0x2000014c   Data           4  timers.o(.bss..L_MergedGlobals)
    pxCurrentTimerList                       0x20000150   Data           4  timers.o(.bss..L_MergedGlobals)
    pxOverflowTimerList                      0x20000154   Data           4  timers.o(.bss..L_MergedGlobals)
    prvSampleTimeNow.xLastTime               0x20000158   Data           4  timers.o(.bss..L_MergedGlobals)
    xActiveTimerList1                        0x2000015c   Data          20  timers.o(.bss..L_MergedGlobals)
    xActiveTimerList2                        0x20000170   Data          20  timers.o(.bss..L_MergedGlobals)
    .L_MergedGlobals.1                       0x20000184   Data           4  main.o(.bss..L_MergedGlobals.1)
    Button_StateT.counter                    0x20000184   Data           2  main.o(.bss..L_MergedGlobals.1)
    [Anonymous Symbol]                       0x20000184   Section        0  main.o(.bss..L_MergedGlobals.1)
    .L_MergedGlobals.1                       0x20000188   Data          40  tasks.o(.bss..L_MergedGlobals.1)
    xDelayedTaskList1                        0x20000188   Data          20  tasks.o(.bss..L_MergedGlobals.1)
    [Anonymous Symbol]                       0x20000188   Section        0  tasks.o(.bss..L_MergedGlobals.1)
    xDelayedTaskList2                        0x2000019c   Data          20  tasks.o(.bss..L_MergedGlobals.1)
    US_GetDistanceT.Local_Dist               0x200003b8   Data           2  main.o(.bss.US_GetDistanceT.Local_Dist)
    [Anonymous Symbol]                       0x200003b8   Section        0  main.o(.bss.US_GetDistanceT.Local_Dist)
    clib_mutex_cb                            0x200003bc   Data         400  clib_arm.o(.bss.clib_mutex_cb)
    [Anonymous Symbol]                       0x200003bc   Section        0  clib_arm.o(.bss.clib_mutex_cb)
    clib_mutex_id                            0x2000054c   Data          20  clib_arm.o(.bss.clib_mutex_id)
    [Anonymous Symbol]                       0x2000054c   Section        0  clib_arm.o(.bss.clib_mutex_id)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x20000560   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x20000560   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x200005b0   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x200005b0   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    __tagsym$$used.1                         0x20000600   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxReadyTasksLists                        0x20000604   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000604   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000a64   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000a64   Section        0  heap_4.o(.bss.ucHeap)
    vApplicationGetIdleTaskMemory.Idle_Stack 0x20002a64   Data         320  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    [Anonymous Symbol]                       0x20002a64   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    vApplicationGetIdleTaskMemory.Idle_TCB   0x20002ba4   Data          92  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    [Anonymous Symbol]                       0x20002ba4   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    vApplicationGetTimerTaskMemory.Timer_Stack 0x20002c00   Data         320  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    [Anonymous Symbol]                       0x20002c00   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    vApplicationGetTimerTaskMemory.Timer_TCB 0x20002d40   Data          92  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    [Anonymous Symbol]                       0x20002d40   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    Heap_Mem                                 0x20002da0   Data         512  startup_stm32f303xe.o(HEAP)
    HEAP                                     0x20002da0   Section      512  startup_stm32f303xe.o(HEAP)
    Stack_Mem                                0x20002fa0   Data        1024  startup_stm32f303xe.o(STACK)
    STACK                                    0x20002fa0   Section     1024  startup_stm32f303xe.o(STACK)
    __initial_sp                             0x200033a0   Data           0  startup_stm32f303xe.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000194   Number         0  startup_stm32f303xe.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f303xe.o(RESET)
    __Vectors_End                            0x08000194   Data           0  startup_stm32f303xe.o(RESET)
    __main                                   0x08000195   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x0800019d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0800019d   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x0800019d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080001ab   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080001d1   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x080001ed   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000209   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800020b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_trap_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000211   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000215   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000215   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000215   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800021b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000223   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000227   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000227   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800022f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000235   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0800023d   Thumb Code     8  startup_stm32f303xe.o(.text)
    NMI_Handler                              0x08000245   Thumb Code     2  startup_stm32f303xe.o(.text)
    HardFault_Handler                        0x08000247   Thumb Code     2  startup_stm32f303xe.o(.text)
    MemManage_Handler                        0x08000249   Thumb Code     2  startup_stm32f303xe.o(.text)
    BusFault_Handler                         0x0800024b   Thumb Code     2  startup_stm32f303xe.o(.text)
    UsageFault_Handler                       0x0800024d   Thumb Code     2  startup_stm32f303xe.o(.text)
    DebugMon_Handler                         0x08000251   Thumb Code     2  startup_stm32f303xe.o(.text)
    ADC1_2_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    ADC3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    ADC4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    CAN_RX1_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    CAN_SCE_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP1_2_3_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP4_5_6_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP7_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel2_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel3_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel4_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel5_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel6_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel7_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel1_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel2_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel3_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel4_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel5_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FLASH_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FMC_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FPU_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C1_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C1_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C2_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C2_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C3_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C3_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    PVD_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RCC_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RTC_Alarm_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RTC_WKUP_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI1_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI2_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TAMP_STAMP_IRQHandler                    0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_BRK_TIM15_IRQHandler                0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_CC_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_TRG_COM_TIM17_IRQHandler            0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_UP_TIM16_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_BRK_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_CC_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_TRG_COM_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_UP_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM2_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM6_DAC_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM7_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_BRK_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_CC_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_UP_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    UART4_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    UART5_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USART2_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USART3_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USBWakeUp_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USBWakeUp_RMP_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_HP_CAN_TX_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_HP_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_LP_CAN_RX0_IRQHandler                0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_LP_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    WWDG_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    __user_initial_stackheap                 0x08000259   Thumb Code     0  startup_stm32f303xe.o(.text)
    __aeabi_memcpy                           0x0800027d   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0800027d   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080002e3   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x08000307   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x08000307   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x08000317   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x08000317   Thumb Code    68  rt_memclr.o(.text)
    _memset                                  0x0800031b   Thumb Code     0  rt_memclr.o(.text)
    __use_two_region_memory                  0x0800035b   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x0800035d   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0800035f   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x08000361   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x08000361   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x08000361   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080003a9   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x080003c5   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x080003c5   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x080003c5   Thumb Code    78  rt_memclr_w.o(.text)
    _memset_w                                0x080003c9   Thumb Code     0  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x08000413   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x0800045d   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x08000471   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x08000471   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x08000479   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x08000485   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x08000485   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x08000487   Thumb Code     0  indicate_semi.o(.text)
    Button_StateT                            0x08000489   Thumb Code   116  main.o(.text.Button_StateT)
    CAN_RevieveDataT                         0x080004fd   Thumb Code    82  main.o(.text.CAN_RevieveDataT)
    CAN_SendDataT                            0x08000551   Thumb Code    84  main.o(.text.CAN_SendDataT)
    CAN_enuCreateFilter                      0x080005a5   Thumb Code  5608  can.o(.text.CAN_enuCreateFilter)
    CAN_enuInit                              0x08001b8d   Thumb Code   418  can.o(.text.CAN_enuInit)
    CAN_enuRecieve                           0x08001d31   Thumb Code  1180  can.o(.text.CAN_enuRecieve)
    CAN_enuTransmit                          0x080021cd   Thumb Code  3082  can.o(.text.CAN_enuTransmit)
    DCmotor_Init                             0x08002dd9   Thumb Code    98  motor.o(.text.DCmotor_Init)
    DCmotor_backMove                         0x08002e3d   Thumb Code    74  motor.o(.text.DCmotor_backMove)
    DCmotor_frontMove                        0x08002e89   Thumb Code    74  motor.o(.text.DCmotor_frontMove)
    DCmotor_leftMove                         0x08002ed5   Thumb Code    74  motor.o(.text.DCmotor_leftMove)
    DCmotor_rightMove                        0x08002f21   Thumb Code    74  motor.o(.text.DCmotor_rightMove)
    DCmotor_stop                             0x08002f6d   Thumb Code    66  motor.o(.text.DCmotor_stop)
    EEPROM_READ_STRING                       0x08002fb1   Thumb Code   184  eeprom.o(.text.EEPROM_READ_STRING)
    EEPROM_WRITE_STRING                      0x08003069   Thumb Code   168  eeprom.o(.text.EEPROM_WRITE_STRING)
    EEPROM_WriteLogsT                        0x08003111   Thumb Code    28  main.o(.text.EEPROM_WriteLogsT)
    EEPROM_init                              0x0800312d   Thumb Code    68  eeprom.o(.text.EEPROM_init)
    EXTI0_IRQHandler                         0x08003171   Thumb Code    12  exti_irq.o(.text.EXTI0_IRQHandler)
    EXTI15_10_IRQHandler                     0x0800317d   Thumb Code   192  exti_irq.o(.text.EXTI15_10_IRQHandler)
    EXTI1_IRQHandler                         0x0800323d   Thumb Code    12  exti_irq.o(.text.EXTI1_IRQHandler)
    EXTI2_TSC_IRQHandler                     0x08003249   Thumb Code    12  exti_irq.o(.text.EXTI2_TSC_IRQHandler)
    EXTI3_IRQHandler                         0x08003255   Thumb Code    12  exti_irq.o(.text.EXTI3_IRQHandler)
    EXTI4_IRQHandler                         0x08003261   Thumb Code    12  exti_irq.o(.text.EXTI4_IRQHandler)
    EXTI9_5_IRQHandler                       0x0800326d   Thumb Code   156  exti_irq.o(.text.EXTI9_5_IRQHandler)
    GPIO_configurePin                        0x08003309   Thumb Code   202  gpio.o(.text.GPIO_configurePin)
    GPIO_readPin                             0x080033d5   Thumb Code    50  gpio.o(.text.GPIO_readPin)
    GPIO_setPinFuction                       0x08003409   Thumb Code   106  gpio.o(.text.GPIO_setPinFuction)
    GPIO_writePin                            0x08003475   Thumb Code    64  gpio.o(.text.GPIO_writePin)
    HBLE_VGetKey                             0x080034c1   Thumb Code    30  ble.o(.text.HBLE_VGetKey)
    HBLE_VInit                               0x080034e1   Thumb Code    74  ble.o(.text.HBLE_VInit)
    I2C1_Read_byte                           0x0800352d   Thumb Code    44  i2c.o(.text.I2C1_Read_byte)
    I2C1_Write_byte                          0x08003559   Thumb Code    46  i2c.o(.text.I2C1_Write_byte)
    I2C_MASTER_init                          0x08003589   Thumb Code   158  i2c.o(.text.I2C_MASTER_init)
    I2C_Start                                0x08003629   Thumb Code    32  i2c.o(.text.I2C_Start)
    I2C_Stop                                 0x08003649   Thumb Code    62  i2c.o(.text.I2C_Stop)
    I2C_init                                 0x08003689   Thumb Code    56  i2c.o(.text.I2C_init)
    ICU_voidClrTimerIcuFlag                  0x080036c1   Thumb Code    28  icu.o(.text.ICU_voidClrTimerIcuFlag)
    ICU_voidClrTimerOvFlag                   0x080036dd   Thumb Code    22  icu.o(.text.ICU_voidClrTimerOvFlag)
    ICU_voidDisableTimer                     0x080036f5   Thumb Code    22  icu.o(.text.ICU_voidDisableTimer)
    ICU_voidEnableTimer                      0x0800370d   Thumb Code    22  icu.o(.text.ICU_voidEnableTimer)
    ICU_voidGetICU_Count                     0x08003725   Thumb Code    96  icu.o(.text.ICU_voidGetICU_Count)
    ICU_voidGetTimerIcuStatus                0x08003785   Thumb Code    28  icu.o(.text.ICU_voidGetTimerIcuStatus)
    ICU_voidGetTimerOvStatus                 0x080037a1   Thumb Code    22  icu.o(.text.ICU_voidGetTimerOvStatus)
    ICU_voidInitTimer                        0x080037b9   Thumb Code   172  icu.o(.text.ICU_voidInitTimer)
    ICU_voidSetArrTime                       0x08003865   Thumb Code    16  icu.o(.text.ICU_voidSetArrTime)
    ICU_voidSetCountTime                     0x08003875   Thumb Code    16  icu.o(.text.ICU_voidSetCountTime)
    MNVIC_EnuEnablePerInterrupt              0x08003885   Thumb Code    70  nvic.o(.text.MNVIC_EnuEnablePerInterrupt)
    MUSART1_VidSetCallBack                   0x080038cd   Thumb Code    16  usart.o(.text.MUSART1_VidSetCallBack)
    MUSART_voidInit                          0x080038dd   Thumb Code   370  usart.o(.text.MUSART_voidInit)
    Motor_SetDirectionT                      0x08003a51   Thumb Code   228  main.o(.text.Motor_SetDirectionT)
    PWM_enu_Init                             0x08003b35   Thumb Code   418  pwm.o(.text.PWM_enu_Init)
    PWM_enu_SetDutyCycle                     0x08003cd9   Thumb Code   148  pwm.o(.text.PWM_enu_SetDutyCycle)
    PendSV_Handler                           0x08003d71   Thumb Code   100  port.o(.text.PendSV_Handler)
    RCC_voidEnablePeripheral                 0x08003dd5   Thumb Code    74  rcc.o(.text.RCC_voidEnablePeripheral)
    SVC_Handler                              0x08003e21   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x08003e45   Thumb Code    30  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x08003e65   Thumb Code    18  system_stm32f3xx.o(.text.SystemInit)
    USART1_IRQHandler                        0x08003e79   Thumb Code    42  usart.o(.text.USART1_IRQHandler)
    US_GetDistanceT                          0x08003ea5   Thumb Code   106  main.o(.text.US_GetDistanceT)
    US_voidGetUSSensorDistanceTask           0x08003f11   Thumb Code   168  us.o(.text.US_voidGetUSSensorDistanceTask)
    US_voidInit                              0x08003fb9   Thumb Code    58  us.o(.text.US_voidInit)
    US_voidSetTrigger                        0x08003ff5   Thumb Code   184  us.o(.text.US_voidSetTrigger)
    US_voidUltraSonicStart                   0x080040ad   Thumb Code    48  us.o(.text.US_voidUltraSonicStart)
    _mutex_acquire                           0x080040dd   Thumb Code    36  clib_arm.o(.text._mutex_acquire)
    _mutex_free                              0x08004101   Thumb Code    82  clib_arm.o(.text._mutex_free)
    _mutex_initialize                        0x08004155   Thumb Code   126  clib_arm.o(.text._mutex_initialize)
    _mutex_release                           0x080041d5   Thumb Code    38  clib_arm.o(.text._mutex_release)
    _platform_post_stackheap_init            0x080041fd   Thumb Code     2  clib_arm.o(.text._platform_post_stackheap_init)
    main                                     0x08004201   Thumb Code   366  main.o(.text.main)
    pvPortMalloc                             0x08004a79   Thumb Code   484  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x08004c5d   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x08004c75   Thumb Code    40  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x08004c9d   Thumb Code    36  list.o(.text.uxListRemove)
    vApplicationGetIdleTaskMemory            0x08004cc1   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x08004cdd   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x08004cf9   Thumb Code     2  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x08004cfd   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x08004d15   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x08004d1d   Thumb Code    96  list.o(.text.vListInsert)
    vPortEnterCritical                       0x08004d91   Thumb Code    32  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x08004db1   Thumb Code    26  port.o(.text.vPortExitCritical)
    vPortFree                                0x08004dcd   Thumb Code   182  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08004e85   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vQueueDelete                             0x08004eb9   Thumb Code    14  queue.o(.text.vQueueDelete)
    vQueueWaitForMessageRestricted           0x08004ec9   Thumb Code    80  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x08004f19   Thumb Code   108  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x08004f85   Thumb Code    18  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08004f99   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08004fa9   Thumb Code    32  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x08004fc9   Thumb Code   138  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x08005055   Thumb Code   128  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x080050d5   Thumb Code   208  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x080051a5   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x080051b5   Thumb Code   180  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x08005269   Thumb Code   112  port.o(.text.xPortStartScheduler)
    xPortSysTickHandler                      0x080052d9   Thumb Code    46  port.o(.text.xPortSysTickHandler)
    xQueueCreateMutex                        0x08005309   Thumb Code   116  queue.o(.text.xQueueCreateMutex)
    xQueueCreateMutexStatic                  0x0800537d   Thumb Code   110  queue.o(.text.xQueueCreateMutexStatic)
    xQueueGenericCreateStatic                0x080053ed   Thumb Code   130  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericSend                        0x08005471   Thumb Code   382  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x080055f1   Thumb Code   330  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x0800573d   Thumb Code   354  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x080058a1   Thumb Code   100  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x08005905   Thumb Code   238  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x080059f5   Thumb Code   206  tasks.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x08005ac5   Thumb Code    30  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x08005ae5   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x08005af1   Thumb Code   264  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08005bf9   Thumb Code   112  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x08005c69   Thumb Code   170  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x08005d15   Thumb Code   210  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08005de9   Thumb Code   254  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08005ee9   Thumb Code   152  timers.o(.text.xTimerCreateTimerTask)
    _fp_init                                 0x08005f81   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08005f99   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08005f99   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    uxTopUsedPriority                        0x08005fe4   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x08005fe8   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08006008   Number         0  anon$$obj.o(Region$$Table)
    Global_u8LogsArr                         0x20000000   Data           2  main.o(.data..L_MergedGlobals)
    My_Data                                  0x20000002   Data           3  main.o(.data..L_MergedGlobals)
    PA0                                      0x20000005   Data           4  pwm.o(.data..L_MergedGlobals)
    PB6                                      0x20000009   Data           4  pwm.o(.data..L_MergedGlobals)
    input1PinBack                            0x2000000d   Data           4  motor.o(.data..L_MergedGlobals)
    input1PinFront                           0x20000011   Data           4  motor.o(.data..L_MergedGlobals)
    input2PinBack                            0x20000015   Data           4  motor.o(.data..L_MergedGlobals)
    input2PinFront                           0x20000019   Data           4  motor.o(.data..L_MergedGlobals)
    UART_PIN_TX                              0x2000001e   Data           4  ble.o(.data..L_MergedGlobals)
    UART_PIN_RX                              0x20000022   Data           4  ble.o(.data..L_MergedGlobals)
    UART                                     0x20000026   Data          10  ble.o(.data..L_MergedGlobals)
    SCL                                      0x20000030   Data           4  eeprom.o(.data..L_MergedGlobals)
    SDA                                      0x20000034   Data           4  eeprom.o(.data..L_MergedGlobals)
    G_Key                                    0x20000038   Data           1  ble.o(.data.G_Key)
    SystemCoreClock                          0x2000003c   Data           4  system_stm32f3xx.o(.data.SystemCoreClock)
    Timer                                    0x20000040   Data          12  icu.o(.data.Timer)
    __libspace_start                         0x20000050   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x200000b0   Data           0  libspace.o(.bss)
    Global_readEEPROM                        0x20000186   Data           2  main.o(.bss..L_MergedGlobals.1)
    ARR_Recieved_Data                        0x200001b0   Data         448  can.o(.bss.ARR_Recieved_Data)
    Call_Ptr                                 0x20000370   Data          60  exti.o(.bss.Call_Ptr)
    Global_u8DataArr                         0x200003ac   Data           3  main.o(.bss.Global_u8DataArr)
    MUSART1_CallBack                         0x200003b0   Data           4  usart.o(.bss.MUSART1_CallBack)
    REC_Data                                 0x200003b4   Data           3  main.o(.bss.REC_Data)
    pxCurrentTCB                             0x20000600   Data           4  tasks.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0800023d

  Load Region LR_1 (Base: 0x08000000, Size: 0x00006058, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00006008, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000194   Data   RO          585    RESET               startup_stm32f303xe.o
    0x08000194   0x08000194   0x00000008   Code   RO          977  * !!!main             c_w.l(__main.o)
    0x0800019c   0x0800019c   0x00000034   Code   RO         1142    !!!scatter          c_w.l(__scatter.o)
    0x080001d0   0x080001d0   0x0000001a   Code   RO         1144    !!handler_copy      c_w.l(__scatter_copy.o)
    0x080001ea   0x080001ea   0x00000002   PAD
    0x080001ec   0x080001ec   0x0000001c   Code   RO         1146    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000208   0x08000208   0x00000002   Code   RO         1006    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800020a   0x0800020a   0x00000004   Code   RO         1012    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1015    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1018    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1020    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1022    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1025    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1027    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1029    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1031    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1033    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1035    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1037    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1039    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1041    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1043    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1045    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1049    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1051    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1053    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1055    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000002   Code   RO         1056    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000210   0x08000210   0x00000002   Code   RO         1078    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1093    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1095    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1098    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1101    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1103    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1106    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000002   Code   RO         1107    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000214   0x08000214   0x00000000   Code   RO          979    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000214   0x08000214   0x00000000   Code   RO          985    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000214   0x08000214   0x00000006   Code   RO          997    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800021a   0x0800021a   0x00000008   Code   RO          986    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000222   0x08000222   0x00000004   Code   RO          988    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000226   0x08000226   0x00000000   Code   RO          990    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000226   0x08000226   0x00000008   Code   RO          991    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800022e   0x0800022e   0x00000002   Code   RO         1010    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000230   0x08000230   0x00000000   Code   RO         1058    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000230   0x08000230   0x00000004   Code   RO         1059    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000234   0x08000234   0x00000006   Code   RO         1060    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800023a   0x0800023a   0x00000002   PAD
    0x0800023c   0x0800023c   0x00000040   Code   RO          586  * .text               startup_stm32f303xe.o
    0x0800027c   0x0800027c   0x0000008a   Code   RO          969    .text               c_w.l(rt_memcpy_v6.o)
    0x08000306   0x08000306   0x00000010   Code   RO          971    .text               c_w.l(aeabi_memset4.o)
    0x08000316   0x08000316   0x00000044   Code   RO          973    .text               c_w.l(rt_memclr.o)
    0x0800035a   0x0800035a   0x00000006   Code   RO          975    .text               c_w.l(heapauxi.o)
    0x08000360   0x08000360   0x00000064   Code   RO          980    .text               c_w.l(rt_memcpy_w.o)
    0x080003c4   0x080003c4   0x0000004e   Code   RO          982    .text               c_w.l(rt_memclr_w.o)
    0x08000412   0x08000412   0x0000004a   Code   RO          999    .text               c_w.l(sys_stackheap_outer.o)
    0x0800045c   0x0800045c   0x00000012   Code   RO         1001    .text               c_w.l(exit.o)
    0x0800046e   0x0800046e   0x00000002   PAD
    0x08000470   0x08000470   0x00000008   Code   RO         1007    .text               c_w.l(libspace.o)
    0x08000478   0x08000478   0x0000000c   Code   RO         1068    .text               c_w.l(sys_exit.o)
    0x08000484   0x08000484   0x00000002   Code   RO         1083    .text               c_w.l(use_no_semi.o)
    0x08000486   0x08000486   0x00000000   Code   RO         1085    .text               c_w.l(indicate_semi.o)
    0x08000486   0x08000486   0x00000002   PAD
    0x08000488   0x08000488   0x00000074   Code   RO           14    .text.Button_StateT  main.o
    0x080004fc   0x080004fc   0x00000052   Code   RO           12    .text.CAN_RevieveDataT  main.o
    0x0800054e   0x0800054e   0x00000002   PAD
    0x08000550   0x08000550   0x00000054   Code   RO           10    .text.CAN_SendDataT  main.o
    0x080005a4   0x080005a4   0x000015e8   Code   RO          303    .text.CAN_enuCreateFilter  can.o
    0x08001b8c   0x08001b8c   0x000001a2   Code   RO          299    .text.CAN_enuInit   can.o
    0x08001d2e   0x08001d2e   0x00000002   PAD
    0x08001d30   0x08001d30   0x0000049c   Code   RO          305    .text.CAN_enuRecieve  can.o
    0x080021cc   0x080021cc   0x00000c0a   Code   RO          301    .text.CAN_enuTransmit  can.o
    0x08002dd6   0x08002dd6   0x00000002   PAD
    0x08002dd8   0x08002dd8   0x00000062   Code   RO          217    .text.DCmotor_Init  motor.o
    0x08002e3a   0x08002e3a   0x00000002   PAD
    0x08002e3c   0x08002e3c   0x0000004a   Code   RO          221    .text.DCmotor_backMove  motor.o
    0x08002e86   0x08002e86   0x00000002   PAD
    0x08002e88   0x08002e88   0x0000004a   Code   RO          219    .text.DCmotor_frontMove  motor.o
    0x08002ed2   0x08002ed2   0x00000002   PAD
    0x08002ed4   0x08002ed4   0x0000004a   Code   RO          225    .text.DCmotor_leftMove  motor.o
    0x08002f1e   0x08002f1e   0x00000002   PAD
    0x08002f20   0x08002f20   0x0000004a   Code   RO          223    .text.DCmotor_rightMove  motor.o
    0x08002f6a   0x08002f6a   0x00000002   PAD
    0x08002f6c   0x08002f6c   0x00000042   Code   RO          227    .text.DCmotor_stop  motor.o
    0x08002fae   0x08002fae   0x00000002   PAD
    0x08002fb0   0x08002fb0   0x000000b8   Code   RO          331    .text.EEPROM_READ_STRING  eeprom.o
    0x08003068   0x08003068   0x000000a8   Code   RO          327    .text.EEPROM_WRITE_STRING  eeprom.o
    0x08003110   0x08003110   0x0000001c   Code   RO            4    .text.EEPROM_WriteLogsT  main.o
    0x0800312c   0x0800312c   0x00000044   Code   RO          323    .text.EEPROM_init   eeprom.o
    0x08003170   0x08003170   0x0000000c   Code   RO          195    .text.EXTI0_IRQHandler  exti_irq.o
    0x0800317c   0x0800317c   0x000000c0   Code   RO          207    .text.EXTI15_10_IRQHandler  exti_irq.o
    0x0800323c   0x0800323c   0x0000000c   Code   RO          197    .text.EXTI1_IRQHandler  exti_irq.o
    0x08003248   0x08003248   0x0000000c   Code   RO          199    .text.EXTI2_TSC_IRQHandler  exti_irq.o
    0x08003254   0x08003254   0x0000000c   Code   RO          201    .text.EXTI3_IRQHandler  exti_irq.o
    0x08003260   0x08003260   0x0000000c   Code   RO          203    .text.EXTI4_IRQHandler  exti_irq.o
    0x0800326c   0x0800326c   0x0000009c   Code   RO          205    .text.EXTI9_5_IRQHandler  exti_irq.o
    0x08003308   0x08003308   0x000000ca   Code   RO           54    .text.GPIO_configurePin  gpio.o
    0x080033d2   0x080033d2   0x00000002   PAD
    0x080033d4   0x080033d4   0x00000032   Code   RO           60    .text.GPIO_readPin  gpio.o
    0x08003406   0x08003406   0x00000002   PAD
    0x08003408   0x08003408   0x0000006a   Code   RO           66    .text.GPIO_setPinFuction  gpio.o
    0x08003472   0x08003472   0x00000002   PAD
    0x08003474   0x08003474   0x00000040   Code   RO           56    .text.GPIO_writePin  gpio.o
    0x080034b4   0x080034b4   0x0000000c   Code   RO          284    .text.HBLE_VGetChar  ble.o
    0x080034c0   0x080034c0   0x0000001e   Code   RO          286    .text.HBLE_VGetKey  ble.o
    0x080034de   0x080034de   0x00000002   PAD
    0x080034e0   0x080034e0   0x0000004a   Code   RO          282    .text.HBLE_VInit    ble.o
    0x0800352a   0x0800352a   0x00000002   PAD
    0x0800352c   0x0800352c   0x0000002c   Code   RO          353    .text.I2C1_Read_byte  i2c.o
    0x08003558   0x08003558   0x0000002e   Code   RO          351    .text.I2C1_Write_byte  i2c.o
    0x08003586   0x08003586   0x00000002   PAD
    0x08003588   0x08003588   0x0000009e   Code   RO          345    .text.I2C_MASTER_init  i2c.o
    0x08003626   0x08003626   0x00000002   PAD
    0x08003628   0x08003628   0x00000020   Code   RO          347    .text.I2C_Start     i2c.o
    0x08003648   0x08003648   0x0000003e   Code   RO          349    .text.I2C_Stop      i2c.o
    0x08003686   0x08003686   0x00000002   PAD
    0x08003688   0x08003688   0x00000038   Code   RO          343    .text.I2C_init      i2c.o
    0x080036c0   0x080036c0   0x0000001c   Code   RO          165    .text.ICU_voidClrTimerIcuFlag  icu.o
    0x080036dc   0x080036dc   0x00000016   Code   RO          159    .text.ICU_voidClrTimerOvFlag  icu.o
    0x080036f2   0x080036f2   0x00000002   PAD
    0x080036f4   0x080036f4   0x00000016   Code   RO          167    .text.ICU_voidDisableTimer  icu.o
    0x0800370a   0x0800370a   0x00000002   PAD
    0x0800370c   0x0800370c   0x00000016   Code   RO          153    .text.ICU_voidEnableTimer  icu.o
    0x08003722   0x08003722   0x00000002   PAD
    0x08003724   0x08003724   0x00000060   Code   RO          155    .text.ICU_voidGetICU_Count  icu.o
    0x08003784   0x08003784   0x0000001c   Code   RO          161    .text.ICU_voidGetTimerIcuStatus  icu.o
    0x080037a0   0x080037a0   0x00000016   Code   RO          157    .text.ICU_voidGetTimerOvStatus  icu.o
    0x080037b6   0x080037b6   0x00000002   PAD
    0x080037b8   0x080037b8   0x000000ac   Code   RO          147    .text.ICU_voidInitTimer  icu.o
    0x08003864   0x08003864   0x00000010   Code   RO          163    .text.ICU_voidSetArrTime  icu.o
    0x08003874   0x08003874   0x00000010   Code   RO          151    .text.ICU_voidSetCountTime  icu.o
    0x08003884   0x08003884   0x00000046   Code   RO           87    .text.MNVIC_EnuEnablePerInterrupt  nvic.o
    0x080038ca   0x080038ca   0x00000002   PAD
    0x080038cc   0x080038cc   0x00000010   Code   RO          133    .text.MUSART1_VidSetCallBack  usart.o
    0x080038dc   0x080038dc   0x00000172   Code   RO          125    .text.MUSART_voidInit  usart.o
    0x08003a4e   0x08003a4e   0x00000002   PAD
    0x08003a50   0x08003a50   0x000000e4   Code   RO            2    .text.Motor_SetDirectionT  main.o
    0x08003b34   0x08003b34   0x000001a2   Code   RO          110    .text.PWM_enu_Init  pwm.o
    0x08003cd6   0x08003cd6   0x00000002   PAD
    0x08003cd8   0x08003cd8   0x00000094   Code   RO          112    .text.PWM_enu_SetDutyCycle  pwm.o
    0x08003d6c   0x08003d6c   0x00000004   PAD
    0x08003d70   0x08003d70   0x00000064   Code   RO          686    .text.PendSV_Handler  port.o
    0x08003dd4   0x08003dd4   0x0000004a   Code   RO           39    .text.RCC_voidEnablePeripheral  rcc.o
    0x08003e1e   0x08003e1e   0x00000002   PAD
    0x08003e20   0x08003e20   0x00000024   Code   RO          670    .text.SVC_Handler   port.o
    0x08003e44   0x08003e44   0x0000001e   Code   RO          390    .text.SysTick_Handler  cmsis_os2.o
    0x08003e62   0x08003e62   0x00000002   PAD
    0x08003e64   0x08003e64   0x00000012   Code   RO          593    .text.SystemInit    system_stm32f3xx.o
    0x08003e76   0x08003e76   0x00000002   PAD
    0x08003e78   0x08003e78   0x0000002a   Code   RO          135    .text.USART1_IRQHandler  usart.o
    0x08003ea2   0x08003ea2   0x00000002   PAD
    0x08003ea4   0x08003ea4   0x0000006a   Code   RO            8    .text.US_GetDistanceT  main.o
    0x08003f0e   0x08003f0e   0x00000002   PAD
    0x08003f10   0x08003f10   0x000000a8   Code   RO          270    .text.US_voidGetUSSensorDistanceTask  us.o
    0x08003fb8   0x08003fb8   0x0000003a   Code   RO          248    .text.US_voidInit   us.o
    0x08003ff2   0x08003ff2   0x00000002   PAD
    0x08003ff4   0x08003ff4   0x000000b8   Code   RO          252    .text.US_voidSetTrigger  us.o
    0x080040ac   0x080040ac   0x00000030   Code   RO          268    .text.US_voidUltraSonicStart  us.o
    0x080040dc   0x080040dc   0x00000024   Code   RO          371    .text._mutex_acquire  clib_arm.o
    0x08004100   0x08004100   0x00000052   Code   RO          375    .text._mutex_free   clib_arm.o
    0x08004152   0x08004152   0x00000002   PAD
    0x08004154   0x08004154   0x0000007e   Code   RO          369    .text._mutex_initialize  clib_arm.o
    0x080041d2   0x080041d2   0x00000002   PAD
    0x080041d4   0x080041d4   0x00000026   Code   RO          373    .text._mutex_release  clib_arm.o
    0x080041fa   0x080041fa   0x00000002   PAD
    0x080041fc   0x080041fc   0x00000002   Code   RO          365    .text._platform_post_stackheap_init  clib_arm.o
    0x080041fe   0x080041fe   0x00000002   PAD
    0x08004200   0x08004200   0x0000016e   Code   RO           18    .text.main          main.o
    0x0800436e   0x0800436e   0x00000002   PAD
    0x08004370   0x08004370   0x00000086   Code   RO          806    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x080043f6   0x080043f6   0x00000002   PAD
    0x080043f8   0x080043f8   0x00000294   Code   RO          796    .text.prvAddNewTaskToReadyList  tasks.o
    0x0800468c   0x0800468c   0x0000006a   Code   RO          830    .text.prvIdleTask   tasks.o
    0x080046f6   0x080046f6   0x00000002   PAD
    0x080046f8   0x080046f8   0x00000028   Code   RO          678    .text.prvPortStartFirstTask  port.o
    0x08004720   0x08004720   0x000000a0   Code   RO          954    .text.prvSampleTimeNow  timers.o
    0x080047c0   0x080047c0   0x0000002e   Code   RO          668    .text.prvTaskExitError  port.o
    0x080047ee   0x080047ee   0x00000002   PAD
    0x080047f0   0x080047f0   0x00000214   Code   RO          918    .text.prvTimerTask  timers.o
    0x08004a04   0x08004a04   0x00000074   Code   RO          751    .text.prvUnlockQueue  queue.o
    0x08004a78   0x08004a78   0x000001e4   Code   RO          700    .text.pvPortMalloc  heap_4.o
    0x08004c5c   0x08004c5c   0x00000018   Code   RO          886    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x08004c74   0x08004c74   0x00000028   Code   RO          666    .text.pxPortInitialiseStack  port.o
    0x08004c9c   0x08004c9c   0x00000024   Code   RO          655    .text.uxListRemove  list.o
    0x08004cc0   0x08004cc0   0x0000001a   Code   RO          538    .text.vApplicationGetIdleTaskMemory  cmsis_os2.o
    0x08004cda   0x08004cda   0x00000002   PAD
    0x08004cdc   0x08004cdc   0x0000001a   Code   RO          540    .text.vApplicationGetTimerTaskMemory  cmsis_os2.o
    0x08004cf6   0x08004cf6   0x00000002   PAD
    0x08004cf8   0x08004cf8   0x00000002   Code   RO          536    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x08004cfa   0x08004cfa   0x00000002   PAD
    0x08004cfc   0x08004cfc   0x00000016   Code   RO          647    .text.vListInitialise  list.o
    0x08004d12   0x08004d12   0x00000002   PAD
    0x08004d14   0x08004d14   0x00000006   Code   RO          649    .text.vListInitialiseItem  list.o
    0x08004d1a   0x08004d1a   0x00000002   PAD
    0x08004d1c   0x08004d1c   0x00000060   Code   RO          653    .text.vListInsert   list.o
    0x08004d7c   0x08004d7c   0x00000014   Code   RO          676    .text.vPortEnableVFP  port.o
    0x08004d90   0x08004d90   0x00000020   Code   RO          682    .text.vPortEnterCritical  port.o
    0x08004db0   0x08004db0   0x0000001a   Code   RO          684    .text.vPortExitCritical  port.o
    0x08004dca   0x08004dca   0x00000002   PAD
    0x08004dcc   0x08004dcc   0x000000b6   Code   RO          702    .text.vPortFree     heap_4.o
    0x08004e82   0x08004e82   0x00000002   PAD
    0x08004e84   0x08004e84   0x00000034   Code   RO          674    .text.vPortSetupTimerInterrupt  port.o
    0x08004eb8   0x08004eb8   0x0000000e   Code   RO          771    .text.vQueueDelete  queue.o
    0x08004ec6   0x08004ec6   0x00000002   PAD
    0x08004ec8   0x08004ec8   0x00000050   Code   RO          783    .text.vQueueWaitForMessageRestricted  queue.o
    0x08004f18   0x08004f18   0x0000006c   Code   RO          810    .text.vTaskDelay    tasks.o
    0x08004f84   0x08004f84   0x00000012   Code   RO          860    .text.vTaskInternalSetTimeOutState  tasks.o
    0x08004f96   0x08004f96   0x00000002   PAD
    0x08004f98   0x08004f98   0x0000000e   Code   RO          864    .text.vTaskMissedYield  tasks.o
    0x08004fa6   0x08004fa6   0x00000002   PAD
    0x08004fa8   0x08004fa8   0x00000020   Code   RO          848    .text.vTaskPlaceOnEventList  tasks.o
    0x08004fc8   0x08004fc8   0x0000008a   Code   RO          852    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x08005052   0x08005052   0x00000002   PAD
    0x08005054   0x08005054   0x00000080   Code   RO          882    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x080050d4   0x080050d4   0x000000d0   Code   RO          828    .text.vTaskStartScheduler  tasks.o
    0x080051a4   0x080051a4   0x00000010   Code   RO          804    .text.vTaskSuspendAll  tasks.o
    0x080051b4   0x080051b4   0x000000b4   Code   RO          822    .text.vTaskSwitchContext  tasks.o
    0x08005268   0x08005268   0x00000070   Code   RO          672    .text.xPortStartScheduler  port.o
    0x080052d8   0x080052d8   0x0000002e   Code   RO          688    .text.xPortSysTickHandler  port.o
    0x08005306   0x08005306   0x00000002   PAD
    0x08005308   0x08005308   0x00000074   Code   RO          731    .text.xQueueCreateMutex  queue.o
    0x0800537c   0x0800537c   0x0000006e   Code   RO          733    .text.xQueueCreateMutexStatic  queue.o
    0x080053ea   0x080053ea   0x00000002   PAD
    0x080053ec   0x080053ec   0x00000082   Code   RO          727    .text.xQueueGenericCreateStatic  queue.o
    0x0800546e   0x0800546e   0x00000002   PAD
    0x08005470   0x08005470   0x0000017e   Code   RO          741    .text.xQueueGenericSend  queue.o
    0x080055ee   0x080055ee   0x00000002   PAD
    0x080055f0   0x080055f0   0x0000014a   Code   RO          757    .text.xQueueReceive  queue.o
    0x0800573a   0x0800573a   0x00000002   PAD
    0x0800573c   0x0800573c   0x00000162   Code   RO          745    .text.xQueueSemaphoreTake  queue.o
    0x0800589e   0x0800589e   0x00000002   PAD
    0x080058a0   0x080058a0   0x00000064   Code   RO          862    .text.xTaskCheckForTimeOut  tasks.o
    0x08005904   0x08005904   0x000000ee   Code   RO          798    .text.xTaskCreate   tasks.o
    0x080059f2   0x080059f2   0x00000002   PAD
    0x080059f4   0x080059f4   0x000000ce   Code   RO          794    .text.xTaskCreateStatic  tasks.o
    0x08005ac2   0x08005ac2   0x00000002   PAD
    0x08005ac4   0x08005ac4   0x0000001e   Code   RO          876    .text.xTaskGetSchedulerState  tasks.o
    0x08005ae2   0x08005ae2   0x00000002   PAD
    0x08005ae4   0x08005ae4   0x0000000c   Code   RO          836    .text.xTaskGetTickCount  tasks.o
    0x08005af0   0x08005af0   0x00000108   Code   RO          834    .text.xTaskIncrementTick  tasks.o
    0x08005bf8   0x08005bf8   0x00000070   Code   RO          880    .text.xTaskPriorityDisinherit  tasks.o
    0x08005c68   0x08005c68   0x000000aa   Code   RO          878    .text.xTaskPriorityInherit  tasks.o
    0x08005d12   0x08005d12   0x00000002   PAD
    0x08005d14   0x08005d14   0x000000d2   Code   RO          854    .text.xTaskRemoveFromEventList  tasks.o
    0x08005de6   0x08005de6   0x00000002   PAD
    0x08005de8   0x08005de8   0x000000fe   Code   RO          808    .text.xTaskResumeAll  tasks.o
    0x08005ee6   0x08005ee6   0x00000002   PAD
    0x08005ee8   0x08005ee8   0x00000098   Code   RO          916    .text.xTimerCreateTimerTask  timers.o
    0x08005f80   0x08005f80   0x0000001a   Code   RO         1066    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08005f9a   0x08005f9a   0x00000002   PAD
    0x08005f9c   0x08005f9c   0x0000000c   Data   RO          355    .rodata..L__const.I2C1_Read_byte.loc_u32_I2Cx  i2c.o
    0x08005fa8   0x08005fa8   0x0000000c   Data   RO          114    .rodata..L__const.PWM_enu_SetDutyCycle.Timx_BASE  pwm.o
    0x08005fb4   0x08005fb4   0x00000010   Data   RO           23    .rodata.cst16       main.o
    0x08005fc4   0x08005fc4   0x00000020   Data   RO           71    .rodata.cst32       gpio.o
    0x08005fe4   0x08005fe4   0x00000004   Data   RO          903    .rodata.uxTopUsedPriority  tasks.o
    0x08005fe8   0x08005fe8   0x00000020   Data   RO         1141    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08006008, Size: 0x00000050, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08006008   0x00000005   Data   RW           26    .data..L_MergedGlobals  main.o
    0x20000005   0x0800600d   0x00000008   Data   RW          115    .data..L_MergedGlobals  pwm.o
    0x2000000d   0x08006015   0x00000010   Data   RW          238    .data..L_MergedGlobals  motor.o
    0x2000001d   0x08006025   0x00000001   PAD
    0x2000001e   0x08006026   0x00000012   Data   RW          289    .data..L_MergedGlobals  ble.o
    0x20000030   0x08006038   0x00000008   Data   RW          333    .data..L_MergedGlobals  eeprom.o
    0x20000038   0x08006040   0x00000001   Data   RW          288    .data.G_Key         ble.o
    0x20000039   0x08006041   0x00000003   PAD
    0x2000003c   0x08006044   0x00000004   Data   RW          597    .data.SystemCoreClock  system_stm32f3xx.o
    0x20000040   0x08006048   0x0000000c   Data   RW          169    .data.Timer         icu.o
    0x2000004c   0x08006054   0x00000004   Data   RW          690    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000050, Load base: 0x08006058, Size: 0x00003350, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000050        -       0x00000060   Zero   RW         1008    .bss                c_w.l(libspace.o)
    0x200000b0        -       0x00000007   Zero   RW          272    .bss..L_MergedGlobals  us.o
    0x200000b7   0x08006058   0x00000001   PAD
    0x200000b8        -       0x0000001c   Zero   RW          715    .bss..L_MergedGlobals  heap_4.o
    0x200000d4        -       0x00000074   Zero   RW          905    .bss..L_MergedGlobals  tasks.o
    0x20000148        -       0x0000003c   Zero   RW          958    .bss..L_MergedGlobals  timers.o
    0x20000184        -       0x00000004   Zero   RW           27    .bss..L_MergedGlobals.1  main.o
    0x20000188        -       0x00000028   Zero   RW          906    .bss..L_MergedGlobals.1  tasks.o
    0x200001b0        -       0x000001c0   Zero   RW          313    .bss.ARR_Recieved_Data  can.o
    0x20000370        -       0x0000003c   Zero   RW          185    .bss.Call_Ptr       exti.o
    0x200003ac        -       0x00000003   Zero   RW           22    .bss.Global_u8DataArr  main.o
    0x200003af   0x08006058   0x00000001   PAD
    0x200003b0        -       0x00000004   Zero   RW          137    .bss.MUSART1_CallBack  usart.o
    0x200003b4        -       0x00000003   Zero   RW           20    .bss.REC_Data       main.o
    0x200003b7   0x08006058   0x00000001   PAD
    0x200003b8        -       0x00000002   Zero   RW           21    .bss.US_GetDistanceT.Local_Dist  main.o
    0x200003ba   0x08006058   0x00000002   PAD
    0x200003bc        -       0x00000190   Zero   RW          380    .bss.clib_mutex_cb  clib_arm.o
    0x2000054c        -       0x00000014   Zero   RW          379    .bss.clib_mutex_id  clib_arm.o
    0x20000560        -       0x00000050   Zero   RW          957    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x200005b0        -       0x00000050   Zero   RW          956    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x20000600        -       0x00000004   Zero   RW          902    .bss.pxCurrentTCB   tasks.o
    0x20000604        -       0x00000460   Zero   RW          904    .bss.pxReadyTasksLists  tasks.o
    0x20000a64        -       0x00002000   Zero   RW          714    .bss.ucHeap         heap_4.o
    0x20002a64        -       0x00000140   Zero   RW          544    .bss.vApplicationGetIdleTaskMemory.Idle_Stack  cmsis_os2.o
    0x20002ba4        -       0x0000005c   Zero   RW          543    .bss.vApplicationGetIdleTaskMemory.Idle_TCB  cmsis_os2.o
    0x20002c00        -       0x00000140   Zero   RW          546    .bss.vApplicationGetTimerTaskMemory.Timer_Stack  cmsis_os2.o
    0x20002d40        -       0x0000005c   Zero   RW          545    .bss.vApplicationGetTimerTaskMemory.Timer_TCB  cmsis_os2.o
    0x20002d9c   0x08006058   0x00000004   PAD
    0x20002da0        -       0x00000200   Zero   RW          584    HEAP                startup_stm32f303xe.o
    0x20002fa0        -       0x00000400   Zero   RW          583    STACK               startup_stm32f303xe.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       116          0          0         19          0       2677   ble.o
     10288         92          0          0        448      19472   can.o
       284          0          0          0        420       4229   clib_arm.o
        84          0          0          0        824      61232   cmsis_os2.o
       420          0          0          8          0       3738   eeprom.o
         0          0          0          0         60       1548   exti.o
       408          0          0          0          0       1264   exti_irq.o
       422          0         32          0          0       6200   gpio.o
       666          0          0          0       8220       5741   heap_4.o
       398          0         12          0          0       2654   i2c.o
       444          8          0         12          0       3561   icu.o
       160          0          0          0          0       2403   list.o
      1010         30         16          5         12       7230   main.o
       460          0          0         16          0       3660   motor.o
        70          0          0          0          0       3322   nvic.o
       550         16          0          4          0       2993   port.o
       566          8         12          8          0       3628   pwm.o
      1632          0          0          0          0      22354   queue.o
        74          0          0          0          0       1578   rcc.o
        64         26        404          0       1536        888   startup_stm32f303xe.o
        18          0          0          4          0       2222   system_stm32f3xx.o
      3362          0          4          0       1280      36309   tasks.o
       844         18          0          0        220      14531   timers.o
       458          0          0          0          7       7058   us.o
       428          8          0          0          4       3224   usart.o

    ----------------------------------------------------------------------
     23352        206        512         80      13040     223716   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       126          0          0          4          9          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       720         16          0          0         96       1064   Library Totals
        10          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       684         16          0          0         96        948   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       720         16          0          0         96       1064   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     24072        222        512         80      13136     224012   Grand Totals
     24072        222        512         80      13136     224012   ELF Image Totals
     24072        222        512         80          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                24584 (  24.01kB)
    Total RW  Size (RW Data + ZI Data)             13216 (  12.91kB)
    Total ROM Size (Code + RO Data + RW Data)      24664 (  24.09kB)

==============================================================================

