Component: ARM Compiler 6.16 Tool: armlink [5dfeaa00]

==============================================================================

Section Cross References

    dio_program.o(.ARM.exidx.text.MGPIO_voidSetPinDirection) refers to dio_program.o(.text.MGPIO_voidSetPinDirection) for [Anonymous Symbol]
    dio_program.o(.ARM.exidx.text.MGPIO_voidSetPinValue) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for [Anonymous Symbol]
    dio_program.o(.ARM.exidx.text.MGPIO_u8GetPinValue) refers to dio_program.o(.text.MGPIO_u8GetPinValue) for [Anonymous Symbol]
    dio_program.o(.ARM.exidx.text.MGPIO_voidSetPortDirection) refers to dio_program.o(.text.MGPIO_voidSetPortDirection) for [Anonymous Symbol]
    dio_program.o(.ARM.exidx.text.MGPIO_voidSetPortValue) refers to dio_program.o(.text.MGPIO_voidSetPortValue) for [Anonymous Symbol]
    nvic_program.o(.ARM.exidx.text.MNVIC_voidInit) refers to nvic_program.o(.text.MNVIC_voidInit) for [Anonymous Symbol]
    nvic_program.o(.ARM.exidx.text.MNVIC_voidEnableInterrupt) refers to nvic_program.o(.text.MNVIC_voidEnableInterrupt) for [Anonymous Symbol]
    nvic_program.o(.ARM.exidx.text.MNVIC_voidDisableInterrupt) refers to nvic_program.o(.text.MNVIC_voidDisableInterrupt) for [Anonymous Symbol]
    nvic_program.o(.ARM.exidx.text.MNVIC_voidSetPendingFlag) refers to nvic_program.o(.text.MNVIC_voidSetPendingFlag) for [Anonymous Symbol]
    nvic_program.o(.ARM.exidx.text.MNVIC_voidClearPendingFlag) refers to nvic_program.o(.text.MNVIC_voidClearPendingFlag) for [Anonymous Symbol]
    nvic_program.o(.ARM.exidx.text.MNVIC_u8GetActiveFlag) refers to nvic_program.o(.text.MNVIC_u8GetActiveFlag) for [Anonymous Symbol]
    nvic_program.o(.ARM.exidx.text.MNVIC_voidSetPriority_2) refers to nvic_program.o(.text.MNVIC_voidSetPriority_2) for [Anonymous Symbol]
    nvic_program.o(.ARM.exidx.text.MNVIC_voidSetPriority) refers to nvic_program.o(.text.MNVIC_voidSetPriority) for [Anonymous Symbol]
    pwm_program.o(.text.MPWM_voidInit) refers to rcc_program.o(.text.MRCC_voidPerClock_State) for MRCC_voidPerClock_State
    pwm_program.o(.text.MPWM_voidInit) refers to pwm_program.o(.data.TIM) for TIM
    pwm_program.o(.text.MPWM_voidInit) refers to dio_program.o(.text.MGPIO_voidSetPinDirection) for MGPIO_voidSetPinDirection
    pwm_program.o(.ARM.exidx.text.MPWM_voidInit) refers to pwm_program.o(.text.MPWM_voidInit) for [Anonymous Symbol]
    pwm_program.o(.text.MPWM_SETValuesOfPWM) refers to pwm_program.o(.data.TIM) for TIM
    pwm_program.o(.ARM.exidx.text.MPWM_SETValuesOfPWM) refers to pwm_program.o(.text.MPWM_SETValuesOfPWM) for [Anonymous Symbol]
    rcc_program.o(.text.MRCC_voidInit) refers to rcc_program.o(.text.MRCC_voidClkEnable) for MRCC_voidClkEnable
    rcc_program.o(.text.MRCC_voidInit) refers to rcc_program.o(.text.MRCC_u8CheckClockReady) for MRCC_u8CheckClockReady
    rcc_program.o(.text.MRCC_voidInit) refers to rcc_program.o(.text.MRCC_voidSetBusesPrescaler) for MRCC_voidSetBusesPrescaler
    rcc_program.o(.text.MRCC_voidInit) refers to rcc_program.o(.text.MRCC_voidSetClkSource) for MRCC_voidSetClkSource
    rcc_program.o(.text.MRCC_voidInit) refers to rcc_program.o(.text.MRCC_voidClkDisable) for MRCC_voidClkDisable
    rcc_program.o(.ARM.exidx.text.MRCC_voidInit) refers to rcc_program.o(.text.MRCC_voidInit) for [Anonymous Symbol]
    rcc_program.o(.ARM.exidx.text.MRCC_voidClkEnable) refers to rcc_program.o(.text.MRCC_voidClkEnable) for [Anonymous Symbol]
    rcc_program.o(.ARM.exidx.text.MRCC_u8CheckClockReady) refers to rcc_program.o(.text.MRCC_u8CheckClockReady) for [Anonymous Symbol]
    rcc_program.o(.ARM.exidx.text.MRCC_voidSetBusesPrescaler) refers to rcc_program.o(.text.MRCC_voidSetBusesPrescaler) for [Anonymous Symbol]
    rcc_program.o(.ARM.exidx.text.MRCC_voidSetClkSource) refers to rcc_program.o(.text.MRCC_voidSetClkSource) for [Anonymous Symbol]
    rcc_program.o(.ARM.exidx.text.MRCC_voidClkDisable) refers to rcc_program.o(.text.MRCC_voidClkDisable) for [Anonymous Symbol]
    rcc_program.o(.ARM.exidx.text.MRCC_voidPerClock_State) refers to rcc_program.o(.text.MRCC_voidPerClock_State) for [Anonymous Symbol]
    rcc_program.o(.ARM.exidx.text.MRCC_voidSetPLLMulFactor) refers to rcc_program.o(.text.MRCC_voidSetPLLMulFactor) for [Anonymous Symbol]
    rcc_program.o(.ARM.exidx.text.MRCC_voidSetPLLSource) refers to rcc_program.o(.text.MRCC_voidSetPLLSource) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_voidInit) refers to spi.o(.text.SPI_voidInit) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_voidSendReceieveCharSynch) refers to spi.o(.text.SPI_voidSendReceieveCharSynch) for [Anonymous Symbol]
    spi.o(.text.SPI_enu_SendDataAsynch) refers to spi.o(.text.insert_queue) for insert_queue
    spi.o(.text.SPI_enu_SendDataAsynch) refers to spi.o(.text.truncate_queue) for truncate_queue
    spi.o(.ARM.exidx.text.SPI_enu_SendDataAsynch) refers to spi.o(.text.SPI_enu_SendDataAsynch) for [Anonymous Symbol]
    spi.o(.text.insert_queue) refers to spi.o(.data.gl_SPI_data_queue) for gl_SPI_data_queue
    spi.o(.ARM.exidx.text.insert_queue) refers to spi.o(.text.insert_queue) for [Anonymous Symbol]
    spi.o(.text.truncate_queue) refers to spi.o(.data.gl_SPI_data_queue) for gl_SPI_data_queue
    spi.o(.ARM.exidx.text.truncate_queue) refers to spi.o(.text.truncate_queue) for [Anonymous Symbol]
    spi.o(.text.SPI_enu_SendStreamAsynch) refers to spi.o(.text.insert_queue) for insert_queue
    spi.o(.text.SPI_enu_SendStreamAsynch) refers to spi.o(.text.truncate_queue) for truncate_queue
    spi.o(.ARM.exidx.text.SPI_enu_SendStreamAsynch) refers to spi.o(.text.SPI_enu_SendStreamAsynch) for [Anonymous Symbol]
    spi.o(.text.SPI_enu_SendRecieveStreamSynch) refers to spi.o(.text.SPI_voidSendReceieveCharSynch) for SPI_voidSendReceieveCharSynch
    spi.o(.ARM.exidx.text.SPI_enu_SendRecieveStreamSynch) refers to spi.o(.text.SPI_enu_SendRecieveStreamSynch) for [Anonymous Symbol]
    spi.o(.ARM.exidx.text.SPI_enu_GetDataAsynch) refers to spi.o(.text.SPI_enu_GetDataAsynch) for [Anonymous Symbol]
    spi.o(.text.SPI_voidsetCallBck) refers to spi.o(.bss.gl_ptr_Function) for gl_ptr_Function
    spi.o(.ARM.exidx.text.SPI_voidsetCallBck) refers to spi.o(.text.SPI_voidsetCallBck) for [Anonymous Symbol]
    spi.o(.text.SPI1_IRQHandler) refers to spi.o(.text.truncate_queue) for truncate_queue
    spi.o(.text.SPI1_IRQHandler) refers to spi.o(.bss.gl_ptr_Function) for gl_ptr_Function
    spi.o(.ARM.exidx.text.SPI1_IRQHandler) refers to spi.o(.text.SPI1_IRQHandler) for [Anonymous Symbol]
    usart_program.o(.text.MUSART_voidInit) refers to usart_program.o(.text.MUSART_voidSetBaudrateRegister) for MUSART_voidSetBaudrateRegister
    usart_program.o(.text.MUSART_voidInit) refers to usart_program.o(.data.USART) for USART
    usart_program.o(.text.MUSART_voidInit) refers to usart_program.o(.text.MUSART_voidEnableUSART_RecieveInterrupt) for MUSART_voidEnableUSART_RecieveInterrupt
    usart_program.o(.text.MUSART_voidInit) refers to dio_program.o(.text.MGPIO_voidSetPinDirection) for MGPIO_voidSetPinDirection
    usart_program.o(.text.MUSART_voidInit) refers to rcc_program.o(.text.MRCC_voidPerClock_State) for MRCC_voidPerClock_State
    usart_program.o(.ARM.exidx.text.MUSART_voidInit) refers to usart_program.o(.text.MUSART_voidInit) for [Anonymous Symbol]
    usart_program.o(.ARM.exidx.text.MUSART_voidSetBaudrateRegister) refers to usart_program.o(.text.MUSART_voidSetBaudrateRegister) for [Anonymous Symbol]
    usart_program.o(.text.MUSART_voidEnableUSART_RecieveInterrupt) refers to usart_program.o(.data.USART) for USART
    usart_program.o(.ARM.exidx.text.MUSART_voidEnableUSART_RecieveInterrupt) refers to usart_program.o(.text.MUSART_voidEnableUSART_RecieveInterrupt) for [Anonymous Symbol]
    usart_program.o(.text.MUSART_voidTransmitCharacter) refers to usart_program.o(.data.USART) for USART
    usart_program.o(.ARM.exidx.text.MUSART_voidTransmitCharacter) refers to usart_program.o(.text.MUSART_voidTransmitCharacter) for [Anonymous Symbol]
    usart_program.o(.text.MUSART_u8RecieveCharacter) refers to usart_program.o(.data.USART) for USART
    usart_program.o(.ARM.exidx.text.MUSART_u8RecieveCharacter) refers to usart_program.o(.text.MUSART_u8RecieveCharacter) for [Anonymous Symbol]
    usart_program.o(.ARM.exidx.text.MUSART_SetCallBack) refers to usart_program.o(.text.MUSART_SetCallBack) for [Anonymous Symbol]
    usart_program.o(.text.MUSART_voidTransmitstring) refers to usart_program.o(.data.USART) for USART
    usart_program.o(.ARM.exidx.text.MUSART_voidTransmitstring) refers to usart_program.o(.text.MUSART_voidTransmitstring) for [Anonymous Symbol]
    usart_program.o(.text.MUSART_u8GetRecievedValue) refers to usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable) for MUSART_u8IsRecieveBufferAvailable
    usart_program.o(.text.MUSART_u8GetRecievedValue) refers to usart_program.o(.data.GlobalUSART1_s16RecievedRear) for GlobalUSART1_s16RecievedRear
    usart_program.o(.text.MUSART_u8GetRecievedValue) refers to usart_program.o(.bss.GlobalUSART1_u8RecievedValue) for GlobalUSART1_u8RecievedValue
    usart_program.o(.text.MUSART_u8GetRecievedValue) refers to usart_program.o(.data.GlobalUSART1_s16RecievedFront) for GlobalUSART1_s16RecievedFront
    usart_program.o(.text.MUSART_u8GetRecievedValue) refers to usart_program.o(.data.GlobalUSART3_s16RecievedRear) for GlobalUSART3_s16RecievedRear
    usart_program.o(.text.MUSART_u8GetRecievedValue) refers to usart_program.o(.bss.GlobalUSART3_u8RecievedValue) for GlobalUSART3_u8RecievedValue
    usart_program.o(.text.MUSART_u8GetRecievedValue) refers to usart_program.o(.data.GlobalUSART3_s16RecievedFront) for GlobalUSART3_s16RecievedFront
    usart_program.o(.text.MUSART_u8GetRecievedValue) refers to usart_program.o(.data.GlobalUSART2_s16RecievedRear) for GlobalUSART2_s16RecievedRear
    usart_program.o(.text.MUSART_u8GetRecievedValue) refers to usart_program.o(.bss.GlobalUSART2_u8RecievedValue) for GlobalUSART2_u8RecievedValue
    usart_program.o(.text.MUSART_u8GetRecievedValue) refers to usart_program.o(.data.GlobalUSART2_s16RecievedFront) for GlobalUSART2_s16RecievedFront
    usart_program.o(.ARM.exidx.text.MUSART_u8GetRecievedValue) refers to usart_program.o(.text.MUSART_u8GetRecievedValue) for [Anonymous Symbol]
    usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable) refers to usart_program.o(.data.GlobalUSART1_s16RecievedFront) for GlobalUSART1_s16RecievedFront
    usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable) refers to usart_program.o(.data.GlobalUSART1_s16RecievedRear) for GlobalUSART1_s16RecievedRear
    usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable) refers to usart_program.o(.data.GlobalUSART3_s16RecievedFront) for GlobalUSART3_s16RecievedFront
    usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable) refers to usart_program.o(.data.GlobalUSART3_s16RecievedRear) for GlobalUSART3_s16RecievedRear
    usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable) refers to usart_program.o(.data.GlobalUSART2_s16RecievedFront) for GlobalUSART2_s16RecievedFront
    usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable) refers to usart_program.o(.data.GlobalUSART2_s16RecievedRear) for GlobalUSART2_s16RecievedRear
    usart_program.o(.ARM.exidx.text.MUSART_u8IsRecieveBufferAvailable) refers to usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable) for [Anonymous Symbol]
    usart_program.o(.text.MUSART_voidTransmitnumber) refers to usart_program.o(.data.USART) for USART
    usart_program.o(.ARM.exidx.text.MUSART_voidTransmitnumber) refers to usart_program.o(.text.MUSART_voidTransmitnumber) for [Anonymous Symbol]
    usart_program.o(.text.MUSART_voidDisableUSART_RecieveInterrupt) refers to usart_program.o(.data.USART) for USART
    usart_program.o(.ARM.exidx.text.MUSART_voidDisableUSART_RecieveInterrupt) refers to usart_program.o(.text.MUSART_voidDisableUSART_RecieveInterrupt) for [Anonymous Symbol]
    usart_program.o(.text.USART1_IRQHandler) refers to usart_program.o(.data.USART) for USART
    usart_program.o(.text.USART1_IRQHandler) refers to usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable) for MUSART_u8IsRecieveBufferAvailable
    usart_program.o(.text.USART1_IRQHandler) refers to usart_program.o(.data.GlobalUSART1_s16RecievedFront) for GlobalUSART1_s16RecievedFront
    usart_program.o(.text.USART1_IRQHandler) refers to usart_program.o(.bss.GlobalUSART1_u8RecievedValue) for GlobalUSART1_u8RecievedValue
    usart_program.o(.ARM.exidx.text.USART1_IRQHandler) refers to usart_program.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    usart_program.o(.text.USART2_IRQHandler) refers to usart_program.o(.data.USART) for USART
    usart_program.o(.text.USART2_IRQHandler) refers to usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable) for MUSART_u8IsRecieveBufferAvailable
    usart_program.o(.text.USART2_IRQHandler) refers to usart_program.o(.data.GlobalUSART2_s16RecievedFront) for GlobalUSART2_s16RecievedFront
    usart_program.o(.text.USART2_IRQHandler) refers to usart_program.o(.bss.GlobalUSART2_u8RecievedValue) for GlobalUSART2_u8RecievedValue
    usart_program.o(.ARM.exidx.text.USART2_IRQHandler) refers to usart_program.o(.text.USART2_IRQHandler) for [Anonymous Symbol]
    usart_program.o(.text.USART3_IRQHandler) refers to usart_program.o(.data.USART) for USART
    usart_program.o(.text.USART3_IRQHandler) refers to usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable) for MUSART_u8IsRecieveBufferAvailable
    usart_program.o(.text.USART3_IRQHandler) refers to usart_program.o(.data.GlobalUSART3_s16RecievedFront) for GlobalUSART3_s16RecievedFront
    usart_program.o(.text.USART3_IRQHandler) refers to usart_program.o(.bss.GlobalUSART3_u8RecievedValue) for GlobalUSART3_u8RecievedValue
    usart_program.o(.ARM.exidx.text.USART3_IRQHandler) refers to usart_program.o(.text.USART3_IRQHandler) for [Anonymous Symbol]
    ble.o(.text.HBLE_VInit) refers to rcc_program.o(.text.MRCC_voidPerClock_State) for MRCC_voidPerClock_State
    ble.o(.text.HBLE_VInit) refers to dio_program.o(.text.MGPIO_voidSetPinDirection) for MGPIO_voidSetPinDirection
    ble.o(.text.HBLE_VInit) refers to nvic_program.o(.text.MNVIC_voidEnableInterrupt) for MNVIC_voidEnableInterrupt
    ble.o(.text.HBLE_VInit) refers to usart_program.o(.text.MUSART_voidInit) for MUSART_voidInit
    ble.o(.ARM.exidx.text.HBLE_VInit) refers to ble.o(.text.HBLE_VInit) for [Anonymous Symbol]
    ble.o(.text.HBLE_VGetKey) refers to usart_program.o(.text.MUSART_u8GetRecievedValue) for MUSART_u8GetRecievedValue
    ble.o(.ARM.exidx.text.HBLE_VGetKey) refers to ble.o(.text.HBLE_VGetKey) for [Anonymous Symbol]
    motor.o(.text.DCmotor_Init) refers to rcc_program.o(.text.MRCC_voidPerClock_State) for MRCC_voidPerClock_State
    motor.o(.text.DCmotor_Init) refers to dio_program.o(.text.MGPIO_voidSetPinDirection) for MGPIO_voidSetPinDirection
    motor.o(.text.DCmotor_Init) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    motor.o(.text.DCmotor_Init) refers to pwm_program.o(.text.MPWM_voidInit) for MPWM_voidInit
    motor.o(.ARM.exidx.text.DCmotor_Init) refers to motor.o(.text.DCmotor_Init) for [Anonymous Symbol]
    motor.o(.text.DCmotor_frontMove) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    motor.o(.text.DCmotor_frontMove) refers to pwm_program.o(.text.MPWM_SETValuesOfPWM) for MPWM_SETValuesOfPWM
    motor.o(.ARM.exidx.text.DCmotor_frontMove) refers to motor.o(.text.DCmotor_frontMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_backMove) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    motor.o(.text.DCmotor_backMove) refers to pwm_program.o(.text.MPWM_SETValuesOfPWM) for MPWM_SETValuesOfPWM
    motor.o(.ARM.exidx.text.DCmotor_backMove) refers to motor.o(.text.DCmotor_backMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_rightMove) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    motor.o(.text.DCmotor_rightMove) refers to pwm_program.o(.text.MPWM_SETValuesOfPWM) for MPWM_SETValuesOfPWM
    motor.o(.ARM.exidx.text.DCmotor_rightMove) refers to motor.o(.text.DCmotor_rightMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_leftMove) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    motor.o(.text.DCmotor_leftMove) refers to pwm_program.o(.text.MPWM_SETValuesOfPWM) for MPWM_SETValuesOfPWM
    motor.o(.ARM.exidx.text.DCmotor_leftMove) refers to motor.o(.text.DCmotor_leftMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_stop) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    motor.o(.text.DCmotor_stop) refers to pwm_program.o(.text.MPWM_SETValuesOfPWM) for MPWM_SETValuesOfPWM
    motor.o(.ARM.exidx.text.DCmotor_stop) refers to motor.o(.text.DCmotor_stop) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_init) refers to rcc_program.o(.text.MRCC_voidPerClock_State) for MRCC_voidPerClock_State
    nrf24l01.o(.text.NRF24L01_init) refers to dio_program.o(.text.MGPIO_voidSetPinDirection) for MGPIO_voidSetPinDirection
    nrf24l01.o(.text.NRF24L01_init) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    nrf24l01.o(.text.NRF24L01_init) refers to spi.o(.text.SPI_voidInit) for SPI_voidInit
    nrf24l01.o(.text.NRF24L01_init) refers to nrf24l01.o(.text.NRF24L01_reset) for NRF24L01_reset
    nrf24l01.o(.text.NRF24L01_init) refers to nrf24l01.o(.text.NRF24L01_writeRegister) for NRF24L01_writeRegister
    nrf24l01.o(.ARM.exidx.text.NRF24L01_init) refers to nrf24l01.o(.text.NRF24L01_init) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_reset) refers to nrf24l01.o(.text.NRF24L01_writeRegister) for NRF24L01_writeRegister
    nrf24l01.o(.ARM.exidx.text.NRF24L01_reset) refers to nrf24l01.o(.text.NRF24L01_reset) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_writeRegister) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    nrf24l01.o(.text.NRF24L01_writeRegister) refers to nrf24l01.o(.bss.G_statusRegister) for G_statusRegister
    nrf24l01.o(.text.NRF24L01_writeRegister) refers to spi.o(.text.SPI_voidSendReceieveCharSynch) for SPI_voidSendReceieveCharSynch
    nrf24l01.o(.ARM.exidx.text.NRF24L01_writeRegister) refers to nrf24l01.o(.text.NRF24L01_writeRegister) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_switchToTransmitterMode) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    nrf24l01.o(.text.NRF24L01_switchToTransmitterMode) refers to nrf24l01.o(.data.G_transmitterAddress) for G_transmitterAddress
    nrf24l01.o(.text.NRF24L01_switchToTransmitterMode) refers to nrf24l01.o(.text.NRF24L01_writeRegisterMulti) for NRF24L01_writeRegisterMulti
    nrf24l01.o(.text.NRF24L01_switchToTransmitterMode) refers to nrf24l01.o(.text.NRF24L01_writeRegister) for NRF24L01_writeRegister
    nrf24l01.o(.text.NRF24L01_switchToTransmitterMode) refers to nrf24l01.o(.text.NRF24L01_readRegister) for NRF24L01_readRegister
    nrf24l01.o(.ARM.exidx.text.NRF24L01_switchToTransmitterMode) refers to nrf24l01.o(.text.NRF24L01_switchToTransmitterMode) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_writeRegisterMulti) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    nrf24l01.o(.text.NRF24L01_writeRegisterMulti) refers to nrf24l01.o(.bss.G_statusRegister) for G_statusRegister
    nrf24l01.o(.text.NRF24L01_writeRegisterMulti) refers to spi.o(.text.SPI_voidSendReceieveCharSynch) for SPI_voidSendReceieveCharSynch
    nrf24l01.o(.text.NRF24L01_writeRegisterMulti) refers to nrf24l01.o(.bss.G_dummyArray) for G_dummyArray
    nrf24l01.o(.text.NRF24L01_writeRegisterMulti) refers to spi.o(.text.SPI_enu_SendRecieveStreamSynch) for SPI_enu_SendRecieveStreamSynch
    nrf24l01.o(.ARM.exidx.text.NRF24L01_writeRegisterMulti) refers to nrf24l01.o(.text.NRF24L01_writeRegisterMulti) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_readRegister) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    nrf24l01.o(.text.NRF24L01_readRegister) refers to nrf24l01.o(.bss.G_statusRegister) for G_statusRegister
    nrf24l01.o(.text.NRF24L01_readRegister) refers to spi.o(.text.SPI_voidSendReceieveCharSynch) for SPI_voidSendReceieveCharSynch
    nrf24l01.o(.ARM.exidx.text.NRF24L01_readRegister) refers to nrf24l01.o(.text.NRF24L01_readRegister) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_switchToReceiverMode) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    nrf24l01.o(.text.NRF24L01_switchToReceiverMode) refers to nrf24l01.o(.text.NRF24L01_writeRegister) for NRF24L01_writeRegister
    nrf24l01.o(.text.NRF24L01_switchToReceiverMode) refers to nrf24l01.o(.data.G_receiverPipe0Address) for G_receiverPipe0Address
    nrf24l01.o(.text.NRF24L01_switchToReceiverMode) refers to nrf24l01.o(.text.NRF24L01_writeRegisterMulti) for NRF24L01_writeRegisterMulti
    nrf24l01.o(.text.NRF24L01_switchToReceiverMode) refers to nrf24l01.o(.data.G_receiverPipe1Address) for G_receiverPipe1Address
    nrf24l01.o(.text.NRF24L01_switchToReceiverMode) refers to nrf24l01.o(.data.G_receiverPipe2Address) for G_receiverPipe2Address
    nrf24l01.o(.text.NRF24L01_switchToReceiverMode) refers to nrf24l01.o(.data.G_receiverPipe3Address) for G_receiverPipe3Address
    nrf24l01.o(.text.NRF24L01_switchToReceiverMode) refers to nrf24l01.o(.data.G_receiverPipe4Address) for G_receiverPipe4Address
    nrf24l01.o(.text.NRF24L01_switchToReceiverMode) refers to nrf24l01.o(.data.G_receiverPipe5Address) for G_receiverPipe5Address
    nrf24l01.o(.text.NRF24L01_switchToReceiverMode) refers to nrf24l01.o(.text.NRF24L01_readRegister) for NRF24L01_readRegister
    nrf24l01.o(.ARM.exidx.text.NRF24L01_switchToReceiverMode) refers to nrf24l01.o(.text.NRF24L01_switchToReceiverMode) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_checkTransmitterBuffer) refers to nrf24l01.o(.text.NRF24L01_readRegister) for NRF24L01_readRegister
    nrf24l01.o(.text.NRF24L01_checkTransmitterBuffer) refers to nrf24l01.o(.text.NRF24L01_writeRegister) for NRF24L01_writeRegister
    nrf24l01.o(.ARM.exidx.text.NRF24L01_checkTransmitterBuffer) refers to nrf24l01.o(.text.NRF24L01_checkTransmitterBuffer) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_checkReceiverBuffer) refers to nrf24l01.o(.text.NRF24L01_readRegister) for NRF24L01_readRegister
    nrf24l01.o(.text.NRF24L01_checkReceiverBuffer) refers to nrf24l01.o(.text.NRF24L01_writeRegister) for NRF24L01_writeRegister
    nrf24l01.o(.ARM.exidx.text.NRF24L01_checkReceiverBuffer) refers to nrf24l01.o(.text.NRF24L01_checkReceiverBuffer) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_sendData) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    nrf24l01.o(.text.NRF24L01_sendData) refers to nrf24l01.o(.bss.G_statusRegister) for G_statusRegister
    nrf24l01.o(.text.NRF24L01_sendData) refers to spi.o(.text.SPI_voidSendReceieveCharSynch) for SPI_voidSendReceieveCharSynch
    nrf24l01.o(.text.NRF24L01_sendData) refers to nrf24l01.o(.bss.G_dummyArray) for G_dummyArray
    nrf24l01.o(.text.NRF24L01_sendData) refers to spi.o(.text.SPI_enu_SendRecieveStreamSynch) for SPI_enu_SendRecieveStreamSynch
    nrf24l01.o(.ARM.exidx.text.NRF24L01_sendData) refers to nrf24l01.o(.text.NRF24L01_sendData) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_readData) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    nrf24l01.o(.text.NRF24L01_readData) refers to nrf24l01.o(.bss.G_statusRegister) for G_statusRegister
    nrf24l01.o(.text.NRF24L01_readData) refers to spi.o(.text.SPI_voidSendReceieveCharSynch) for SPI_voidSendReceieveCharSynch
    nrf24l01.o(.text.NRF24L01_readData) refers to nrf24l01.o(.bss.G_dummyArray) for G_dummyArray
    nrf24l01.o(.text.NRF24L01_readData) refers to spi.o(.text.SPI_enu_SendRecieveStreamSynch) for SPI_enu_SendRecieveStreamSynch
    nrf24l01.o(.ARM.exidx.text.NRF24L01_readData) refers to nrf24l01.o(.text.NRF24L01_readData) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_flushTransmitterBuffer) refers to nrf24l01.o(.text.NRF24L01_sendCommand) for NRF24L01_sendCommand
    nrf24l01.o(.ARM.exidx.text.NRF24L01_flushTransmitterBuffer) refers to nrf24l01.o(.text.NRF24L01_flushTransmitterBuffer) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_sendCommand) refers to dio_program.o(.text.MGPIO_voidSetPinValue) for MGPIO_voidSetPinValue
    nrf24l01.o(.text.NRF24L01_sendCommand) refers to nrf24l01.o(.bss.G_statusRegister) for G_statusRegister
    nrf24l01.o(.text.NRF24L01_sendCommand) refers to spi.o(.text.SPI_voidSendReceieveCharSynch) for SPI_voidSendReceieveCharSynch
    nrf24l01.o(.ARM.exidx.text.NRF24L01_sendCommand) refers to nrf24l01.o(.text.NRF24L01_sendCommand) for [Anonymous Symbol]
    nrf24l01.o(.text.NRF24L01_flushReceiverBuffer) refers to nrf24l01.o(.text.NRF24L01_sendCommand) for NRF24L01_sendCommand
    nrf24l01.o(.ARM.exidx.text.NRF24L01_flushReceiverBuffer) refers to nrf24l01.o(.text.NRF24L01_flushReceiverBuffer) for [Anonymous Symbol]
    v2v-secondvehicle.o(.text.main) refers to rcc_program.o(.text.MRCC_voidInit) for MRCC_voidInit
    v2v-secondvehicle.o(.text.main) refers to ble.o(.text.HBLE_VInit) for HBLE_VInit
    v2v-secondvehicle.o(.text.main) refers to v2v-secondvehicle.o(.text.Motor_SetDirectionT) for Motor_SetDirectionT
    v2v-secondvehicle.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    v2v-secondvehicle.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    v2v-secondvehicle.o(.ARM.exidx.text.main) refers to v2v-secondvehicle.o(.text.main) for [Anonymous Symbol]
    v2v-secondvehicle.o(.text.Motor_SetDirectionT) refers to v2v-secondvehicle.o(.data.Global_u8Direction) for Global_u8Direction
    v2v-secondvehicle.o(.text.Motor_SetDirectionT) refers to ble.o(.text.HBLE_VGetKey) for HBLE_VGetKey
    v2v-secondvehicle.o(.text.Motor_SetDirectionT) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    v2v-secondvehicle.o(.ARM.exidx.text.Motor_SetDirectionT) refers to v2v-secondvehicle.o(.text.Motor_SetDirectionT) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init) refers to clib_arm.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace) for os_libspace
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace_id) for os_libspace_id
    clib_arm.o(.ARM.exidx.text.__user_perthread_libspace) refers to clib_arm.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    clib_arm.o(.text.os_kernel_is_active) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.ARM.exidx.text.os_kernel_is_active) refers to clib_arm.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_cb) for clib_mutex_cb
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    clib_arm.o(.ARM.exidx.text._mutex_initialize) refers to clib_arm.o(.text._mutex_initialize) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.is_thread_mode) for is_thread_mode
    clib_arm.o(.text._mutex_acquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    clib_arm.o(.ARM.exidx.text._mutex_acquire) refers to clib_arm.o(.text._mutex_acquire) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text.is_thread_mode) refers to clib_arm.o(.text.is_thread_mode) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.is_thread_mode) for is_thread_mode
    clib_arm.o(.text._mutex_release) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    clib_arm.o(.ARM.exidx.text._mutex_release) refers to clib_arm.o(.text._mutex_release) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    clib_arm.o(.text._mutex_free) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.ARM.exidx.text._mutex_free) refers to clib_arm.o(.text._mutex_free) for [Anonymous Symbol]
    cmsis_os1.o(.text.osThreadCreate) refers to cmsis_os2.o(.text.osThreadNew) for osThreadNew
    cmsis_os1.o(.ARM.exidx.text.osThreadCreate) refers to cmsis_os1.o(.text.osThreadCreate) for [Anonymous Symbol]
    cmsis_os1.o(.text.osSignalSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    cmsis_os1.o(.ARM.exidx.text.osSignalSet) refers to cmsis_os1.o(.text.osSignalSet) for [Anonymous Symbol]
    cmsis_os1.o(.text.osSignalClear) refers to cmsis_os2.o(.text.osThreadGetId) for osThreadGetId
    cmsis_os1.o(.text.osSignalClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for osThreadFlagsClear
    cmsis_os1.o(.ARM.exidx.text.osSignalClear) refers to cmsis_os1.o(.text.osSignalClear) for [Anonymous Symbol]
    cmsis_os1.o(.text.osSignalWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    cmsis_os1.o(.ARM.exidx.text.osSignalWait) refers to cmsis_os1.o(.text.osSignalWait) for [Anonymous Symbol]
    cmsis_os1.o(.text.osTimerCreate) refers to cmsis_os2.o(.text.osTimerNew) for osTimerNew
    cmsis_os1.o(.ARM.exidx.text.osTimerCreate) refers to cmsis_os1.o(.text.osTimerCreate) for [Anonymous Symbol]
    cmsis_os1.o(.text.osMutexCreate) refers to cmsis_os2.o(.text.osMutexNew) for osMutexNew
    cmsis_os1.o(.ARM.exidx.text.osMutexCreate) refers to cmsis_os1.o(.text.osMutexCreate) for [Anonymous Symbol]
    cmsis_os1.o(.text.osSemaphoreCreate) refers to cmsis_os2.o(.text.osSemaphoreNew) for osSemaphoreNew
    cmsis_os1.o(.ARM.exidx.text.osSemaphoreCreate) refers to cmsis_os1.o(.text.osSemaphoreCreate) for [Anonymous Symbol]
    cmsis_os1.o(.text.osSemaphoreWait) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for osSemaphoreAcquire
    cmsis_os1.o(.text.osSemaphoreWait) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for osSemaphoreGetCount
    cmsis_os1.o(.ARM.exidx.text.osSemaphoreWait) refers to cmsis_os1.o(.text.osSemaphoreWait) for [Anonymous Symbol]
    cmsis_os1.o(.text.osMessageCreate) refers to cmsis_os2.o(.text.osMessageQueueNew) for osMessageQueueNew
    cmsis_os1.o(.ARM.exidx.text.osMessageCreate) refers to cmsis_os1.o(.text.osMessageCreate) for [Anonymous Symbol]
    cmsis_os1.o(.text.osMessagePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for osMessageQueuePut
    cmsis_os1.o(.ARM.exidx.text.osMessagePut) refers to cmsis_os1.o(.text.osMessagePut) for [Anonymous Symbol]
    cmsis_os1.o(.text.osMessageGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for osMessageQueueGet
    cmsis_os1.o(.ARM.exidx.text.osMessageGet) refers to cmsis_os1.o(.text.osMessageGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.sys_tick_handler) for sys_tick_handler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelInitialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.IRQ_Context) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.IRQ_Context) refers to cmsis_os2.o(.text.IRQ_Context) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to cmsis_os2.o(.rodata.str1.4) for .L.str
    cmsis_os2.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.SVC_Setup) for SVC_Setup
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.SVC_Setup) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    cmsis_os2.o(.ARM.exidx.text.SVC_Setup) refers to cmsis_os2.o(.text.SVC_Setup) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerGetName) refers to timers.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStart) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.AllocBlock) for AllocBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.CreateBlock) for CreateBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.AllocBlock) refers to cmsis_os2.o(.text.AllocBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.CreateBlock) refers to cmsis_os2.o(.text.CreateBlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.FreeBlock) for FreeBlock
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.FreeBlock) refers to cmsis_os2.o(.text.FreeBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB) for vApplicationGetIdleTaskMemory.Idle_TCB
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack) for vApplicationGetIdleTaskMemory.Idle_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB) for vApplicationGetTimerTaskMemory.Timer_TCB
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack) for vApplicationGetTimerTaskMemory.Timer_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.__NVIC_SetPriority) refers to os_systick.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    startup_stm32f10x_md.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(STACK) for __initial_sp
    startup_stm32f10x_md.o(RESET) refers to startup_stm32f10x_md.o(.text) for Reset_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f10x_md.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f10x_md.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f10x_md.o(RESET) refers to spi.o(.text.SPI1_IRQHandler) for SPI1_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to usart_program.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to usart_program.o(.text.USART2_IRQHandler) for USART2_IRQHandler
    startup_stm32f10x_md.o(RESET) refers to usart_program.o(.text.USART3_IRQHandler) for USART3_IRQHandler
    startup_stm32f10x_md.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f10x_md.o(.text) refers to system_stm32f10x.o(.text.SystemInit) for SystemInit
    startup_stm32f10x_md.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(HEAP) for Heap_Mem
    startup_stm32f10x_md.o(.text) refers to startup_stm32f10x_md.o(STACK) for Stack_Mem
    system_stm32f10x.o(.text.SystemInit) refers to system_stm32f10x.o(.text.SetSysClock) for SetSysClock
    system_stm32f10x.o(.ARM.exidx.text.SystemInit) refers to system_stm32f10x.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClockTo72) for SetSysClockTo72
    system_stm32f10x.o(.ARM.exidx.text.SetSysClock) refers to system_stm32f10x.o(.text.SetSysClock) for [Anonymous Symbol]
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f10x.o(.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f10x.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72) refers to system_stm32f10x.o(.text.SetSysClockTo72) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.text.prvTaskExitError) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.xPortStartScheduler) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_stm32f10x.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.text.vPortEndScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.sys_tick_handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.sys_tick_handler) refers to port.o(.text.sys_tick_handler) for [Anonymous Symbol]
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ucMaxSysCallPriority) for ucMaxSysCallPriority
    port.o(.text.vPortValidateInterruptPriority) refers to port.o(.bss.ulMaxPRIGROUPValue) for ulMaxPRIGROUPValue
    port.o(.ARM.exidx.text.vPortValidateInterruptPriority) refers to port.o(.text.vPortValidateInterruptPriority) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to port.o(.text.vPortValidateInterruptPriority) for vPortValidateInterruptPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateStatic) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to timers.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers.o(.text.xTimerPendFunctionCall) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to clib_arm.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to v2v-secondvehicle.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f10x_md.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing dio_program.o(.text), (0 bytes).
    Removing dio_program.o(.ARM.exidx.text.MGPIO_voidSetPinDirection), (8 bytes).
    Removing dio_program.o(.text.MGPIO_voidSetPinValue), (174 bytes).
    Removing dio_program.o(.ARM.exidx.text.MGPIO_voidSetPinValue), (8 bytes).
    Removing dio_program.o(.text.MGPIO_u8GetPinValue), (42 bytes).
    Removing dio_program.o(.ARM.exidx.text.MGPIO_u8GetPinValue), (8 bytes).
    Removing dio_program.o(.text.MGPIO_voidSetPortDirection), (74 bytes).
    Removing dio_program.o(.ARM.exidx.text.MGPIO_voidSetPortDirection), (8 bytes).
    Removing dio_program.o(.text.MGPIO_voidSetPortValue), (36 bytes).
    Removing dio_program.o(.ARM.exidx.text.MGPIO_voidSetPortValue), (8 bytes).
    Removing nvic_program.o(.text), (0 bytes).
    Removing nvic_program.o(.text.MNVIC_voidInit), (20 bytes).
    Removing nvic_program.o(.ARM.exidx.text.MNVIC_voidInit), (8 bytes).
    Removing nvic_program.o(.ARM.exidx.text.MNVIC_voidEnableInterrupt), (8 bytes).
    Removing nvic_program.o(.text.MNVIC_voidDisableInterrupt), (50 bytes).
    Removing nvic_program.o(.ARM.exidx.text.MNVIC_voidDisableInterrupt), (8 bytes).
    Removing nvic_program.o(.text.MNVIC_voidSetPendingFlag), (50 bytes).
    Removing nvic_program.o(.ARM.exidx.text.MNVIC_voidSetPendingFlag), (8 bytes).
    Removing nvic_program.o(.text.MNVIC_voidClearPendingFlag), (50 bytes).
    Removing nvic_program.o(.ARM.exidx.text.MNVIC_voidClearPendingFlag), (8 bytes).
    Removing nvic_program.o(.text.MNVIC_u8GetActiveFlag), (56 bytes).
    Removing nvic_program.o(.ARM.exidx.text.MNVIC_u8GetActiveFlag), (8 bytes).
    Removing nvic_program.o(.text.MNVIC_voidSetPriority_2), (62 bytes).
    Removing nvic_program.o(.ARM.exidx.text.MNVIC_voidSetPriority_2), (8 bytes).
    Removing nvic_program.o(.text.MNVIC_voidSetPriority), (16 bytes).
    Removing nvic_program.o(.ARM.exidx.text.MNVIC_voidSetPriority), (8 bytes).
    Removing pwm_program.o(.text), (0 bytes).
    Removing pwm_program.o(.text.MPWM_voidInit), (380 bytes).
    Removing pwm_program.o(.ARM.exidx.text.MPWM_voidInit), (8 bytes).
    Removing pwm_program.o(.text.MPWM_SETValuesOfPWM), (64 bytes).
    Removing pwm_program.o(.ARM.exidx.text.MPWM_SETValuesOfPWM), (8 bytes).
    Removing pwm_program.o(.data.TIM), (16 bytes).
    Removing rcc_program.o(.text), (0 bytes).
    Removing rcc_program.o(.ARM.exidx.text.MRCC_voidInit), (8 bytes).
    Removing rcc_program.o(.ARM.exidx.text.MRCC_voidClkEnable), (8 bytes).
    Removing rcc_program.o(.ARM.exidx.text.MRCC_u8CheckClockReady), (8 bytes).
    Removing rcc_program.o(.ARM.exidx.text.MRCC_voidSetBusesPrescaler), (8 bytes).
    Removing rcc_program.o(.ARM.exidx.text.MRCC_voidSetClkSource), (8 bytes).
    Removing rcc_program.o(.ARM.exidx.text.MRCC_voidClkDisable), (8 bytes).
    Removing rcc_program.o(.ARM.exidx.text.MRCC_voidPerClock_State), (8 bytes).
    Removing rcc_program.o(.text.MRCC_voidSetPLLMulFactor), (26 bytes).
    Removing rcc_program.o(.ARM.exidx.text.MRCC_voidSetPLLMulFactor), (8 bytes).
    Removing rcc_program.o(.text.MRCC_voidSetPLLSource), (70 bytes).
    Removing rcc_program.o(.ARM.exidx.text.MRCC_voidSetPLLSource), (8 bytes).
    Removing spi.o(.text), (0 bytes).
    Removing spi.o(.text.SPI_voidInit), (92 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_voidInit), (8 bytes).
    Removing spi.o(.text.SPI_voidSendReceieveCharSynch), (32 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_voidSendReceieveCharSynch), (8 bytes).
    Removing spi.o(.text.SPI_enu_SendDataAsynch), (12 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_enu_SendDataAsynch), (8 bytes).
    Removing spi.o(.text.insert_queue), (46 bytes).
    Removing spi.o(.ARM.exidx.text.insert_queue), (8 bytes).
    Removing spi.o(.ARM.exidx.text.truncate_queue), (8 bytes).
    Removing spi.o(.text.SPI_enu_SendStreamAsynch), (26 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_enu_SendStreamAsynch), (8 bytes).
    Removing spi.o(.text.SPI_enu_SendRecieveStreamSynch), (36 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_enu_SendRecieveStreamSynch), (8 bytes).
    Removing spi.o(.text.SPI_enu_GetDataAsynch), (8 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_enu_GetDataAsynch), (8 bytes).
    Removing spi.o(.text.SPI_voidsetCallBck), (16 bytes).
    Removing spi.o(.ARM.exidx.text.SPI_voidsetCallBck), (8 bytes).
    Removing spi.o(.ARM.exidx.text.SPI1_IRQHandler), (8 bytes).
    Removing usart_program.o(.text), (0 bytes).
    Removing usart_program.o(.ARM.exidx.text.MUSART_voidInit), (8 bytes).
    Removing usart_program.o(.ARM.exidx.text.MUSART_voidSetBaudrateRegister), (8 bytes).
    Removing usart_program.o(.ARM.exidx.text.MUSART_voidEnableUSART_RecieveInterrupt), (8 bytes).
    Removing usart_program.o(.text.MUSART_voidTransmitCharacter), (50 bytes).
    Removing usart_program.o(.ARM.exidx.text.MUSART_voidTransmitCharacter), (8 bytes).
    Removing usart_program.o(.text.MUSART_u8RecieveCharacter), (54 bytes).
    Removing usart_program.o(.ARM.exidx.text.MUSART_u8RecieveCharacter), (8 bytes).
    Removing usart_program.o(.text.MUSART_SetCallBack), (2 bytes).
    Removing usart_program.o(.ARM.exidx.text.MUSART_SetCallBack), (8 bytes).
    Removing usart_program.o(.text.MUSART_voidTransmitstring), (68 bytes).
    Removing usart_program.o(.ARM.exidx.text.MUSART_voidTransmitstring), (8 bytes).
    Removing usart_program.o(.ARM.exidx.text.MUSART_u8GetRecievedValue), (8 bytes).
    Removing usart_program.o(.ARM.exidx.text.MUSART_u8IsRecieveBufferAvailable), (8 bytes).
    Removing usart_program.o(.text.MUSART_voidTransmitnumber), (122 bytes).
    Removing usart_program.o(.ARM.exidx.text.MUSART_voidTransmitnumber), (8 bytes).
    Removing usart_program.o(.text.MUSART_voidDisableUSART_RecieveInterrupt), (22 bytes).
    Removing usart_program.o(.ARM.exidx.text.MUSART_voidDisableUSART_RecieveInterrupt), (8 bytes).
    Removing usart_program.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing usart_program.o(.ARM.exidx.text.USART2_IRQHandler), (8 bytes).
    Removing usart_program.o(.ARM.exidx.text.USART3_IRQHandler), (8 bytes).
    Removing ble.o(.text), (0 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VInit), (8 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VGetKey), (8 bytes).
    Removing motor.o(.text), (0 bytes).
    Removing motor.o(.text.DCmotor_Init), (116 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_Init), (8 bytes).
    Removing motor.o(.text.DCmotor_frontMove), (60 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_frontMove), (8 bytes).
    Removing motor.o(.text.DCmotor_backMove), (60 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_backMove), (8 bytes).
    Removing motor.o(.text.DCmotor_rightMove), (60 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_rightMove), (8 bytes).
    Removing motor.o(.text.DCmotor_leftMove), (60 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_leftMove), (8 bytes).
    Removing motor.o(.text.DCmotor_stop), (54 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_stop), (8 bytes).
    Removing motor.o(.bss.state), (1 bytes).
    Removing nrf24l01.o(.text), (0 bytes).
    Removing nrf24l01.o(.text.NRF24L01_init), (152 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_init), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_reset), (156 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_reset), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_writeRegister), (58 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_writeRegister), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_switchToTransmitterMode), (104 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_switchToTransmitterMode), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_writeRegisterMulti), (64 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_writeRegisterMulti), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_readRegister), (54 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_readRegister), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_switchToReceiverMode), (232 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_switchToReceiverMode), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_checkTransmitterBuffer), (56 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_checkTransmitterBuffer), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_checkReceiverBuffer), (80 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_checkReceiverBuffer), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_sendData), (66 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_sendData), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_readData), (66 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_readData), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_flushTransmitterBuffer), (10 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_flushTransmitterBuffer), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_sendCommand), (40 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_sendCommand), (8 bytes).
    Removing nrf24l01.o(.text.NRF24L01_flushReceiverBuffer), (10 bytes).
    Removing nrf24l01.o(.ARM.exidx.text.NRF24L01_flushReceiverBuffer), (8 bytes).
    Removing nrf24l01.o(.data.G_transmitterAddress), (5 bytes).
    Removing nrf24l01.o(.data.G_receiverPipe0Address), (5 bytes).
    Removing nrf24l01.o(.data.G_receiverPipe1Address), (5 bytes).
    Removing nrf24l01.o(.data.G_receiverPipe2Address), (5 bytes).
    Removing nrf24l01.o(.data.G_receiverPipe3Address), (5 bytes).
    Removing nrf24l01.o(.data.G_receiverPipe4Address), (5 bytes).
    Removing nrf24l01.o(.data.G_receiverPipe5Address), (5 bytes).
    Removing nrf24l01.o(.bss.G_statusRegister), (1 bytes).
    Removing nrf24l01.o(.bss.G_dummyArray), (32 bytes).
    Removing v2v-secondvehicle.o(.text), (0 bytes).
    Removing v2v-secondvehicle.o(.ARM.exidx.text.main), (8 bytes).
    Removing v2v-secondvehicle.o(.ARM.exidx.text.Motor_SetDirectionT), (8 bytes).
    Removing v2v-secondvehicle.o(.ARM.use_no_argv), (4 bytes).
    Removing clib_arm.o(.text), (0 bytes).
    Removing clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing clib_arm.o(.text.__user_perthread_libspace), (68 bytes).
    Removing clib_arm.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.is_thread_mode), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing clib_arm.o(.bss.os_libspace), (480 bytes).
    Removing clib_arm.o(.bss.os_libspace_id), (16 bytes).
    Removing cmsis_os1.o(.text), (0 bytes).
    Removing cmsis_os1.o(.text.osThreadCreate), (22 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osThreadCreate), (8 bytes).
    Removing cmsis_os1.o(.text.osSignalSet), (26 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osSignalSet), (8 bytes).
    Removing cmsis_os1.o(.text.osSignalClear), (38 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osSignalClear), (8 bytes).
    Removing cmsis_os1.o(.text.osSignalWait), (60 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osSignalWait), (8 bytes).
    Removing cmsis_os1.o(.text.osTimerCreate), (22 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osTimerCreate), (8 bytes).
    Removing cmsis_os1.o(.text.osMutexCreate), (16 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osMutexCreate), (8 bytes).
    Removing cmsis_os1.o(.text.osSemaphoreCreate), (20 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osSemaphoreCreate), (8 bytes).
    Removing cmsis_os1.o(.text.osSemaphoreWait), (38 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osSemaphoreWait), (8 bytes).
    Removing cmsis_os1.o(.text.osMessageCreate), (24 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osMessageCreate), (8 bytes).
    Removing cmsis_os1.o(.text.osMessagePut), (20 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osMessagePut), (8 bytes).
    Removing cmsis_os1.o(.text.osMessageGet), (46 bytes).
    Removing cmsis_os1.o(.ARM.exidx.text.osMessageGet), (8 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.IRQ_Context), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.IRQ_Context), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (44 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (68 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (20 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (70 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (210 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (30 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (30 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (18 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (118 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (144 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (100 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (192 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (30 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (240 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (30 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (70 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (78 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (30 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (76 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (104 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (92 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (116 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (116 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (62 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (184 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (112 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (102 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (152 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (154 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (144 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (56 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (36 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (284 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (160 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.AllocBlock), (16 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.AllocBlock), (8 bytes).
    Removing cmsis_os2.o(.text.CreateBlock), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.CreateBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (218 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (24 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.text.__NVIC_SetPriority), (14 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing cmsis_os2.o(.rodata.str1.4), (17 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (68 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.__NVIC_SetPriority), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (50 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).
    Removing system_stm32f10x.o(.text), (0 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClock), (8 bytes).
    Removing system_stm32f10x.o(.text.SystemCoreClockUpdate), (110 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f10x.o(.ARM.exidx.text.SetSysClockTo72), (8 bytes).
    Removing system_stm32f10x.o(.rodata.AHBPrescTable), (16 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (78 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (220 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (158 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (288 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (24 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (72 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (22 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (28 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (98 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (22 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (10 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (4 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (28 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (38 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.sys_tick_handler), (8 bytes).
    Removing port.o(.text.vPortValidateInterruptPriority), (98 bytes).
    Removing port.o(.ARM.exidx.text.vPortValidateInterruptPriority), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (40 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (152 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (60 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (62 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (50 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (282 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (244 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (376 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (248 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (132 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (38 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (42 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (4 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (6 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (30 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (202 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (190 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (156 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (30 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (234 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (204 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (170 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (50 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (206 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (18 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (100 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (68 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (138 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (242 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (58 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (10 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (126 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (32 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (22 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (26 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (150 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (194 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (354 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (404 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (308 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (66 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (44 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (56 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerCreateStatic), (82 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (104 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (34 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (58 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetReloadMode), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (26 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (26 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (46 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (38 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCallFromISR), (42 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers.o(.text.xTimerPendFunctionCall), (70 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers.o(.text.uxTimerGetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerNumber), (4 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).

641 unused section(s) (total 21039 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    ../fplib/fpinit_empty.s                  0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    BLE.c                                    0x00000000   Number         0  ble.o ABSOLUTE
    DIO_PROGRAM.c                            0x00000000   Number         0  dio_program.o ABSOLUTE
    NVIC_program.c                           0x00000000   Number         0  nvic_program.o ABSOLUTE
    PWM_program.c                            0x00000000   Number         0  pwm_program.o ABSOLUTE
    RCC_program.c                            0x00000000   Number         0  rcc_program.o ABSOLUTE
    RTE/Device/STM32F103C8/startup_stm32f10x_md.s 0x00000000   Number         0  startup_stm32f10x_md.o ABSOLUTE
    SPI.c                                    0x00000000   Number         0  spi.o ABSOLUTE
    USART_program.c                          0x00000000   Number         0  usart_program.o ABSOLUTE
    V2V-secondVehicle.c                      0x00000000   Number         0  v2v-secondvehicle.o ABSOLUTE
    clib_arm.c                               0x00000000   Number         0  clib_arm.o ABSOLUTE
    cmsis_os1.c                              0x00000000   Number         0  cmsis_os1.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    motor.c                                  0x00000000   Number         0  motor.o ABSOLUTE
    nrf24l01.c                               0x00000000   Number         0  nrf24l01.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_stm32f10x.c                       0x00000000   Number         0  system_stm32f10x.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    RESET                                    0x08000000   Section      236  startup_stm32f10x_md.o(RESET)
    !!!main                                  0x080000ec   Section        8  __main.o(!!!main)
    !!!scatter                               0x080000f4   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x08000128   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x08000144   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000160   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x08000162   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x08000162   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x08000164   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000166   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000166   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000168   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000168   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000168   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800016e   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000176   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x0800017a   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x0800017a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x08000182   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000184   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000184   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000188   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x08000190   Section       64  startup_stm32f10x_md.o(.text)
    .text                                    0x080001d0   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x0800025a   Section       16  aeabi_memset4.o(.text)
    .text                                    0x0800026a   Section       68  rt_memclr.o(.text)
    .text                                    0x080002ae   Section        0  heapauxi.o(.text)
    .text                                    0x080002b4   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000318   Section       78  rt_memclr_w.o(.text)
    .text                                    0x08000366   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080003b0   Section        0  exit.o(.text)
    .text                                    0x080003c4   Section        8  libspace.o(.text)
    .text                                    0x080003cc   Section        0  sys_exit.o(.text)
    .text                                    0x080003d8   Section        2  use_no_semi.o(.text)
    .text                                    0x080003da   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x080003dc   Section        0  ble.o(.text.HBLE_VGetKey)
    [Anonymous Symbol]                       0x080003e8   Section        0  ble.o(.text.HBLE_VInit)
    [Anonymous Symbol]                       0x08000420   Section        0  dio_program.o(.text.MGPIO_voidSetPinDirection)
    [Anonymous Symbol]                       0x08000508   Section        0  nvic_program.o(.text.MNVIC_voidEnableInterrupt)
    [Anonymous Symbol]                       0x0800053c   Section        0  rcc_program.o(.text.MRCC_u8CheckClockReady)
    [Anonymous Symbol]                       0x0800056c   Section        0  rcc_program.o(.text.MRCC_voidClkDisable)
    [Anonymous Symbol]                       0x08000598   Section        0  rcc_program.o(.text.MRCC_voidClkEnable)
    [Anonymous Symbol]                       0x080005c4   Section        0  rcc_program.o(.text.MRCC_voidInit)
    [Anonymous Symbol]                       0x080005f4   Section        0  rcc_program.o(.text.MRCC_voidPerClock_State)
    [Anonymous Symbol]                       0x08000694   Section        0  rcc_program.o(.text.MRCC_voidSetBusesPrescaler)
    [Anonymous Symbol]                       0x080006d4   Section        0  rcc_program.o(.text.MRCC_voidSetClkSource)
    [Anonymous Symbol]                       0x08000718   Section        0  usart_program.o(.text.MUSART_u8GetRecievedValue)
    [Anonymous Symbol]                       0x08000818   Section        0  usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable)
    [Anonymous Symbol]                       0x080008bc   Section        0  usart_program.o(.text.MUSART_voidEnableUSART_RecieveInterrupt)
    [Anonymous Symbol]                       0x080008d4   Section        0  usart_program.o(.text.MUSART_voidInit)
    [Anonymous Symbol]                       0x08000984   Section        0  usart_program.o(.text.MUSART_voidSetBaudrateRegister)
    [Anonymous Symbol]                       0x08000990   Section        0  v2v-secondvehicle.o(.text.Motor_SetDirectionT)
    [Anonymous Symbol]                       0x080009b0   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x080009f0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080009f4   Section        0  spi.o(.text.SPI1_IRQHandler)
    [Anonymous Symbol]                       0x08000a20   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08000a40   Number         0  port.o(.text.SVC_Handler)
    SetSysClock                              0x08000a45   Thumb Code     8  system_stm32f10x.o(.text.SetSysClock)
    [Anonymous Symbol]                       0x08000a44   Section        0  system_stm32f10x.o(.text.SetSysClock)
    SetSysClockTo72                          0x08000a4d   Thumb Code   190  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x08000a4c   Section        0  system_stm32f10x.o(.text.SetSysClockTo72)
    [Anonymous Symbol]                       0x08000b0c   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x08000b28   Section        0  system_stm32f10x.o(.text.SystemInit)
    [Anonymous Symbol]                       0x08000b80   Section        0  usart_program.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x08000bdc   Section        0  usart_program.o(.text.USART2_IRQHandler)
    [Anonymous Symbol]                       0x08000c38   Section        0  usart_program.o(.text.USART3_IRQHandler)
    __tagsym$$used.1                         0x08000c94   Number         0  clib_arm.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x08000c94   Section        0  clib_arm.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08000cb4   Number         0  clib_arm.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08000cb4   Section        0  clib_arm.o(.text._mutex_free)
    __tagsym$$used.0                         0x08000ce4   Number         0  clib_arm.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x08000ce4   Section        0  clib_arm.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x08000d3c   Number         0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08000d3c   Section        0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08000d60   Section        0  clib_arm.o(.text._platform_post_stackheap_init)
    is_thread_mode                           0x08000d65   Thumb Code    12  clib_arm.o(.text.is_thread_mode)
    [Anonymous Symbol]                       0x08000d64   Section        0  clib_arm.o(.text.is_thread_mode)
    [Anonymous Symbol]                       0x08000d70   Section        0  v2v-secondvehicle.o(.text.main)
    os_kernel_is_active                      0x08000da1   Thumb Code    16  clib_arm.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08000da0   Section        0  clib_arm.o(.text.os_kernel_is_active)
    prvAddCurrentTaskToDelayedList           0x08000db1   Thumb Code   156  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08000db0   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x08000e4d   Thumb Code   204  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x08000e4c   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x08000f19   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x08000f18   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x08000f85   Thumb Code    78  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x08000f84   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x08000fd5   Thumb Code    38  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x08000fd4   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x08000ffd   Thumb Code   122  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x08000ffc   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x08001079   Thumb Code    54  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x08001078   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x080010b1   Thumb Code    18  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x080010b0   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x080010c5   Thumb Code    32  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x080010c4   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x080010e5   Thumb Code   106  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x080010e4   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x08001151   Thumb Code    42  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x08001150   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x0800117d   Thumb Code    32  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x0800117c   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x0800119d   Thumb Code    32  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x0800119c   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x080011bd   Thumb Code   150  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x080011bc   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x08001255   Thumb Code   112  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x08001254   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x080012c5   Thumb Code    90  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x080012c4   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x08001321   Thumb Code    64  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x08001320   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x08001361   Thumb Code    24  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x08001360   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x08001379   Thumb Code    28  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x08001378   Section        0  queue.o(.text.prvIsQueueFull)
    prvPortStartFirstTask                    0x08001395   Thumb Code    32  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x08001394   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x080013b5   Thumb Code    62  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x080013b4   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x080013f5   Thumb Code   274  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x080013f4   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x08001509   Thumb Code   128  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x08001508   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x08001589   Thumb Code    58  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x08001588   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x080015c5   Thumb Code    38  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x080015c4   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x080015ed   Thumb Code    42  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x080015ec   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x08001619   Thumb Code    52  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x08001618   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x0800164d   Thumb Code    50  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x0800164c   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x08001681   Thumb Code    22  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x08001680   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x08001699   Thumb Code   114  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08001698   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x0800170c   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08001824   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x0800183c   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x0800185c   Section        0  port.o(.text.sys_tick_handler)
    truncate_queue                           0x0800188d   Thumb Code    58  spi.o(.text.truncate_queue)
    [Anonymous Symbol]                       0x0800188c   Section        0  spi.o(.text.truncate_queue)
    [Anonymous Symbol]                       0x080018c8   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x080018ec   Section        0  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    [Anonymous Symbol]                       0x08001908   Section        0  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    [Anonymous Symbol]                       0x08001924   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x08001938   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x08001950   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x08001958   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x08001994   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x080019dc   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08001a0c   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x08001a88   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x08001abc   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x08001ae4   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x08001b28   Section        0  tasks.o(.text.vTaskDelay)
    [Anonymous Symbol]                       0x08001b7c   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x08001b98   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x08001ba8   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x08001bdc   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x08001c4c   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x08001d04   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x08001db4   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x08001dc4   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08001dc4   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x08001e90   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x08001f4c   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x08001f64   Section        0  queue.o(.text.xQueueCreateMutexStatic)
    [Anonymous Symbol]                       0x08001f88   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x08001fe4   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x08002054   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x08002108   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x080022ac   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x08002430   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x080025dc   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08002668   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x080026d4   Section        0  tasks.o(.text.xTaskCreateStatic)
    [Anonymous Symbol]                       0x08002774   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x0800279c   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x080027a8   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08002950   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x080029f8   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x08002aa0   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x08002b90   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x08002cfc   Section        0  timers.o(.text.xTimerCreateTimerTask)
    uxCriticalNesting                        0x200000ec   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x200000ec   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x200000f0   Section       96  libspace.o(.bss)
    clib_mutex_cb                            0x200012e4   Data         400  clib_arm.o(.bss.clib_mutex_cb)
    [Anonymous Symbol]                       0x200012e4   Section        0  clib_arm.o(.bss.clib_mutex_cb)
    clib_mutex_id                            0x20001474   Data          20  clib_arm.o(.bss.clib_mutex_id)
    [Anonymous Symbol]                       0x20001474   Section        0  clib_arm.o(.bss.clib_mutex_id)
    prvCheckForValidListAndQueue.ucStaticTimerQueueStorage 0x2000148c   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    [Anonymous Symbol]                       0x2000148c   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage)
    prvCheckForValidListAndQueue.xStaticTimerQueue 0x200014dc   Data          80  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    [Anonymous Symbol]                       0x200014dc   Section        0  timers.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue)
    prvSampleTimeNow.xLastTime               0x2000152c   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x2000152c   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    __tagsym$$used.1                         0x20001530   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxCurrentTimerList                       0x20001534   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20001534   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20001538   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20001538   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x2000153c   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x2000153c   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20001540   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20001540   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20001544   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20001544   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20001548   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20001548   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200019a8   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200019a8   Section        0  heap_4.o(.bss.ucHeap)
    ucMaxSysCallPriority                     0x200039a8   Data           1  port.o(.bss.ucMaxSysCallPriority)
    [Anonymous Symbol]                       0x200039a8   Section        0  port.o(.bss.ucMaxSysCallPriority)
    ulMaxPRIGROUPValue                       0x200039ac   Data           4  port.o(.bss.ulMaxPRIGROUPValue)
    [Anonymous Symbol]                       0x200039ac   Section        0  port.o(.bss.ulMaxPRIGROUPValue)
    uxCurrentNumberOfTasks                   0x200039b0   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200039b0   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x200039b4   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x200039b4   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x200039b8   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200039b8   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x200039bc   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x200039bc   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x200039c0   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x200039c0   Section        0  tasks.o(.bss.uxTopReadyPriority)
    vApplicationGetIdleTaskMemory.Idle_Stack 0x200039c4   Data         512  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    [Anonymous Symbol]                       0x200039c4   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack)
    vApplicationGetIdleTaskMemory.Idle_TCB   0x20003bc4   Data          92  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    [Anonymous Symbol]                       0x20003bc4   Section        0  cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB)
    vApplicationGetTimerTaskMemory.Timer_Stack 0x20003c20   Data         320  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    [Anonymous Symbol]                       0x20003c20   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack)
    vApplicationGetTimerTaskMemory.Timer_TCB 0x20003d60   Data          92  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    [Anonymous Symbol]                       0x20003d60   Section        0  cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB)
    xActiveTimerList1                        0x20003dbc   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20003dbc   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20003dd0   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20003dd0   Section        0  timers.o(.bss.xActiveTimerList2)
    xDelayedTaskList1                        0x20003de4   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20003de4   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20003df8   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20003df8   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20003e0c   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20003e0c   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20003e10   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20003e10   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20003e14   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20003e14   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20003e18   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20003e18   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20003e1c   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20003e1c   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20003e20   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20003e20   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20003e24   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20003e24   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20003e28   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20003e28   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20003e2c   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20003e2c   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20003e40   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20003e40   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20003e44   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20003e44   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20003e4c   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20003e4c   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20003e60   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20003e60   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20003e74   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20003e74   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20003e78   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20003e78   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20003e7c   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20003e7c   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20003e80   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20003e80   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20003e88   Data         512  startup_stm32f10x_md.o(HEAP)
    HEAP                                     0x20003e88   Section      512  startup_stm32f10x_md.o(HEAP)
    Stack_Mem                                0x20004088   Data        1024  startup_stm32f10x_md.o(STACK)
    STACK                                    0x20004088   Section     1024  startup_stm32f10x_md.o(STACK)
    __initial_sp                             0x20004488   Data           0  startup_stm32f10x_md.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OTIME$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __fp_init_empty                          0x00000000   Number         0  fpinit_empty.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x000000ec   Number         0  startup_stm32f10x_md.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f10x_md.o(RESET)
    __Vectors_End                            0x080000ec   Data           0  startup_stm32f10x_md.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x080000f5   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x080000f5   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x08000103   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x08000129   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x08000145   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000161   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x08000163   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_shutdown                        0x08000165   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000167   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000169   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000169   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000169   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800016f   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000177   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x0800017b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x0800017b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x08000183   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000185   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000185   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000189   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x08000191   Thumb Code     8  startup_stm32f10x_md.o(.text)
    NMI_Handler                              0x08000199   Thumb Code     2  startup_stm32f10x_md.o(.text)
    HardFault_Handler                        0x0800019b   Thumb Code     2  startup_stm32f10x_md.o(.text)
    MemManage_Handler                        0x0800019d   Thumb Code     2  startup_stm32f10x_md.o(.text)
    BusFault_Handler                         0x0800019f   Thumb Code     2  startup_stm32f10x_md.o(.text)
    UsageFault_Handler                       0x080001a1   Thumb Code     2  startup_stm32f10x_md.o(.text)
    DebugMon_Handler                         0x080001a5   Thumb Code     2  startup_stm32f10x_md.o(.text)
    ADC1_2_IRQHandler                        0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_RX1_IRQHandler                      0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    CAN1_SCE_IRQHandler                      0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel1_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel2_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel3_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel4_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel5_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel6_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    DMA1_Channel7_IRQHandler                 0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI0_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI15_10_IRQHandler                     0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI1_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI2_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI3_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI4_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    EXTI9_5_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    FLASH_IRQHandler                         0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_ER_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C1_EV_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_ER_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    I2C2_EV_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    PVD_IRQHandler                           0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RCC_IRQHandler                           0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTCAlarm_IRQHandler                      0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    RTC_IRQHandler                           0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    SPI2_IRQHandler                          0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TAMPER_IRQHandler                        0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_BRK_IRQHandler                      0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_CC_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM1_UP_IRQHandler                       0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM2_IRQHandler                          0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM3_IRQHandler                          0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    TIM4_IRQHandler                          0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USBWakeUp_IRQHandler                     0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_HP_CAN1_TX_IRQHandler                0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    USB_LP_CAN1_RX0_IRQHandler               0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    WWDG_IRQHandler                          0x080001ab   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __user_initial_stackheap                 0x080001ad   Thumb Code     0  startup_stm32f10x_md.o(.text)
    __aeabi_memcpy                           0x080001d1   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x080001d1   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x08000237   Thumb Code     0  rt_memcpy_v6.o(.text)
    __aeabi_memset4                          0x0800025b   Thumb Code    16  aeabi_memset4.o(.text)
    __aeabi_memset8                          0x0800025b   Thumb Code     0  aeabi_memset4.o(.text)
    __aeabi_memclr                           0x0800026b   Thumb Code     0  rt_memclr.o(.text)
    __rt_memclr                              0x0800026b   Thumb Code     0  rt_memclr.o(.text)
    _memset                                  0x0800026f   Thumb Code    64  rt_memclr.o(.text)
    __use_two_region_memory                  0x080002af   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x080002b1   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x080002b3   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x080002b5   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x080002b5   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x080002b5   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x080002fd   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memclr4                          0x08000319   Thumb Code     0  rt_memclr_w.o(.text)
    __aeabi_memclr8                          0x08000319   Thumb Code     0  rt_memclr_w.o(.text)
    __rt_memclr_w                            0x08000319   Thumb Code     0  rt_memclr_w.o(.text)
    _memset_w                                0x0800031d   Thumb Code    74  rt_memclr_w.o(.text)
    __user_setup_stackheap                   0x08000367   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x080003b1   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x080003c5   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080003c5   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080003cd   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080003d9   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080003d9   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080003db   Thumb Code     0  indicate_semi.o(.text)
    HBLE_VGetKey                             0x080003dd   Thumb Code    12  ble.o(.text.HBLE_VGetKey)
    HBLE_VInit                               0x080003e9   Thumb Code    56  ble.o(.text.HBLE_VInit)
    MGPIO_voidSetPinDirection                0x08000421   Thumb Code   230  dio_program.o(.text.MGPIO_voidSetPinDirection)
    MNVIC_voidEnableInterrupt                0x08000509   Thumb Code    50  nvic_program.o(.text.MNVIC_voidEnableInterrupt)
    MRCC_u8CheckClockReady                   0x0800053d   Thumb Code    36  rcc_program.o(.text.MRCC_u8CheckClockReady)
    MRCC_voidClkDisable                      0x0800056d   Thumb Code    32  rcc_program.o(.text.MRCC_voidClkDisable)
    MRCC_voidClkEnable                       0x08000599   Thumb Code    32  rcc_program.o(.text.MRCC_voidClkEnable)
    MRCC_voidInit                            0x080005c5   Thumb Code    48  rcc_program.o(.text.MRCC_voidInit)
    MRCC_voidPerClock_State                  0x080005f5   Thumb Code   158  rcc_program.o(.text.MRCC_voidPerClock_State)
    MRCC_voidSetBusesPrescaler               0x08000695   Thumb Code    64  rcc_program.o(.text.MRCC_voidSetBusesPrescaler)
    MRCC_voidSetClkSource                    0x080006d5   Thumb Code    66  rcc_program.o(.text.MRCC_voidSetClkSource)
    MUSART_u8GetRecievedValue                0x08000719   Thumb Code   254  usart_program.o(.text.MUSART_u8GetRecievedValue)
    MUSART_u8IsRecieveBufferAvailable        0x08000819   Thumb Code   164  usart_program.o(.text.MUSART_u8IsRecieveBufferAvailable)
    MUSART_voidEnableUSART_RecieveInterrupt  0x080008bd   Thumb Code    22  usart_program.o(.text.MUSART_voidEnableUSART_RecieveInterrupt)
    MUSART_voidInit                          0x080008d5   Thumb Code   176  usart_program.o(.text.MUSART_voidInit)
    MUSART_voidSetBaudrateRegister           0x08000985   Thumb Code    10  usart_program.o(.text.MUSART_voidSetBaudrateRegister)
    Motor_SetDirectionT                      0x08000991   Thumb Code    22  v2v-secondvehicle.o(.text.Motor_SetDirectionT)
    PendSV_Handler                           0x080009b1   Thumb Code    68  port.o(.text.PendSV_Handler)
    SPI1_IRQHandler                          0x080009f5   Thumb Code    30  spi.o(.text.SPI1_IRQHandler)
    SVC_Handler                              0x08000a21   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x08000b0d   Thumb Code    26  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x08000b29   Thumb Code    86  system_stm32f10x.o(.text.SystemInit)
    USART1_IRQHandler                        0x08000b81   Thumb Code    90  usart_program.o(.text.USART1_IRQHandler)
    USART2_IRQHandler                        0x08000bdd   Thumb Code    90  usart_program.o(.text.USART2_IRQHandler)
    USART3_IRQHandler                        0x08000c39   Thumb Code    90  usart_program.o(.text.USART3_IRQHandler)
    _mutex_acquire                           0x08000c95   Thumb Code    32  clib_arm.o(.text._mutex_acquire)
    _mutex_free                              0x08000cb5   Thumb Code    48  clib_arm.o(.text._mutex_free)
    _mutex_initialize                        0x08000ce5   Thumb Code    88  clib_arm.o(.text._mutex_initialize)
    _mutex_release                           0x08000d3d   Thumb Code    34  clib_arm.o(.text._mutex_release)
    _platform_post_stackheap_init            0x08000d61   Thumb Code     2  clib_arm.o(.text._platform_post_stackheap_init)
    main                                     0x08000d71   Thumb Code    46  v2v-secondvehicle.o(.text.main)
    pvPortMalloc                             0x0800170d   Thumb Code   280  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x08001825   Thumb Code    24  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x0800183d   Thumb Code    32  port.o(.text.pxPortInitialiseStack)
    sys_tick_handler                         0x0800185d   Thumb Code    46  port.o(.text.sys_tick_handler)
    uxListRemove                             0x080018c9   Thumb Code    36  list.o(.text.uxListRemove)
    vApplicationGetIdleTaskMemory            0x080018ed   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetIdleTaskMemory)
    vApplicationGetTimerTaskMemory           0x08001909   Thumb Code    26  cmsis_os2.o(.text.vApplicationGetTimerTaskMemory)
    vApplicationStackOverflowHook            0x08001925   Thumb Code    18  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x08001939   Thumb Code    22  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x08001951   Thumb Code     6  list.o(.text.vListInitialiseItem)
    vListInsert                              0x08001959   Thumb Code    58  list.o(.text.vListInsert)
    vPortEnterCritical                       0x08001995   Thumb Code    70  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x080019dd   Thumb Code    46  port.o(.text.vPortExitCritical)
    vPortFree                                0x08001a0d   Thumb Code   122  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x08001a89   Thumb Code    52  port.o(.text.vPortSetupTimerInterrupt)
    vQueueDelete                             0x08001abd   Thumb Code    38  queue.o(.text.vQueueDelete)
    vQueueWaitForMessageRestricted           0x08001ae5   Thumb Code    68  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskDelay                               0x08001b29   Thumb Code    84  tasks.o(.text.vTaskDelay)
    vTaskInternalSetTimeOutState             0x08001b7d   Thumb Code    26  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08001b99   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08001ba9   Thumb Code    50  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x08001bdd   Thumb Code   110  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x08001c4d   Thumb Code   184  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x08001d05   Thumb Code   168  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x08001db5   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x08001dc5   Thumb Code   202  tasks.o(.text.vTaskSwitchContext)
    xPortStartScheduler                      0x08001e91   Thumb Code   186  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x08001f4d   Thumb Code    22  queue.o(.text.xQueueCreateMutex)
    xQueueCreateMutexStatic                  0x08001f65   Thumb Code    34  queue.o(.text.xQueueCreateMutexStatic)
    xQueueGenericCreate                      0x08001f89   Thumb Code    90  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x08001fe5   Thumb Code   110  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericReset                       0x08002055   Thumb Code   178  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x08002109   Thumb Code   418  queue.o(.text.xQueueGenericSend)
    xQueueReceive                            0x080022ad   Thumb Code   388  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x08002431   Thumb Code   426  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x080025dd   Thumb Code   140  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x08002669   Thumb Code   108  tasks.o(.text.xTaskCreate)
    xTaskCreateStatic                        0x080026d5   Thumb Code   158  tasks.o(.text.xTaskCreateStatic)
    xTaskGetSchedulerState                   0x08002775   Thumb Code    38  tasks.o(.text.xTaskGetSchedulerState)
    xTaskGetTickCount                        0x0800279d   Thumb Code    12  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x080027a9   Thumb Code   422  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08002951   Thumb Code   166  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x080029f9   Thumb Code   166  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x08002aa1   Thumb Code   238  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x08002b91   Thumb Code   364  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x08002cfd   Thumb Code   108  timers.o(.text.xTimerCreateTimerTask)
    uxTopUsedPriority                        0x08002d70   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x08002d74   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08002d94   Number         0  anon$$obj.o(Region$$Table)
    GlobalUSART1_s16RecievedFront            0x20000000   Data           2  usart_program.o(.data.GlobalUSART1_s16RecievedFront)
    GlobalUSART1_s16RecievedRear             0x20000002   Data           2  usart_program.o(.data.GlobalUSART1_s16RecievedRear)
    GlobalUSART2_s16RecievedFront            0x20000004   Data           2  usart_program.o(.data.GlobalUSART2_s16RecievedFront)
    GlobalUSART2_s16RecievedRear             0x20000006   Data           2  usart_program.o(.data.GlobalUSART2_s16RecievedRear)
    GlobalUSART3_s16RecievedFront            0x20000008   Data           2  usart_program.o(.data.GlobalUSART3_s16RecievedFront)
    GlobalUSART3_s16RecievedRear             0x2000000a   Data           2  usart_program.o(.data.GlobalUSART3_s16RecievedRear)
    Global_u8Direction                       0x2000000c   Data           1  v2v-secondvehicle.o(.data.Global_u8Direction)
    SystemCoreClock                          0x20000010   Data           4  system_stm32f10x.o(.data.SystemCoreClock)
    USART                                    0x20000014   Data          12  usart_program.o(.data.USART)
    gl_SPI_data_queue                        0x20000020   Data         202  spi.o(.data.gl_SPI_data_queue)
    __libspace_start                         0x200000f0   Data          96  libspace.o(.bss)
    GlobalUSART1_u8RecievedValue             0x20000150   Data        1500  usart_program.o(.bss.GlobalUSART1_u8RecievedValue)
    __temporary_stack_top$libspace           0x20000150   Data           0  libspace.o(.bss)
    GlobalUSART2_u8RecievedValue             0x2000072c   Data        1500  usart_program.o(.bss.GlobalUSART2_u8RecievedValue)
    GlobalUSART3_u8RecievedValue             0x20000d08   Data        1500  usart_program.o(.bss.GlobalUSART3_u8RecievedValue)
    gl_ptr_Function                          0x20001488   Data           4  spi.o(.bss.gl_ptr_Function)
    pxCurrentTCB                             0x20001530   Data           4  tasks.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x08000191

  Load Region LR_1 (Base: 0x08000000, Size: 0x00002e84, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00002d94, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x000000ec   Data   RO          517    RESET               startup_stm32f10x_md.o
    0x080000ec   0x080000ec   0x00000008   Code   RO          988  * !!!main             c_w.l(__main.o)
    0x080000f4   0x080000f4   0x00000034   Code   RO         1153    !!!scatter          c_w.l(__scatter.o)
    0x08000128   0x08000128   0x0000001a   Code   RO         1155    !!handler_copy      c_w.l(__scatter_copy.o)
    0x08000142   0x08000142   0x00000002   PAD
    0x08000144   0x08000144   0x0000001c   Code   RO         1157    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000160   0x08000160   0x00000002   Code   RO         1017    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1024    .ARM.Collect$$libinit$$00000002  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1026    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1029    .ARM.Collect$$libinit$$0000000A  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1031    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1033    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1036    .ARM.Collect$$libinit$$00000011  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1038    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1040    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1042    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1044    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1046    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1048    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1050    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1052    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1054    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1056    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1060    .ARM.Collect$$libinit$$0000002C  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1062    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1064    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000000   Code   RO         1066    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x08000162   0x08000162   0x00000002   Code   RO         1067    .ARM.Collect$$libinit$$00000033  c_w.l(libinit2.o)
    0x08000164   0x08000164   0x00000002   Code   RO         1089    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1104    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1106    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1109    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1112    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1114    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000000   Code   RO         1117    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000166   0x08000166   0x00000002   Code   RO         1118    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000168   0x08000168   0x00000000   Code   RO          990    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000168   0x08000168   0x00000000   Code   RO          996    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000168   0x08000168   0x00000006   Code   RO         1008    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800016e   0x0800016e   0x00000008   Code   RO          997    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000176   0x08000176   0x00000004   Code   RO          999    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x0800017a   0x0800017a   0x00000000   Code   RO         1001    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x0800017a   0x0800017a   0x00000008   Code   RO         1002    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x08000182   0x08000182   0x00000002   Code   RO         1021    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000184   0x08000184   0x00000000   Code   RO         1069    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000184   0x08000184   0x00000004   Code   RO         1070    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000188   0x08000188   0x00000006   Code   RO         1071    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800018e   0x0800018e   0x00000002   PAD
    0x08000190   0x08000190   0x00000040   Code   RO          518  * .text               startup_stm32f10x_md.o
    0x080001d0   0x080001d0   0x0000008a   Code   RO          980    .text               c_w.l(rt_memcpy_v6.o)
    0x0800025a   0x0800025a   0x00000010   Code   RO          982    .text               c_w.l(aeabi_memset4.o)
    0x0800026a   0x0800026a   0x00000044   Code   RO          984    .text               c_w.l(rt_memclr.o)
    0x080002ae   0x080002ae   0x00000006   Code   RO          986    .text               c_w.l(heapauxi.o)
    0x080002b4   0x080002b4   0x00000064   Code   RO          991    .text               c_w.l(rt_memcpy_w.o)
    0x08000318   0x08000318   0x0000004e   Code   RO          993    .text               c_w.l(rt_memclr_w.o)
    0x08000366   0x08000366   0x0000004a   Code   RO         1010    .text               c_w.l(sys_stackheap_outer.o)
    0x080003b0   0x080003b0   0x00000012   Code   RO         1012    .text               c_w.l(exit.o)
    0x080003c2   0x080003c2   0x00000002   PAD
    0x080003c4   0x080003c4   0x00000008   Code   RO         1018    .text               c_w.l(libspace.o)
    0x080003cc   0x080003cc   0x0000000c   Code   RO         1079    .text               c_w.l(sys_exit.o)
    0x080003d8   0x080003d8   0x00000002   Code   RO         1094    .text               c_w.l(use_no_semi.o)
    0x080003da   0x080003da   0x00000000   Code   RO         1096    .text               c_w.l(indicate_semi.o)
    0x080003da   0x080003da   0x00000002   PAD
    0x080003dc   0x080003dc   0x0000000c   Code   RO          161    .text.HBLE_VGetKey  ble.o
    0x080003e8   0x080003e8   0x00000038   Code   RO          159    .text.HBLE_VInit    ble.o
    0x08000420   0x08000420   0x000000e6   Code   RO            2    .text.MGPIO_voidSetPinDirection  dio_program.o
    0x08000506   0x08000506   0x00000002   PAD
    0x08000508   0x08000508   0x00000032   Code   RO           22    .text.MNVIC_voidEnableInterrupt  nvic_program.o
    0x0800053a   0x0800053a   0x00000002   PAD
    0x0800053c   0x0800053c   0x00000030   Code   RO           61    .text.MRCC_u8CheckClockReady  rcc_program.o
    0x0800056c   0x0800056c   0x0000002c   Code   RO           67    .text.MRCC_voidClkDisable  rcc_program.o
    0x08000598   0x08000598   0x0000002c   Code   RO           59    .text.MRCC_voidClkEnable  rcc_program.o
    0x080005c4   0x080005c4   0x00000030   Code   RO           57    .text.MRCC_voidInit  rcc_program.o
    0x080005f4   0x080005f4   0x0000009e   Code   RO           69    .text.MRCC_voidPerClock_State  rcc_program.o
    0x08000692   0x08000692   0x00000002   PAD
    0x08000694   0x08000694   0x00000040   Code   RO           63    .text.MRCC_voidSetBusesPrescaler  rcc_program.o
    0x080006d4   0x080006d4   0x00000042   Code   RO           65    .text.MRCC_voidSetClkSource  rcc_program.o
    0x08000716   0x08000716   0x00000002   PAD
    0x08000718   0x08000718   0x000000fe   Code   RO          127    .text.MUSART_u8GetRecievedValue  usart_program.o
    0x08000816   0x08000816   0x00000002   PAD
    0x08000818   0x08000818   0x000000a4   Code   RO          129    .text.MUSART_u8IsRecieveBufferAvailable  usart_program.o
    0x080008bc   0x080008bc   0x00000016   Code   RO          117    .text.MUSART_voidEnableUSART_RecieveInterrupt  usart_program.o
    0x080008d2   0x080008d2   0x00000002   PAD
    0x080008d4   0x080008d4   0x000000b0   Code   RO          113    .text.MUSART_voidInit  usart_program.o
    0x08000984   0x08000984   0x0000000a   Code   RO          115    .text.MUSART_voidSetBaudrateRegister  usart_program.o
    0x0800098e   0x0800098e   0x00000002   PAD
    0x08000990   0x08000990   0x00000016   Code   RO          239    .text.Motor_SetDirectionT  v2v-secondvehicle.o
    0x080009a6   0x080009a6   0x0000000a   PAD
    0x080009b0   0x080009b0   0x00000044   Code   RO          618    .text.PendSV_Handler  port.o
    0x080009f4   0x080009f4   0x0000001e   Code   RO          101    .text.SPI1_IRQHandler  spi.o
    0x08000a12   0x08000a12   0x0000000e   PAD
    0x08000a20   0x08000a20   0x00000024   Code   RO          604    .text.SVC_Handler   port.o
    0x08000a44   0x08000a44   0x00000008   Code   RO          527    .text.SetSysClock   system_stm32f10x.o
    0x08000a4c   0x08000a4c   0x000000be   Code   RO          531    .text.SetSysClockTo72  system_stm32f10x.o
    0x08000b0a   0x08000b0a   0x00000002   PAD
    0x08000b0c   0x08000b0c   0x0000001a   Code   RO          309    .text.SysTick_Handler  cmsis_os2.o
    0x08000b26   0x08000b26   0x00000002   PAD
    0x08000b28   0x08000b28   0x00000056   Code   RO          525    .text.SystemInit    system_stm32f10x.o
    0x08000b7e   0x08000b7e   0x00000002   PAD
    0x08000b80   0x08000b80   0x0000005a   Code   RO          135    .text.USART1_IRQHandler  usart_program.o
    0x08000bda   0x08000bda   0x00000002   PAD
    0x08000bdc   0x08000bdc   0x0000005a   Code   RO          137    .text.USART2_IRQHandler  usart_program.o
    0x08000c36   0x08000c36   0x00000002   PAD
    0x08000c38   0x08000c38   0x0000005a   Code   RO          139    .text.USART3_IRQHandler  usart_program.o
    0x08000c92   0x08000c92   0x00000002   PAD
    0x08000c94   0x08000c94   0x00000020   Code   RO          259    .text._mutex_acquire  clib_arm.o
    0x08000cb4   0x08000cb4   0x00000030   Code   RO          265    .text._mutex_free   clib_arm.o
    0x08000ce4   0x08000ce4   0x00000058   Code   RO          257    .text._mutex_initialize  clib_arm.o
    0x08000d3c   0x08000d3c   0x00000022   Code   RO          263    .text._mutex_release  clib_arm.o
    0x08000d5e   0x08000d5e   0x00000002   PAD
    0x08000d60   0x08000d60   0x00000002   Code   RO          251    .text._platform_post_stackheap_init  clib_arm.o
    0x08000d62   0x08000d62   0x00000002   PAD
    0x08000d64   0x08000d64   0x0000000c   Code   RO          261    .text.is_thread_mode  clib_arm.o
    0x08000d70   0x08000d70   0x0000002e   Code   RO          237    .text.main          v2v-secondvehicle.o
    0x08000d9e   0x08000d9e   0x00000002   PAD
    0x08000da0   0x08000da0   0x00000010   Code   RO          255    .text.os_kernel_is_active  clib_arm.o
    0x08000db0   0x08000db0   0x0000009c   Code   RO          768    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x08000e4c   0x08000e4c   0x000000cc   Code   RO          754    .text.prvAddNewTaskToReadyList  tasks.o
    0x08000f18   0x08000f18   0x0000006a   Code   RO          906    .text.prvCheckForValidListAndQueue  timers.o
    0x08000f82   0x08000f82   0x00000002   PAD
    0x08000f84   0x08000f84   0x0000004e   Code   RO          872    .text.prvCheckTasksWaitingTermination  tasks.o
    0x08000fd2   0x08000fd2   0x00000002   PAD
    0x08000fd4   0x08000fd4   0x00000026   Code   RO          710    .text.prvCopyDataFromQueue  queue.o
    0x08000ffa   0x08000ffa   0x00000002   PAD
    0x08000ffc   0x08000ffc   0x0000007a   Code   RO          698    .text.prvCopyDataToQueue  queue.o
    0x08001076   0x08001076   0x00000002   PAD
    0x08001078   0x08001078   0x00000036   Code   RO          762    .text.prvDeleteTCB  tasks.o
    0x080010ae   0x080010ae   0x00000002   PAD
    0x080010b0   0x080010b0   0x00000012   Code   RO          714    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x080010c2   0x080010c2   0x00000002   PAD
    0x080010c4   0x080010c4   0x00000020   Code   RO          946    .text.prvGetNextExpireTime  timers.o
    0x080010e4   0x080010e4   0x0000006a   Code   RO          637    .text.prvHeapInit   heap_4.o
    0x0800114e   0x0800114e   0x00000002   PAD
    0x08001150   0x08001150   0x0000002a   Code   RO          794    .text.prvIdleTask   tasks.o
    0x0800117a   0x0800117a   0x00000002   PAD
    0x0800117c   0x0800117c   0x00000020   Code   RO          678    .text.prvInitialiseMutex  queue.o
    0x0800119c   0x0800119c   0x00000020   Code   RO          672    .text.prvInitialiseNewQueue  queue.o
    0x080011bc   0x080011bc   0x00000096   Code   RO          752    .text.prvInitialiseNewTask  tasks.o
    0x08001252   0x08001252   0x00000002   PAD
    0x08001254   0x08001254   0x00000070   Code   RO          870    .text.prvInitialiseTaskLists  tasks.o
    0x080012c4   0x080012c4   0x0000005a   Code   RO          639    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x0800131e   0x0800131e   0x00000002   PAD
    0x08001320   0x08001320   0x00000040   Code   RO          960    .text.prvInsertTimerInActiveList  timers.o
    0x08001360   0x08001360   0x00000018   Code   RO          712    .text.prvIsQueueEmpty  queue.o
    0x08001378   0x08001378   0x0000001c   Code   RO          700    .text.prvIsQueueFull  queue.o
    0x08001394   0x08001394   0x00000020   Code   RO          610    .text.prvPortStartFirstTask  port.o
    0x080013b4   0x080013b4   0x0000003e   Code   RO          954    .text.prvProcessExpiredTimer  timers.o
    0x080013f2   0x080013f2   0x00000002   PAD
    0x080013f4   0x080013f4   0x00000112   Code   RO          950    .text.prvProcessReceivedCommands  timers.o
    0x08001506   0x08001506   0x00000002   PAD
    0x08001508   0x08001508   0x00000080   Code   RO          948    .text.prvProcessTimerOrBlockTask  timers.o
    0x08001588   0x08001588   0x0000003a   Code   RO          958    .text.prvReloadTimer  timers.o
    0x080015c2   0x080015c2   0x00000002   PAD
    0x080015c4   0x080015c4   0x00000026   Code   RO          760    .text.prvResetNextTaskUnblockTime  tasks.o
    0x080015ea   0x080015ea   0x00000002   PAD
    0x080015ec   0x080015ec   0x0000002a   Code   RO          952    .text.prvSampleTimeNow  timers.o
    0x08001616   0x08001616   0x00000002   PAD
    0x08001618   0x08001618   0x00000034   Code   RO          956    .text.prvSwitchTimerLists  timers.o
    0x0800164c   0x0800164c   0x00000032   Code   RO          602    .text.prvTaskExitError  port.o
    0x0800167e   0x0800167e   0x00000002   PAD
    0x08001680   0x08001680   0x00000016   Code   RO          908    .text.prvTimerTask  timers.o
    0x08001696   0x08001696   0x00000002   PAD
    0x08001698   0x08001698   0x00000072   Code   RO          702    .text.prvUnlockQueue  queue.o
    0x0800170a   0x0800170a   0x00000002   PAD
    0x0800170c   0x0800170c   0x00000118   Code   RO          635    .text.pvPortMalloc  heap_4.o
    0x08001824   0x08001824   0x00000018   Code   RO          854    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x0800183c   0x0800183c   0x00000020   Code   RO          600    .text.pxPortInitialiseStack  port.o
    0x0800185c   0x0800185c   0x0000002e   Code   RO          620    .text.sys_tick_handler  port.o
    0x0800188a   0x0800188a   0x00000002   PAD
    0x0800188c   0x0800188c   0x0000003a   Code   RO           91    .text.truncate_queue  spi.o
    0x080018c6   0x080018c6   0x00000002   PAD
    0x080018c8   0x080018c8   0x00000024   Code   RO          590    .text.uxListRemove  list.o
    0x080018ec   0x080018ec   0x0000001a   Code   RO          467    .text.vApplicationGetIdleTaskMemory  cmsis_os2.o
    0x08001906   0x08001906   0x00000002   PAD
    0x08001908   0x08001908   0x0000001a   Code   RO          469    .text.vApplicationGetTimerTaskMemory  cmsis_os2.o
    0x08001922   0x08001922   0x00000002   PAD
    0x08001924   0x08001924   0x00000012   Code   RO          465    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x08001936   0x08001936   0x00000002   PAD
    0x08001938   0x08001938   0x00000016   Code   RO          582    .text.vListInitialise  list.o
    0x0800194e   0x0800194e   0x00000002   PAD
    0x08001950   0x08001950   0x00000006   Code   RO          584    .text.vListInitialiseItem  list.o
    0x08001956   0x08001956   0x00000002   PAD
    0x08001958   0x08001958   0x0000003a   Code   RO          588    .text.vListInsert   list.o
    0x08001992   0x08001992   0x00000002   PAD
    0x08001994   0x08001994   0x00000046   Code   RO          614    .text.vPortEnterCritical  port.o
    0x080019da   0x080019da   0x00000002   PAD
    0x080019dc   0x080019dc   0x0000002e   Code   RO          616    .text.vPortExitCritical  port.o
    0x08001a0a   0x08001a0a   0x00000002   PAD
    0x08001a0c   0x08001a0c   0x0000007a   Code   RO          641    .text.vPortFree     heap_4.o
    0x08001a86   0x08001a86   0x00000002   PAD
    0x08001a88   0x08001a88   0x00000034   Code   RO          608    .text.vPortSetupTimerInterrupt  port.o
    0x08001abc   0x08001abc   0x00000026   Code   RO          728    .text.vQueueDelete  queue.o
    0x08001ae2   0x08001ae2   0x00000002   PAD
    0x08001ae4   0x08001ae4   0x00000044   Code   RO          740    .text.vQueueWaitForMessageRestricted  queue.o
    0x08001b28   0x08001b28   0x00000054   Code   RO          772    .text.vTaskDelay    tasks.o
    0x08001b7c   0x08001b7c   0x0000001a   Code   RO          826    .text.vTaskInternalSetTimeOutState  tasks.o
    0x08001b96   0x08001b96   0x00000002   PAD
    0x08001b98   0x08001b98   0x0000000e   Code   RO          830    .text.vTaskMissedYield  tasks.o
    0x08001ba6   0x08001ba6   0x00000002   PAD
    0x08001ba8   0x08001ba8   0x00000032   Code   RO          814    .text.vTaskPlaceOnEventList  tasks.o
    0x08001bda   0x08001bda   0x00000002   PAD
    0x08001bdc   0x08001bdc   0x0000006e   Code   RO          818    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x08001c4a   0x08001c4a   0x00000002   PAD
    0x08001c4c   0x08001c4c   0x000000b8   Code   RO          850    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x08001d04   0x08001d04   0x000000b0   Code   RO          792    .text.vTaskStartScheduler  tasks.o
    0x08001db4   0x08001db4   0x00000010   Code   RO          766    .text.vTaskSuspendAll  tasks.o
    0x08001dc4   0x08001dc4   0x000000ca   Code   RO          784    .text.vTaskSwitchContext  tasks.o
    0x08001e8e   0x08001e8e   0x00000002   PAD
    0x08001e90   0x08001e90   0x000000ba   Code   RO          606    .text.xPortStartScheduler  port.o
    0x08001f4a   0x08001f4a   0x00000002   PAD
    0x08001f4c   0x08001f4c   0x00000016   Code   RO          676    .text.xQueueCreateMutex  queue.o
    0x08001f62   0x08001f62   0x00000002   PAD
    0x08001f64   0x08001f64   0x00000022   Code   RO          680    .text.xQueueCreateMutexStatic  queue.o
    0x08001f86   0x08001f86   0x00000002   PAD
    0x08001f88   0x08001f88   0x0000005a   Code   RO          674    .text.xQueueGenericCreate  queue.o
    0x08001fe2   0x08001fe2   0x00000002   PAD
    0x08001fe4   0x08001fe4   0x0000006e   Code   RO          670    .text.xQueueGenericCreateStatic  queue.o
    0x08002052   0x08002052   0x00000002   PAD
    0x08002054   0x08002054   0x000000b2   Code   RO          668    .text.xQueueGenericReset  queue.o
    0x08002106   0x08002106   0x00000002   PAD
    0x08002108   0x08002108   0x000001a2   Code   RO          688    .text.xQueueGenericSend  queue.o
    0x080022aa   0x080022aa   0x00000002   PAD
    0x080022ac   0x080022ac   0x00000184   Code   RO          708    .text.xQueueReceive  queue.o
    0x08002430   0x08002430   0x000001aa   Code   RO          692    .text.xQueueSemaphoreTake  queue.o
    0x080025da   0x080025da   0x00000002   PAD
    0x080025dc   0x080025dc   0x0000008c   Code   RO          828    .text.xTaskCheckForTimeOut  tasks.o
    0x08002668   0x08002668   0x0000006c   Code   RO          756    .text.xTaskCreate   tasks.o
    0x080026d4   0x080026d4   0x0000009e   Code   RO          750    .text.xTaskCreateStatic  tasks.o
    0x08002772   0x08002772   0x00000002   PAD
    0x08002774   0x08002774   0x00000026   Code   RO          844    .text.xTaskGetSchedulerState  tasks.o
    0x0800279a   0x0800279a   0x00000002   PAD
    0x0800279c   0x0800279c   0x0000000c   Code   RO          800    .text.xTaskGetTickCount  tasks.o
    0x080027a8   0x080027a8   0x000001a6   Code   RO          798    .text.xTaskIncrementTick  tasks.o
    0x0800294e   0x0800294e   0x00000002   PAD
    0x08002950   0x08002950   0x000000a6   Code   RO          848    .text.xTaskPriorityDisinherit  tasks.o
    0x080029f6   0x080029f6   0x00000002   PAD
    0x080029f8   0x080029f8   0x000000a6   Code   RO          846    .text.xTaskPriorityInherit  tasks.o
    0x08002a9e   0x08002a9e   0x00000002   PAD
    0x08002aa0   0x08002aa0   0x000000ee   Code   RO          820    .text.xTaskRemoveFromEventList  tasks.o
    0x08002b8e   0x08002b8e   0x00000002   PAD
    0x08002b90   0x08002b90   0x0000016c   Code   RO          770    .text.xTaskResumeAll  tasks.o
    0x08002cfc   0x08002cfc   0x00000074   Code   RO          904    .text.xTimerCreateTimerTask  timers.o
    0x08002d70   0x08002d70   0x00000004   Data   RO          875    .rodata.uxTopUsedPriority  tasks.o
    0x08002d74   0x08002d74   0x00000020   Data   RO         1152    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08002d94, Size: 0x000000f0, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08002d94   0x00000002   Data   RW          142    .data.GlobalUSART1_s16RecievedFront  usart_program.o
    0x20000002   0x08002d96   0x00000002   Data   RW          143    .data.GlobalUSART1_s16RecievedRear  usart_program.o
    0x20000004   0x08002d98   0x00000002   Data   RW          144    .data.GlobalUSART2_s16RecievedFront  usart_program.o
    0x20000006   0x08002d9a   0x00000002   Data   RW          145    .data.GlobalUSART2_s16RecievedRear  usart_program.o
    0x20000008   0x08002d9c   0x00000002   Data   RW          146    .data.GlobalUSART3_s16RecievedFront  usart_program.o
    0x2000000a   0x08002d9e   0x00000002   Data   RW          147    .data.GlobalUSART3_s16RecievedRear  usart_program.o
    0x2000000c   0x08002da0   0x00000001   Data   RW          241    .data.Global_u8Direction  v2v-secondvehicle.o
    0x2000000d   0x08002da1   0x00000003   PAD
    0x20000010   0x08002da4   0x00000004   Data   RW          533    .data.SystemCoreClock  system_stm32f10x.o
    0x20000014   0x08002da8   0x0000000c   Data   RW          141    .data.USART         usart_program.o
    0x20000020   0x08002db4   0x000000ca   Data   RW          104    .data.gl_SPI_data_queue  spi.o
    0x200000ea   0x08002e7e   0x00000002   PAD
    0x200000ec   0x08002e80   0x00000004   Data   RW          626    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x200000f0, Load base: 0x08002e84, Size: 0x00004398, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x200000f0        -       0x00000060   Zero   RW         1019    .bss                c_w.l(libspace.o)
    0x20000150        -       0x000005dc   Zero   RW          148    .bss.GlobalUSART1_u8RecievedValue  usart_program.o
    0x2000072c        -       0x000005dc   Zero   RW          149    .bss.GlobalUSART2_u8RecievedValue  usart_program.o
    0x20000d08        -       0x000005dc   Zero   RW          150    .bss.GlobalUSART3_u8RecievedValue  usart_program.o
    0x200012e4        -       0x00000190   Zero   RW          270    .bss.clib_mutex_cb  clib_arm.o
    0x20001474        -       0x00000014   Zero   RW          269    .bss.clib_mutex_id  clib_arm.o
    0x20001488        -       0x00000004   Zero   RW          103    .bss.gl_ptr_Function  spi.o
    0x2000148c        -       0x00000050   Zero   RW          970    .bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage  timers.o
    0x200014dc        -       0x00000050   Zero   RW          969    .bss.prvCheckForValidListAndQueue.xStaticTimerQueue  timers.o
    0x2000152c        -       0x00000004   Zero   RW          966    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20001530        -       0x00000004   Zero   RW          874    .bss.pxCurrentTCB   tasks.o
    0x20001534        -       0x00000004   Zero   RW          964    .bss.pxCurrentTimerList  timers.o
    0x20001538        -       0x00000004   Zero   RW          883    .bss.pxDelayedTaskList  tasks.o
    0x2000153c        -       0x00000004   Zero   RW          653    .bss.pxEnd          heap_4.o
    0x20001540        -       0x00000004   Zero   RW          884    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20001544        -       0x00000004   Zero   RW          965    .bss.pxOverflowTimerList  timers.o
    0x20001548        -       0x00000460   Zero   RW          886    .bss.pxReadyTasksLists  tasks.o
    0x200019a8        -       0x00002000   Zero   RW          659    .bss.ucHeap         heap_4.o
    0x200039a8        -       0x00000001   Zero   RW          624    .bss.ucMaxSysCallPriority  port.o
    0x200039a9   0x08002e84   0x00000003   PAD
    0x200039ac        -       0x00000004   Zero   RW          625    .bss.ulMaxPRIGROUPValue  port.o
    0x200039b0        -       0x00000004   Zero   RW          879    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200039b4        -       0x00000004   Zero   RW          878    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x200039b8        -       0x00000004   Zero   RW          881    .bss.uxSchedulerSuspended  tasks.o
    0x200039bc        -       0x00000004   Zero   RW          876    .bss.uxTaskNumber   tasks.o
    0x200039c0        -       0x00000004   Zero   RW          887    .bss.uxTopReadyPriority  tasks.o
    0x200039c4        -       0x00000200   Zero   RW          476    .bss.vApplicationGetIdleTaskMemory.Idle_Stack  cmsis_os2.o
    0x20003bc4        -       0x0000005c   Zero   RW          475    .bss.vApplicationGetIdleTaskMemory.Idle_TCB  cmsis_os2.o
    0x20003c20        -       0x00000140   Zero   RW          478    .bss.vApplicationGetTimerTaskMemory.Timer_Stack  cmsis_os2.o
    0x20003d60        -       0x0000005c   Zero   RW          477    .bss.vApplicationGetTimerTaskMemory.Timer_TCB  cmsis_os2.o
    0x20003dbc        -       0x00000014   Zero   RW          967    .bss.xActiveTimerList1  timers.o
    0x20003dd0        -       0x00000014   Zero   RW          968    .bss.xActiveTimerList2  timers.o
    0x20003de4        -       0x00000014   Zero   RW          894    .bss.xDelayedTaskList1  tasks.o
    0x20003df8        -       0x00000014   Zero   RW          895    .bss.xDelayedTaskList2  tasks.o
    0x20003e0c        -       0x00000004   Zero   RW          654    .bss.xFreeBytesRemaining  heap_4.o
    0x20003e10        -       0x00000004   Zero   RW          890    .bss.xIdleTaskHandle  tasks.o
    0x20003e14        -       0x00000004   Zero   RW          656    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20003e18        -       0x00000004   Zero   RW          891    .bss.xNextTaskUnblockTime  tasks.o
    0x20003e1c        -       0x00000004   Zero   RW          893    .bss.xNumOfOverflows  tasks.o
    0x20003e20        -       0x00000004   Zero   RW          657    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20003e24        -       0x00000004   Zero   RW          658    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20003e28        -       0x00000004   Zero   RW          892    .bss.xPendedTicks   tasks.o
    0x20003e2c        -       0x00000014   Zero   RW          889    .bss.xPendingReadyList  tasks.o
    0x20003e40        -       0x00000004   Zero   RW          880    .bss.xSchedulerRunning  tasks.o
    0x20003e44        -       0x00000008   Zero   RW          655    .bss.xStart         heap_4.o
    0x20003e4c        -       0x00000014   Zero   RW          885    .bss.xSuspendedTaskList  tasks.o
    0x20003e60        -       0x00000014   Zero   RW          877    .bss.xTasksWaitingTermination  tasks.o
    0x20003e74        -       0x00000004   Zero   RW          882    .bss.xTickCount     tasks.o
    0x20003e78        -       0x00000004   Zero   RW          962    .bss.xTimerQueue    timers.o
    0x20003e7c        -       0x00000004   Zero   RW          963    .bss.xTimerTaskHandle  timers.o
    0x20003e80        -       0x00000004   Zero   RW          888    .bss.xYieldPending  tasks.o
    0x20003e84   0x08002e84   0x00000004   PAD
    0x20003e88        -       0x00000200   Zero   RW          516    HEAP                startup_stm32f10x_md.o
    0x20004088        -       0x00000400   Zero   RW          515    STACK               startup_stm32f10x_md.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        68          0          0          0          0       1934   ble.o
       232          0          0          0        420       3942   clib_arm.o
        96          0          0          0       1016      40622   cmsis_os2.o
       230          0          0          0          0       2588   dio_program.o
       598          0          0          0       8220       5115   heap_4.o
       122          0          0          0          0       2372   list.o
        50          0          0          0          0       3590   nvic_program.o
       618         12          0          4          5       3831   port.o
      2180          0          0          0          0      23206   queue.o
       472         36          0          0          0       3293   rcc_program.o
        88          0          0        202          4       3339   spi.o
        64         26        236          0       1536        844   startup_stm32f10x_md.o
       284          0          0          4          0       2883   system_stm32f10x.o
      3532          8          4          0       1280      33262   tasks.o
       956         18          0          0        220      14852   timers.o
       896          0          0         24       4500       5566   usart_program.o
        68          0          0          1          0       1041   v2v-secondvehicle.o

    ----------------------------------------------------------------------
     10708        100        272        240      17208     152280   Object Totals
         0          0         32          0          0          0   (incl. Generated)
       154          0          0          5          7          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        16          0          0          0          0         68   aeabi_memset4.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         2          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
        68          0          0          0          0         68   rt_memclr.o
        78          0          0          0          0         80   rt_memclr_w.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       688         16          0          0         96        948   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       680         16          0          0         96        948   c_w.l

    ----------------------------------------------------------------------
       688         16          0          0         96        948   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     11396        116        272        240      17304     152560   Grand Totals
     11396        116        272        240      17304     152560   ELF Image Totals
     11396        116        272        240          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                11668 (  11.39kB)
    Total RW  Size (RW Data + ZI Data)             17544 (  17.13kB)
    Total ROM Size (Code + RO Data + RW Data)      11908 (  11.63kB)

==============================================================================

