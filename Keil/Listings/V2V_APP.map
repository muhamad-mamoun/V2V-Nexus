Component: Arm Compiler for Embedded 6.19 Tool: armlink [5e73cb00]

==============================================================================

Section Cross References

    main.o(.text.main) refers to rcc.o(.text.RCC_voidEnablePeripheral) for RCC_voidEnablePeripheral
    main.o(.text.main) refers to nvic.o(.text.NVIC_Init) for NVIC_Init
    main.o(.text.main) refers to motor.o(.text.DCmotor_Init) for DCmotor_Init
    main.o(.text.main) refers to us.o(.text.US_voidInit) for US_voidInit
    main.o(.text.main) refers to ble.o(.text.HBLE_VInit) for HBLE_VInit
    main.o(.text.main) refers to main.o(.bss.Dist) for Dist
    main.o(.text.main) refers to ble.o(.text.HBLE_VGetKey) for HBLE_VGetKey
    main.o(.text.main) refers to motor.o(.text.DCmotor_backMove) for DCmotor_backMove
    main.o(.text.main) refers to motor.o(.text.DCmotor_frontMove) for DCmotor_frontMove
    main.o(.text.main) refers to motor.o(.text.DCmotor_stop) for DCmotor_stop
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.RCC_voidInitSYSCLK) refers to rcc.o(.text.RCC_voidInitSYSCLK) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.RCC_voidEnablePeripheral) refers to rcc.o(.text.RCC_voidEnablePeripheral) for [Anonymous Symbol]
    rcc.o(.ARM.exidx.text.RCC_voidDisablePeripheral) refers to rcc.o(.text.RCC_voidDisablePeripheral) for [Anonymous Symbol]
    gpio.o(.text.GPIO_init) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_init.LOC_ptr2GPIOx
    gpio.o(.text.GPIO_init) refers to gpio.o(.rodata..L__const.GPIO_init.LOC_pinsConfigurations) for .L__const.GPIO_init.LOC_pinsConfigurations
    gpio.o(.text.GPIO_init) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    gpio.o(.text.GPIO_init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    gpio.o(.ARM.exidx.text.GPIO_init) refers to gpio.o(.text.GPIO_init) for [Anonymous Symbol]
    gpio.o(.text.GPIO_configurePin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_configurePin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_configurePin) refers to gpio.o(.text.GPIO_configurePin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_writePin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_writePin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_writePin) refers to gpio.o(.text.GPIO_writePin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_writePort) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_writePort.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_writePort) refers to gpio.o(.text.GPIO_writePort) for [Anonymous Symbol]
    gpio.o(.text.GPIO_readPin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_readPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_readPin) refers to gpio.o(.text.GPIO_readPin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_readPort) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_readPort.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_readPort) refers to gpio.o(.text.GPIO_readPort) for [Anonymous Symbol]
    gpio.o(.text.GPIO_togglePin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_togglePin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_togglePin) refers to gpio.o(.text.GPIO_togglePin) for [Anonymous Symbol]
    gpio.o(.text.GPIO_setPinFuction) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_setPinFuction.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_setPinFuction) refers to gpio.o(.text.GPIO_setPinFuction) for [Anonymous Symbol]
    gpio.o(.text.GPIO_lockPin) refers to gpio.o(.rodata.cst32) for .L__const.GPIO_lockPin.LOC_ptr2GPIOx
    gpio.o(.ARM.exidx.text.GPIO_lockPin) refers to gpio.o(.text.GPIO_lockPin) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.NVIC_Init) refers to nvic.o(.text.NVIC_Init) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC__Venable_irq) refers to nvic.o(.text.MNVIC__Venable_irq) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC__Vdisable_irq) refers to nvic.o(.text.MNVIC__Vdisable_irq) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuEnablePerInterrupt) refers to nvic.o(.text.MNVIC_EnuEnablePerInterrupt) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuDisablePerInterrupt) refers to nvic.o(.text.MNVIC_EnuDisablePerInterrupt) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuSetPendingFlag) refers to nvic.o(.text.MNVIC_EnuSetPendingFlag) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuClearPendingFlag) refers to nvic.o(.text.MNVIC_EnuClearPendingFlag) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuActiveFlagStatus) refers to nvic.o(.text.MNVIC_EnuActiveFlagStatus) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_EnuSetPriorityGroup) refers to nvic.o(.text.MNVIC_EnuSetPriorityGroup) for [Anonymous Symbol]
    nvic.o(.ARM.exidx.text.MNVIC_VSystemReset) refers to nvic.o(.text.MNVIC_VSystemReset) for [Anonymous Symbol]
    pwm.o(.text.PWM_enu_Init) refers to rcc.o(.text.RCC_voidEnablePeripheral) for RCC_voidEnablePeripheral
    pwm.o(.text.PWM_enu_Init) refers to pwm.o(.data.test) for test
    pwm.o(.text.PWM_enu_Init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    pwm.o(.text.PWM_enu_Init) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    pwm.o(.ARM.exidx.text.PWM_enu_Init) refers to pwm.o(.text.PWM_enu_Init) for [Anonymous Symbol]
    pwm.o(.ARM.exidx.text.PWM_enu_SetDutyCycle) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.MUSART_voidInit) refers to usart.o(.text.MUSART_voidInit) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.MUSART1_VidSendCharSync) refers to usart.o(.text.MUSART1_VidSendCharSync) for [Anonymous Symbol]
    usart.o(.text.MUSART1_VidSendStringSynch) refers to usart.o(.text.MUSART1_VidSendCharSync) for MUSART1_VidSendCharSync
    usart.o(.ARM.exidx.text.MUSART1_VidSendStringSynch) refers to usart.o(.text.MUSART1_VidSendStringSynch) for [Anonymous Symbol]
    usart.o(.ARM.exidx.text.MUSART1_u8RecCharSynch) refers to usart.o(.text.MUSART1_u8RecCharSynch) for [Anonymous Symbol]
    usart.o(.text.MUSART1_VidSetCallBack) refers to usart.o(.bss.MUSART1_CallBack) for MUSART1_CallBack
    usart.o(.ARM.exidx.text.MUSART1_VidSetCallBack) refers to usart.o(.text.MUSART1_VidSetCallBack) for [Anonymous Symbol]
    usart.o(.text.USART1_IRQHandler) refers to usart.o(.bss.MUSART1_CallBack) for MUSART1_CallBack
    usart.o(.ARM.exidx.text.USART1_IRQHandler) refers to usart.o(.text.USART1_IRQHandler) for [Anonymous Symbol]
    icu.o(.text.ICU_voidInitTimer) refers to icu.o(.data.Timer) for Timer
    icu.o(.text.ICU_voidInitTimer) refers to icu.o(.text.ICU_voidSetSensingEdge) for ICU_voidSetSensingEdge
    icu.o(.ARM.exidx.text.ICU_voidInitTimer) refers to icu.o(.text.ICU_voidInitTimer) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetSensingEdge) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetSensingEdge) refers to icu.o(.text.ICU_voidSetSensingEdge) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetCountTime) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetCountTime) refers to icu.o(.text.ICU_voidSetCountTime) for [Anonymous Symbol]
    icu.o(.text.ICU_voidEnableTimer) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidEnableTimer) refers to icu.o(.text.ICU_voidEnableTimer) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetICU_Count) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetICU_Count) refers to icu.o(.text.ICU_voidGetICU_Count) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetTimerOvStatus) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetTimerOvStatus) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for [Anonymous Symbol]
    icu.o(.text.ICU_voidClrTimerOvFlag) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidClrTimerOvFlag) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for [Anonymous Symbol]
    icu.o(.text.ICU_voidGetTimerIcuStatus) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidGetTimerIcuStatus) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for [Anonymous Symbol]
    icu.o(.text.ICU_voidSetArrTime) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidSetArrTime) refers to icu.o(.text.ICU_voidSetArrTime) for [Anonymous Symbol]
    icu.o(.text.ICU_voidClrTimerIcuFlag) refers to icu.o(.data.Timer) for Timer
    icu.o(.ARM.exidx.text.ICU_voidClrTimerIcuFlag) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for [Anonymous Symbol]
    exti.o(.ARM.exidx.text.EXTI_enuEnableINT) refers to exti.o(.text.EXTI_enuEnableINT) for [Anonymous Symbol]
    exti.o(.ARM.exidx.text.EXTI_enuDisableINT) refers to exti.o(.text.EXTI_enuDisableINT) for [Anonymous Symbol]
    exti.o(.text.EXTI_enuCallBack) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti.o(.ARM.exidx.text.EXTI_enuCallBack) refers to exti.o(.text.EXTI_enuCallBack) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI0_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI0_IRQHandler) refers to exti_irq.o(.text.EXTI0_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI1_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI1_IRQHandler) refers to exti_irq.o(.text.EXTI1_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI2_TSC_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI2_TSC_IRQHandler) refers to exti_irq.o(.text.EXTI2_TSC_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI3_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI3_IRQHandler) refers to exti_irq.o(.text.EXTI3_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI4_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI4_IRQHandler) refers to exti_irq.o(.text.EXTI4_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI9_5_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI9_5_IRQHandler) refers to exti_irq.o(.text.EXTI9_5_IRQHandler) for [Anonymous Symbol]
    exti_irq.o(.text.EXTI15_10_IRQHandler) refers to exti.o(.bss.Call_Ptr) for Call_Ptr
    exti_irq.o(.ARM.exidx.text.EXTI15_10_IRQHandler) refers to exti_irq.o(.text.EXTI15_10_IRQHandler) for [Anonymous Symbol]
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input1PinBack) for input1PinBack
    motor.o(.text.DCmotor_Init) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input2PinBack) for input2PinBack
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input1PinFront) for input1PinFront
    motor.o(.text.DCmotor_Init) refers to motor.o(.data.input2PinFront) for input2PinFront
    motor.o(.text.DCmotor_Init) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_Init) refers to pwm.o(.text.PWM_enu_Init) for PWM_enu_Init
    motor.o(.ARM.exidx.text.DCmotor_Init) refers to motor.o(.text.DCmotor_Init) for [Anonymous Symbol]
    motor.o(.text.DCmotor_frontMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_frontMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.DCmotor_frontMove) refers to motor.o(.text.DCmotor_frontMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_backMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_backMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.DCmotor_backMove) refers to motor.o(.text.DCmotor_backMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_rightMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_rightMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.DCmotor_rightMove) refers to motor.o(.text.DCmotor_rightMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_leftMove) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_leftMove) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.DCmotor_leftMove) refers to motor.o(.text.DCmotor_leftMove) for [Anonymous Symbol]
    motor.o(.text.DCmotor_stop) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.text.DCmotor_stop) refers to pwm.o(.text.PWM_enu_SetDutyCycle) for PWM_enu_SetDutyCycle
    motor.o(.ARM.exidx.text.DCmotor_stop) refers to motor.o(.text.DCmotor_stop) for [Anonymous Symbol]
    motor.o(.text.DCmotor1_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor1_) refers to motor.o(.text.DCmotor1_) for [Anonymous Symbol]
    motor.o(.text.DCmotor2_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor2_) refers to motor.o(.text.DCmotor2_) for [Anonymous Symbol]
    motor.o(.text.DCmotor3_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor3_) refers to motor.o(.text.DCmotor3_) for [Anonymous Symbol]
    motor.o(.text.DCmotor4_) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    motor.o(.ARM.exidx.text.DCmotor4_) refers to motor.o(.text.DCmotor4_) for [Anonymous Symbol]
    us.o(.text.US_voidInit) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    us.o(.text.US_voidInit) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    us.o(.text.US_voidInit) refers to icu.o(.text.ICU_voidInitTimer) for ICU_voidInitTimer
    us.o(.ARM.exidx.text.US_voidInit) refers to us.o(.text.US_voidInit) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistance) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetUSSensorDistance) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistance) refers to us.o(.text.US_voidGetUSSensorDistance) for [Anonymous Symbol]
    us.o(.text.US_voidSetTrigger) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidSetTrigger) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.ARM.exidx.text.US_voidSetTrigger) refers to us.o(.text.US_voidSetTrigger) for [Anonymous Symbol]
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidSetICUTime) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.ARM.exidx.text.US_voidSetICUTime) refers to us.o(.text.US_voidSetICUTime) for [Anonymous Symbol]
    us.o(.text.US_voidGetTimeStatus) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.ARM.exidx.text.US_voidGetTimeStatus) refers to us.o(.text.US_voidGetTimeStatus) for [Anonymous Symbol]
    us.o(.text.US_voidGetICU_Distance) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.text.US_voidGetICU_Distance) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.ARM.exidx.text.US_voidGetICU_Distance) refers to us.o(.text.US_voidGetICU_Distance) for [Anonymous Symbol]
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.bss.US_voidGetUSSensorDistanceAsync.US_flag) for US_voidGetUSSensorDistanceAsync.US_flag
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidSetTrigger) for US_voidSetTrigger
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidSetICUTime) for US_voidSetICUTime
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.bss.US_voidGetUSSensorDistanceAsync.US_TimerStatus) for US_voidGetUSSensorDistanceAsync.US_TimerStatus
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidGetTimeStatus) for US_voidGetTimeStatus
    us.o(.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidGetICU_Distance) for US_voidGetICU_Distance
    us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsync) refers to us.o(.text.US_voidGetUSSensorDistanceAsync) for [Anonymous Symbol]
    us.o(.text.US_voidGetDistancePolling) refers to gpio.o(.text.GPIO_writePin) for GPIO_writePin
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidSetArrTime) for ICU_voidSetArrTime
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidClrTimerOvFlag) for ICU_voidClrTimerOvFlag
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidEnableTimer) for ICU_voidEnableTimer
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetTimerOvStatus) for ICU_voidGetTimerOvStatus
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidSetCountTime) for ICU_voidSetCountTime
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidClrTimerIcuFlag) for ICU_voidClrTimerIcuFlag
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetTimerIcuStatus) for ICU_voidGetTimerIcuStatus
    us.o(.text.US_voidGetDistancePolling) refers to icu.o(.text.ICU_voidGetICU_Count) for ICU_voidGetICU_Count
    us.o(.ARM.exidx.text.US_voidGetDistancePolling) refers to us.o(.text.US_voidGetDistancePolling) for [Anonymous Symbol]
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART_PIN_TX) for UART_PIN_TX
    ble.o(.text.HBLE_VInit) refers to gpio.o(.text.GPIO_configurePin) for GPIO_configurePin
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART_PIN_RX) for UART_PIN_RX
    ble.o(.text.HBLE_VInit) refers to gpio.o(.text.GPIO_setPinFuction) for GPIO_setPinFuction
    ble.o(.text.HBLE_VInit) refers to ble.o(.data.UART) for UART
    ble.o(.text.HBLE_VInit) refers to usart.o(.text.MUSART_voidInit) for MUSART_voidInit
    ble.o(.text.HBLE_VInit) refers to ble.o(.text.HBLE_VGetChar) for HBLE_VGetChar
    ble.o(.text.HBLE_VInit) refers to usart.o(.text.MUSART1_VidSetCallBack) for MUSART1_VidSetCallBack
    ble.o(.text.HBLE_VInit) refers to nvic.o(.text.MNVIC_EnuEnablePerInterrupt) for MNVIC_EnuEnablePerInterrupt
    ble.o(.ARM.exidx.text.HBLE_VInit) refers to ble.o(.text.HBLE_VInit) for [Anonymous Symbol]
    ble.o(.text.HBLE_VGetChar) refers to ble.o(.data.G_Key) for G_Key
    ble.o(.ARM.exidx.text.HBLE_VGetChar) refers to ble.o(.text.HBLE_VGetChar) for [Anonymous Symbol]
    ble.o(.text.HBLE_VGetKey) refers to ble.o(.data.G_Key) for G_Key
    ble.o(.ARM.exidx.text.HBLE_VGetKey) refers to ble.o(.text.HBLE_VGetKey) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init) refers to clib_arm.o(.text._platform_post_stackheap_init) for [Anonymous Symbol]
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace) for os_libspace
    clib_arm.o(.text.__user_perthread_libspace) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    clib_arm.o(.text.__user_perthread_libspace) refers to clib_arm.o(.bss.os_libspace_id) for os_libspace_id
    clib_arm.o(.ARM.exidx.text.__user_perthread_libspace) refers to clib_arm.o(.text.__user_perthread_libspace) for [Anonymous Symbol]
    clib_arm.o(.text.os_kernel_is_active) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    clib_arm.o(.ARM.exidx.text.os_kernel_is_active) refers to clib_arm.o(.text.os_kernel_is_active) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.bss.clib_mutex_cb) for clib_mutex_cb
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    clib_arm.o(.text._mutex_initialize) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_initialize) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    clib_arm.o(.ARM.exidx.text._mutex_initialize) refers to clib_arm.o(.text._mutex_initialize) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_acquire) refers to clib_arm.o(.text.is_thread_mode) for is_thread_mode
    clib_arm.o(.text._mutex_acquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    clib_arm.o(.ARM.exidx.text._mutex_acquire) refers to clib_arm.o(.text._mutex_acquire) for [Anonymous Symbol]
    clib_arm.o(.ARM.exidx.text.is_thread_mode) refers to clib_arm.o(.text.is_thread_mode) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.os_kernel_is_active) for os_kernel_is_active
    clib_arm.o(.text._mutex_release) refers to clib_arm.o(.text.is_thread_mode) for is_thread_mode
    clib_arm.o(.text._mutex_release) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    clib_arm.o(.ARM.exidx.text._mutex_release) refers to clib_arm.o(.text._mutex_release) for [Anonymous Symbol]
    clib_arm.o(.text._mutex_free) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    clib_arm.o(.text._mutex_free) refers to clib_arm.o(.bss.clib_mutex_id) for clib_mutex_id
    clib_arm.o(.ARM.exidx.text._mutex_free) refers to clib_arm.o(.text._mutex_free) for [Anonymous Symbol]
    cmsis_os2.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.SysTick_Handler) refers to port.o(.text.xPortSysTickHandler) for xPortSysTickHandler
    cmsis_os2.o(.ARM.exidx.text.SysTick_Handler) refers to cmsis_os2.o(.text.SysTick_Handler) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelInitialize) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelInitialize) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelInitialize) refers to cmsis_os2.o(.text.osKernelInitialize) for [Anonymous Symbol]
    cmsis_os2.o(.text.IRQ_Context) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.ARM.exidx.text.IRQ_Context) refers to cmsis_os2.o(.text.IRQ_Context) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetInfo) refers to cmsis_os2.o(.rodata.str1.1) for .L.str
    cmsis_os2.o(.text.osKernelGetInfo) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo) refers to cmsis_os2.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetState) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelGetState) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.ARM.exidx.text.osKernelGetState) refers to cmsis_os2.o(.text.osKernelGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.bss.KernelState) for KernelState
    cmsis_os2.o(.text.osKernelStart) refers to cmsis_os2.o(.text.SVC_Setup) for SVC_Setup
    cmsis_os2.o(.text.osKernelStart) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    cmsis_os2.o(.ARM.exidx.text.osKernelStart) refers to cmsis_os2.o(.text.osKernelStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.SVC_Setup) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    cmsis_os2.o(.ARM.exidx.text.SVC_Setup) refers to cmsis_os2.o(.text.SVC_Setup) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.ARM.exidx.text.osKernelLock) refers to cmsis_os2.o(.text.osKernelLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelUnlock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelUnlock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelUnlock) refers to cmsis_os2.o(.text.osKernelUnlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osKernelRestoreLock) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock) refers to cmsis_os2.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCountFromISR) for xTaskGetTickCountFromISR
    cmsis_os2.o(.text.osKernelGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount) refers to cmsis_os2.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq) refers to cmsis_os2.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    cmsis_os2.o(.text.osKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to cmsis_os2.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osKernelGetSysTimerFreq) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to cmsis_os2.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    cmsis_os2.o(.text.osThreadNew) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    cmsis_os2.o(.ARM.exidx.text.osThreadNew) refers to cmsis_os2.o(.text.osThreadNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetName) refers to tasks.o(.text.pcTaskGetName) for pcTaskGetName
    cmsis_os2.o(.ARM.exidx.text.osThreadGetName) refers to cmsis_os2.o(.text.osThreadGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetId) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.ARM.exidx.text.osThreadGetId) refers to cmsis_os2.o(.text.osThreadGetId) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetState) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetState) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.ARM.exidx.text.osThreadGetState) refers to cmsis_os2.o(.text.osThreadGetState) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetStackSpace) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for uxTaskGetStackHighWaterMark
    cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace) refers to cmsis_os2.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSetPriority) refers to tasks.o(.text.vTaskPrioritySet) for vTaskPrioritySet
    cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority) refers to cmsis_os2.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetPriority) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetPriority) refers to tasks.o(.text.uxTaskPriorityGet) for uxTaskPriorityGet
    cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority) refers to cmsis_os2.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadYield) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osThreadYield) refers to cmsis_os2.o(.text.osThreadYield) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadSuspend) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadSuspend) refers to tasks.o(.text.vTaskSuspend) for vTaskSuspend
    cmsis_os2.o(.ARM.exidx.text.osThreadSuspend) refers to cmsis_os2.o(.text.osThreadSuspend) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadResume) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadResume) refers to tasks.o(.text.vTaskResume) for vTaskResume
    cmsis_os2.o(.ARM.exidx.text.osThreadResume) refers to cmsis_os2.o(.text.osThreadResume) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadExit) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadExit) refers to cmsis_os2.o(.text.osThreadExit) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadTerminate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    cmsis_os2.o(.text.osThreadTerminate) refers to tasks.o(.text.vTaskDelete) for vTaskDelete
    cmsis_os2.o(.ARM.exidx.text.osThreadTerminate) refers to cmsis_os2.o(.text.osThreadTerminate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadGetCount) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.ARM.exidx.text.osThreadGetCount) refers to cmsis_os2.o(.text.osThreadGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadEnumerate) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.uxTaskGetSystemState) for uxTaskGetSystemState
    cmsis_os2.o(.text.osThreadEnumerate) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    cmsis_os2.o(.text.osThreadEnumerate) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate) refers to cmsis_os2.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for xTaskGenericNotifyFromISR
    cmsis_os2.o(.text.osThreadFlagsSet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet) refers to cmsis_os2.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsClear) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear) refers to cmsis_os2.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    cmsis_os2.o(.text.osThreadFlagsGet) refers to tasks.o(.text.xTaskGenericNotify) for xTaskGenericNotify
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet) refers to cmsis_os2.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osThreadFlagsWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for xTaskGenericNotifyWait
    cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait) refers to cmsis_os2.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelay) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelay) refers to tasks.o(.text.vTaskDelay) for vTaskDelay
    cmsis_os2.o(.ARM.exidx.text.osDelay) refers to cmsis_os2.o(.text.osDelay) for [Anonymous Symbol]
    cmsis_os2.o(.text.osDelayUntil) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    cmsis_os2.o(.text.osDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    cmsis_os2.o(.ARM.exidx.text.osDelayUntil) refers to cmsis_os2.o(.text.osDelayUntil) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osTimerNew) refers to cmsis_os2.o(.text.TimerCallback) for TimerCallback
    cmsis_os2.o(.text.osTimerNew) refers to timers_1.o(.text.xTimerCreateStatic) for xTimerCreateStatic
    cmsis_os2.o(.text.osTimerNew) refers to timers_1.o(.text.xTimerCreate) for xTimerCreate
    cmsis_os2.o(.text.osTimerNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerNew) refers to cmsis_os2.o(.text.osTimerNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.TimerCallback) refers to timers_1.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.ARM.exidx.text.TimerCallback) refers to cmsis_os2.o(.text.TimerCallback) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerGetName) refers to timers_1.o(.text.pcTimerGetName) for pcTimerGetName
    cmsis_os2.o(.ARM.exidx.text.osTimerGetName) refers to cmsis_os2.o(.text.osTimerGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStart) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStart) refers to timers_1.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStart) refers to cmsis_os2.o(.text.osTimerStart) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerStop) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerStop) refers to timers_1.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.text.osTimerStop) refers to timers_1.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.ARM.exidx.text.osTimerStop) refers to cmsis_os2.o(.text.osTimerStop) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerIsRunning) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerIsRunning) refers to timers_1.o(.text.xTimerIsTimerActive) for xTimerIsTimerActive
    cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning) refers to cmsis_os2.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    cmsis_os2.o(.text.osTimerDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osTimerDelete) refers to timers_1.o(.text.pvTimerGetTimerID) for pvTimerGetTimerID
    cmsis_os2.o(.text.osTimerDelete) refers to timers_1.o(.text.xTimerGenericCommand) for xTimerGenericCommand
    cmsis_os2.o(.text.osTimerDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osTimerDelete) refers to cmsis_os2.o(.text.osTimerDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreateStatic) for xEventGroupCreateStatic
    cmsis_os2.o(.text.osEventFlagsNew) refers to event_groups.o(.text.xEventGroupCreate) for xEventGroupCreate
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew) refers to cmsis_os2.o(.text.osEventFlagsNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsSet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for xEventGroupSetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsSet) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet) refers to cmsis_os2.o(.text.osEventFlagsSet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsClear) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for xEventGroupClearBitsFromISR
    cmsis_os2.o(.text.osEventFlagsClear) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear) refers to cmsis_os2.o(.text.osEventFlagsClear) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for xEventGroupGetBitsFromISR
    cmsis_os2.o(.text.osEventFlagsGet) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet) refers to cmsis_os2.o(.text.osEventFlagsGet) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsWait) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsWait) refers to event_groups.o(.text.xEventGroupWaitBits) for xEventGroupWaitBits
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait) refers to cmsis_os2.o(.text.osEventFlagsWait) for [Anonymous Symbol]
    cmsis_os2.o(.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osEventFlagsDelete) refers to event_groups.o(.text.vEventGroupDelete) for vEventGroupDelete
    cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete) refers to cmsis_os2.o(.text.osEventFlagsDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutexStatic) for xQueueCreateMutexStatic
    cmsis_os2.o(.text.osMutexNew) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    cmsis_os2.o(.ARM.exidx.text.osMutexNew) refers to cmsis_os2.o(.text.osMutexNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueTakeMutexRecursive) for xQueueTakeMutexRecursive
    cmsis_os2.o(.text.osMutexAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osMutexAcquire) refers to cmsis_os2.o(.text.osMutexAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGiveMutexRecursive) for xQueueGiveMutexRecursive
    cmsis_os2.o(.text.osMutexRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMutexRelease) refers to cmsis_os2.o(.text.osMutexRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexGetOwner) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexGetOwner) refers to queue.o(.text.xQueueGetMutexHolder) for xQueueGetMutexHolder
    cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner) refers to cmsis_os2.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMutexDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMutexDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMutexDelete) refers to cmsis_os2.o(.text.osMutexDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osSemaphoreNew) refers to queue.o(.text.xQueueCreateCountingSemaphore) for xQueueCreateCountingSemaphore
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew) refers to cmsis_os2.o(.text.osSemaphoreNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osSemaphoreAcquire) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire) refers to cmsis_os2.o(.text.osSemaphoreAcquire) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osSemaphoreRelease) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease) refers to cmsis_os2.o(.text.osSemaphoreRelease) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osSemaphoreGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount) refers to cmsis_os2.o(.text.osSemaphoreGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osSemaphoreDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete) refers to cmsis_os2.o(.text.osSemaphoreDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    cmsis_os2.o(.text.osMessageQueueNew) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew) refers to cmsis_os2.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueuePut) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    cmsis_os2.o(.text.osMessageQueuePut) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut) refers to cmsis_os2.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGet) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMessageQueueGet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet) refers to cmsis_os2.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to cmsis_os2.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to cmsis_os2.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMessageQueueGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount) refers to cmsis_os2.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueGetSpace) refers to queue.o(.text.uxQueueSpacesAvailable) for uxQueueSpacesAvailable
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to cmsis_os2.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueReset) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueReset) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset) refers to cmsis_os2.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMessageQueueDelete) refers to queue.o(.text.vQueueDelete) for vQueueDelete
    cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete) refers to cmsis_os2.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    cmsis_os2.o(.text.osMemoryPoolNew) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for xQueueCreateCountingSemaphoreStatic
    cmsis_os2.o(.text.osMemoryPoolNew) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew) refers to cmsis_os2.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName) refers to cmsis_os2.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.AllocBlock) for AllocBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.CreateBlock) for CreateBlock
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolAlloc) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to cmsis_os2.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.AllocBlock) refers to cmsis_os2.o(.text.AllocBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.CreateBlock) refers to cmsis_os2.o(.text.CreateBlock) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.FreeBlock) for FreeBlock
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.text.osMemoryPoolFree) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree) refers to cmsis_os2.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.FreeBlock) refers to cmsis_os2.o(.text.FreeBlock) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to cmsis_os2.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to cmsis_os2.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetCount) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to cmsis_os2.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for uxQueueMessagesWaitingFromISR
    cmsis_os2.o(.text.osMemoryPoolGetSpace) refers to queue.o(.text.uxQueueMessagesWaiting) for uxQueueMessagesWaiting
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to cmsis_os2.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.IRQ_Context) for IRQ_Context
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    cmsis_os2.o(.text.osMemoryPoolDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete) refers to cmsis_os2.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB) for vApplicationGetIdleTaskMemory.Idle_TCB
    cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack) for vApplicationGetIdleTaskMemory.Idle_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB) for vApplicationGetTimerTaskMemory.Timer_TCB
    cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack) for vApplicationGetTimerTaskMemory.Timer_Stack
    cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for [Anonymous Symbol]
    cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority) refers to cmsis_os2.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.__NVIC_SetPriority) refers to os_systick.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    startup_stm32f303xe.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(RESET) refers to startup_stm32f303xe.o(STACK) for __initial_sp
    startup_stm32f303xe.o(RESET) refers to startup_stm32f303xe.o(.text) for Reset_Handler
    startup_stm32f303xe.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_stm32f303xe.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_stm32f303xe.o(RESET) refers to cmsis_os2.o(.text.SysTick_Handler) for SysTick_Handler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI0_IRQHandler) for EXTI0_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI1_IRQHandler) for EXTI1_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI2_TSC_IRQHandler) for EXTI2_TSC_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI3_IRQHandler) for EXTI3_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI4_IRQHandler) for EXTI4_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI9_5_IRQHandler) for EXTI9_5_IRQHandler
    startup_stm32f303xe.o(RESET) refers to usart.o(.text.USART1_IRQHandler) for USART1_IRQHandler
    startup_stm32f303xe.o(RESET) refers to exti_irq.o(.text.EXTI15_10_IRQHandler) for EXTI15_10_IRQHandler
    startup_stm32f303xe.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup_stm32f303xe.o(.text) refers to system_stm32f3xx.o(.text.SystemInit) for SystemInit
    startup_stm32f303xe.o(.text) refers to __main.o(!!!main) for __main
    startup_stm32f303xe.o(.text) refers to startup_stm32f303xe.o(HEAP) for Heap_Mem
    startup_stm32f303xe.o(.text) refers to startup_stm32f303xe.o(STACK) for Stack_Mem
    system_stm32f3xx.o(.ARM.exidx.text.SystemInit) refers to system_stm32f3xx.o(.text.SystemInit) for [Anonymous Symbol]
    system_stm32f3xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    system_stm32f3xx.o(.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.rodata.AHBPrescTable) for AHBPrescTable
    system_stm32f3xx.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_stm32f3xx.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreateStatic) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic) refers to event_groups.o(.text.xEventGroupCreateStatic) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    event_groups.o(.text.xEventGroupCreate) refers to list.o(.text.vListInitialise) for vListInitialise
    event_groups.o(.ARM.exidx.text.xEventGroupCreate) refers to event_groups.o(.text.xEventGroupCreate) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupSync) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupSync) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupSync) refers to event_groups.o(.text.xEventGroupSync) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.xEventGroupSetBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.ARM.exidx.text.xEventGroupSetBits) refers to event_groups.o(.text.xEventGroupSetBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.xEventGroupWaitBits) refers to event_groups.o(.text.prvTestWaitCondition) for prvTestWaitCondition
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for vTaskPlaceOnUnorderedEventList
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.xEventGroupWaitBits) refers to tasks.o(.text.uxTaskResetEventItemValue) for uxTaskResetEventItemValue
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupWaitBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupWaitBits) refers to event_groups.o(.text.xEventGroupWaitBits) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.prvTestWaitCondition) refers to event_groups.o(.text.prvTestWaitCondition) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    event_groups.o(.text.xEventGroupClearBits) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    event_groups.o(.ARM.exidx.text.xEventGroupClearBits) refers to event_groups.o(.text.xEventGroupClearBits) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for vEventGroupClearBitsCallback
    event_groups.o(.text.xEventGroupClearBitsFromISR) refers to timers_1.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR) refers to event_groups.o(.text.xEventGroupClearBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.xEventGroupClearBits) for xEventGroupClearBits
    event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback) refers to event_groups.o(.text.vEventGroupClearBitsCallback) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR) refers to event_groups.o(.text.xEventGroupGetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for vTaskRemoveFromUnorderedEventList
    event_groups.o(.text.vEventGroupDelete) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    event_groups.o(.text.vEventGroupDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    event_groups.o(.ARM.exidx.text.vEventGroupDelete) refers to event_groups.o(.text.vEventGroupDelete) for [Anonymous Symbol]
    event_groups.o(.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.xEventGroupSetBits) for xEventGroupSetBits
    event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for [Anonymous Symbol]
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.vEventGroupSetBitsCallback) for vEventGroupSetBitsCallback
    event_groups.o(.text.xEventGroupSetBitsFromISR) refers to timers_1.o(.text.xTimerPendFunctionCallFromISR) for xTimerPendFunctionCallFromISR
    event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR) refers to event_groups.o(.text.xEventGroupSetBitsFromISR) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber) refers to event_groups.o(.text.uxEventGroupGetNumber) for [Anonymous Symbol]
    event_groups.o(.ARM.exidx.text.vEventGroupSetNumber) refers to event_groups.o(.text.vEventGroupSetNumber) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_stm32f3xx.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.xPortSysTickHandler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.xPortSysTickHandler) refers to port.o(.text.xPortSysTickHandler) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.pvPortCalloc) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    heap_4.o(.text.pvPortCalloc) refers to rt_memclr.o(.text) for __aeabi_memclr
    heap_4.o(.ARM.exidx.text.pvPortCalloc) refers to heap_4.o(.text.pvPortCalloc) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreateStatic) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreateStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.text.xQueueCreateMutexStatic) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutexStatic) refers to queue.o(.text.xQueueCreateMutexStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGetMutexHolder) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGetMutexHolder) refers to queue.o(.text.xQueueGetMutexHolder) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR) refers to queue.o(.text.xQueueGetMutexHolderFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic) refers to queue.o(.text.xQueueCreateCountingSemaphoreStatic) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to rt_memcpy_v6.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for uxTaskGetNumberOfTasks
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueGetQueueNumber) refers to queue.o(.text.uxQueueGetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.vQueueSetQueueNumber) refers to queue.o(.text.vQueueSetQueueNumber) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.ucQueueGetQueueType) refers to queue.o(.text.ucQueueGetQueueType) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreateStatic) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreateStatic) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreateStatic) refers to tasks.o(.text.xTaskCreateStatic) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to aeabi_memset4.o(.text) for __aeabi_memset4
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to rt_memclr.o(.text) for __aeabi_memclr
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSwitchContext) refers to cmsis_os2.o(.text.vApplicationStackOverflowHook) for vApplicationStackOverflowHook
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to cmsis_os2.o(.text.vApplicationGetIdleTaskMemory) for vApplicationGetIdleTaskMemory
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to timers_1.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.uxTaskGetSystemState) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.uxTaskGetSystemState) refers to tasks.o(.text.uxTaskGetSystemState) for [Anonymous Symbol]
    tasks.o(.text.prvListTasksWithinSingleList) refers to tasks.o(.text.vTaskGetInfo) for vTaskGetInfo
    tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList) refers to tasks.o(.text.prvListTasksWithinSingleList) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber) refers to tasks.o(.text.uxTaskGetTaskNumber) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.vTaskSetTaskNumber) refers to tasks.o(.text.vTaskSetTaskNumber) for [Anonymous Symbol]
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.eTaskGetState) for eTaskGetState
    tasks.o(.text.vTaskGetInfo) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.vTaskGetInfo) refers to tasks.o(.text.vTaskGetInfo) for [Anonymous Symbol]
    tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark) refers to tasks.o(.text.uxTaskGetStackHighWaterMark) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    timers_1.o(.text.xTimerCreateTimerTask) refers to timers_1.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers_1.o(.text.xTimerCreateTimerTask) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.xTimerCreateTimerTask) refers to cmsis_os2.o(.text.vApplicationGetTimerTaskMemory) for vApplicationGetTimerTaskMemory
    timers_1.o(.text.xTimerCreateTimerTask) refers to timers_1.o(.text.prvTimerTask) for prvTimerTask
    timers_1.o(.text.xTimerCreateTimerTask) refers to timers_1.o(.rodata.str1.1) for .L.str
    timers_1.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreateStatic) for xTaskCreateStatic
    timers_1.o(.text.xTimerCreateTimerTask) refers to timers_1.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers_1.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers_1.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage) for prvCheckForValidListAndQueue.ucStaticTimerQueueStorage
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to timers_1.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue) for prvCheckForValidListAndQueue.xStaticTimerQueue
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreateStatic) for xQueueGenericCreateStatic
    timers_1.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers_1.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers_1.o(.text.prvTimerTask) refers to timers_1.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers_1.o(.text.prvTimerTask) refers to timers_1.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers_1.o(.text.prvTimerTask) refers to timers_1.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers_1.o(.ARM.exidx.text.prvTimerTask) refers to timers_1.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers_1.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers_1.o(.text.xTimerCreate) refers to timers_1.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers_1.o(.ARM.exidx.text.xTimerCreate) refers to timers_1.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers_1.o(.text.prvInitialiseNewTimer) refers to timers_1.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers_1.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers_1.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers_1.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers_1.o(.text.xTimerCreateStatic) refers to timers_1.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers_1.o(.ARM.exidx.text.xTimerCreateStatic) refers to timers_1.o(.text.xTimerCreateStatic) for [Anonymous Symbol]
    timers_1.o(.text.xTimerGenericCommand) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers_1.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers_1.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers_1.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers_1.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers_1.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers_1.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers_1.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers_1.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers_1.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers_1.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers_1.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers_1.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers_1.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.xTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.xTimerGetReloadMode) refers to timers_1.o(.text.xTimerGetReloadMode) for [Anonymous Symbol]
    timers_1.o(.text.uxTimerGetReloadMode) refers to timers_1.o(.text.xTimerGetReloadMode) for xTimerGetReloadMode
    timers_1.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers_1.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers_1.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers_1.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers_1.o(.ARM.exidx.text.pcTimerGetName) refers to timers_1.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers_1.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers_1.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers_1.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers_1.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers_1.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers_1.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers_1.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers_1.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers_1.o(.text.xTimerPendFunctionCallFromISR) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.xTimerPendFunctionCallFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers_1.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR) refers to timers_1.o(.text.xTimerPendFunctionCallFromISR) for [Anonymous Symbol]
    timers_1.o(.text.xTimerPendFunctionCall) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.xTimerPendFunctionCall) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers_1.o(.ARM.exidx.text.xTimerPendFunctionCall) refers to timers_1.o(.text.xTimerPendFunctionCall) for [Anonymous Symbol]
    timers_1.o(.ARM.exidx.text.uxTimerGetTimerNumber) refers to timers_1.o(.text.uxTimerGetTimerNumber) for [Anonymous Symbol]
    timers_1.o(.ARM.exidx.text.vTimerSetTimerNumber) refers to timers_1.o(.text.vTimerSetTimerNumber) for [Anonymous Symbol]
    timers_1.o(.text.prvGetNextExpireTime) refers to timers_1.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers_1.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers_1.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to timers_1.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to timers_1.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to timers_1.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers_1.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers_1.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers_1.o(.text.prvProcessReceivedCommands) refers to timers_1.o(.bss.xTimerQueue) for xTimerQueue
    timers_1.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers_1.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers_1.o(.text.prvProcessReceivedCommands) refers to timers_1.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers_1.o(.text.prvProcessReceivedCommands) refers to timers_1.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers_1.o(.text.prvProcessReceivedCommands) refers to timers_1.o(.text.prvReloadTimer) for prvReloadTimer
    timers_1.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers_1.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers_1.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers_1.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers_1.o(.text.prvSampleTimeNow) refers to timers_1.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers_1.o(.text.prvSampleTimeNow) refers to timers_1.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers_1.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers_1.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers_1.o(.text.prvProcessExpiredTimer) refers to timers_1.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers_1.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers_1.o(.text.prvProcessExpiredTimer) refers to timers_1.o(.text.prvReloadTimer) for prvReloadTimer
    timers_1.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers_1.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers_1.o(.text.prvSwitchTimerLists) refers to timers_1.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers_1.o(.text.prvSwitchTimerLists) refers to timers_1.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers_1.o(.text.prvSwitchTimerLists) refers to timers_1.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers_1.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers_1.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers_1.o(.text.prvReloadTimer) refers to timers_1.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers_1.o(.ARM.exidx.text.prvReloadTimer) refers to timers_1.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers_1.o(.text.prvInsertTimerInActiveList) refers to timers_1.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers_1.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers_1.o(.text.prvInsertTimerInActiveList) refers to timers_1.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers_1.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers_1.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    rt_memcpy_v6.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset4.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to clib_arm.o(.text._platform_post_stackheap_init) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to main.o(.text.main) for main
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup_stm32f303xe.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000034) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000001) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000006) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000010) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_relocate_pie_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000035) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000027) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$0000001A) refers to libinit2.o(.ARM.Collect$$libinit$$00000011) for .ARM.Collect$$libinit$$00000011
    libinit2.o(.ARM.Collect$$libinit$$00000028) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000029) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_exit_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_command_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    sys_wrch_hlt.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch_hlt.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing rcc.o(.text), (0 bytes).
    Removing rcc.o(.text.RCC_voidInitSYSCLK), (118 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidInitSYSCLK), (8 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidEnablePeripheral), (8 bytes).
    Removing rcc.o(.text.RCC_voidDisablePeripheral), (120 bytes).
    Removing rcc.o(.ARM.exidx.text.RCC_voidDisablePeripheral), (8 bytes).
    Removing gpio.o(.text), (0 bytes).
    Removing gpio.o(.text.GPIO_init), (186 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_init), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_configurePin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_writePin), (8 bytes).
    Removing gpio.o(.text.GPIO_writePort), (112 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_writePort), (8 bytes).
    Removing gpio.o(.text.GPIO_readPin), (160 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_readPin), (8 bytes).
    Removing gpio.o(.text.GPIO_readPort), (126 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_readPort), (8 bytes).
    Removing gpio.o(.text.GPIO_togglePin), (142 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_togglePin), (8 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_setPinFuction), (8 bytes).
    Removing gpio.o(.text.GPIO_lockPin), (190 bytes).
    Removing gpio.o(.ARM.exidx.text.GPIO_lockPin), (8 bytes).
    Removing gpio.o(.rodata..L__const.GPIO_init.LOC_pinsConfigurations), (128 bytes).
    Removing nvic.o(.text), (0 bytes).
    Removing nvic.o(.ARM.exidx.text.NVIC_Init), (8 bytes).
    Removing nvic.o(.text.MNVIC__Venable_irq), (4 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC__Venable_irq), (8 bytes).
    Removing nvic.o(.text.MNVIC__Vdisable_irq), (4 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC__Vdisable_irq), (8 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuEnablePerInterrupt), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuDisablePerInterrupt), (112 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuDisablePerInterrupt), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuSetPendingFlag), (112 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuSetPendingFlag), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuClearPendingFlag), (112 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuClearPendingFlag), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuActiveFlagStatus), (146 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuActiveFlagStatus), (8 bytes).
    Removing nvic.o(.text.MNVIC_EnuSetPriorityGroup), (94 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_EnuSetPriorityGroup), (8 bytes).
    Removing nvic.o(.text.MNVIC_VSystemReset), (18 bytes).
    Removing nvic.o(.ARM.exidx.text.MNVIC_VSystemReset), (8 bytes).
    Removing pwm.o(.text), (0 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_enu_Init), (8 bytes).
    Removing pwm.o(.ARM.exidx.text.PWM_enu_SetDutyCycle), (8 bytes).
    Removing pwm.o(.rodata..L__const.PWM_enu_Init.Timx_BASE), (12 bytes).
    Removing pwm.o(.rodata..L__const.PWM_enu_SetDutyCycle.Timx_BASE), (12 bytes).
    Removing usart.o(.text), (0 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART_voidInit), (8 bytes).
    Removing usart.o(.text.MUSART1_VidSendCharSync), (62 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSendCharSync), (8 bytes).
    Removing usart.o(.text.MUSART1_VidSendStringSynch), (54 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSendStringSynch), (8 bytes).
    Removing usart.o(.text.MUSART1_u8RecCharSynch), (114 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_u8RecCharSynch), (8 bytes).
    Removing usart.o(.ARM.exidx.text.MUSART1_VidSetCallBack), (8 bytes).
    Removing usart.o(.ARM.exidx.text.USART1_IRQHandler), (8 bytes).
    Removing icu.o(.text), (0 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidInitTimer), (8 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetSensingEdge), (8 bytes).
    Removing icu.o(.text.ICU_voidSetCountTime), (32 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetCountTime), (8 bytes).
    Removing icu.o(.text.ICU_voidEnableTimer), (34 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidEnableTimer), (8 bytes).
    Removing icu.o(.text.ICU_voidGetICU_Count), (132 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetICU_Count), (8 bytes).
    Removing icu.o(.text.ICU_voidGetTimerOvStatus), (38 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetTimerOvStatus), (8 bytes).
    Removing icu.o(.text.ICU_voidClrTimerOvFlag), (34 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidClrTimerOvFlag), (8 bytes).
    Removing icu.o(.text.ICU_voidGetTimerIcuStatus), (50 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidGetTimerIcuStatus), (8 bytes).
    Removing icu.o(.text.ICU_voidSetArrTime), (32 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidSetArrTime), (8 bytes).
    Removing icu.o(.text.ICU_voidClrTimerIcuFlag), (48 bytes).
    Removing icu.o(.ARM.exidx.text.ICU_voidClrTimerIcuFlag), (8 bytes).
    Removing exti.o(.text), (0 bytes).
    Removing exti.o(.text.EXTI_enuEnableINT), (208 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuEnableINT), (8 bytes).
    Removing exti.o(.text.EXTI_enuDisableINT), (62 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuDisableINT), (8 bytes).
    Removing exti.o(.text.EXTI_enuCallBack), (54 bytes).
    Removing exti.o(.ARM.exidx.text.EXTI_enuCallBack), (8 bytes).
    Removing exti_irq.o(.text), (0 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI0_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI1_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI2_TSC_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI3_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI4_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI9_5_IRQHandler), (8 bytes).
    Removing exti_irq.o(.ARM.exidx.text.EXTI15_10_IRQHandler), (8 bytes).
    Removing motor.o(.text), (0 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_Init), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_frontMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_backMove), (8 bytes).
    Removing motor.o(.text.DCmotor_rightMove), (70 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_rightMove), (8 bytes).
    Removing motor.o(.text.DCmotor_leftMove), (70 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_leftMove), (8 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor_stop), (8 bytes).
    Removing motor.o(.text.DCmotor1_), (30 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor1_), (8 bytes).
    Removing motor.o(.text.DCmotor2_), (30 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor2_), (8 bytes).
    Removing motor.o(.text.DCmotor3_), (30 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor3_), (8 bytes).
    Removing motor.o(.text.DCmotor4_), (34 bytes).
    Removing motor.o(.ARM.exidx.text.DCmotor4_), (8 bytes).
    Removing motor.o(.bss.state), (1 bytes).
    Removing us.o(.text), (0 bytes).
    Removing us.o(.ARM.exidx.text.US_voidInit), (8 bytes).
    Removing us.o(.text.US_voidGetUSSensorDistance), (324 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistance), (8 bytes).
    Removing us.o(.text.US_voidSetTrigger), (94 bytes).
    Removing us.o(.ARM.exidx.text.US_voidSetTrigger), (8 bytes).
    Removing us.o(.text.US_voidSetICUTime), (50 bytes).
    Removing us.o(.ARM.exidx.text.US_voidSetICUTime), (8 bytes).
    Removing us.o(.text.US_voidGetTimeStatus), (18 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetTimeStatus), (8 bytes).
    Removing us.o(.text.US_voidGetICU_Distance), (64 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetICU_Distance), (8 bytes).
    Removing us.o(.text.US_voidGetUSSensorDistanceAsync), (118 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetUSSensorDistanceAsync), (8 bytes).
    Removing us.o(.text.US_voidGetDistancePolling), (344 bytes).
    Removing us.o(.ARM.exidx.text.US_voidGetDistancePolling), (8 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsync.US_flag), (1 bytes).
    Removing us.o(.bss.US_voidGetUSSensorDistanceAsync.US_TimerStatus), (1 bytes).
    Removing ble.o(.text), (0 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VInit), (8 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VGetChar), (8 bytes).
    Removing ble.o(.ARM.exidx.text.HBLE_VGetKey), (8 bytes).
    Removing clib_arm.o(.text), (0 bytes).
    Removing clib_arm.o(.ARM.exidx.text._platform_post_stackheap_init), (8 bytes).
    Removing clib_arm.o(.text.__user_perthread_libspace), (186 bytes).
    Removing clib_arm.o(.ARM.exidx.text.__user_perthread_libspace), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.os_kernel_is_active), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_initialize), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_acquire), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text.is_thread_mode), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_release), (8 bytes).
    Removing clib_arm.o(.ARM.exidx.text._mutex_free), (8 bytes).
    Removing clib_arm.o(.bss.os_libspace), (480 bytes).
    Removing clib_arm.o(.bss.os_libspace_id), (16 bytes).
    Removing cmsis_os2.o(.text), (0 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelInitialize), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing cmsis_os2.o(.text.IRQ_Context), (80 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.IRQ_Context), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetInfo), (84 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetState), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelStart), (92 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing cmsis_os2.o(.text.SVC_Setup), (14 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.SVC_Setup), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelLock), (82 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelUnlock), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelRestoreLock), (132 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickCount), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetTickFreq), (6 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerCount), (118 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing cmsis_os2.o(.text.osKernelGetSysTimerFreq), (12 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadNew), (342 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetName), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetId), (16 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetState), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetStackSpace), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSetPriority), (80 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetPriority), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadYield), (54 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadSuspend), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadResume), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadExit), (10 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadTerminate), (90 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadGetCount), (32 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadEnumerate), (176 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsSet), (182 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsClear), (134 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsGet), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osThreadFlagsWait), (286 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osDelay), (48 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing cmsis_os2.o(.text.osDelayUntil), (96 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerNew), (376 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing cmsis_os2.o(.text.TimerCallback), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.TimerCallback), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerGetName), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStart), (94 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerStop), (106 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerIsRunning), (46 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing cmsis_os2.o(.text.osTimerDelete), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsNew), (130 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsNew), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsSet), (142 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsSet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsClear), (120 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsClear), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsGet), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsGet), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsWait), (234 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsWait), (8 bytes).
    Removing cmsis_os2.o(.text.osEventFlagsDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osEventFlagsDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexNew), (254 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexAcquire), (154 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexRelease), (122 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexGetOwner), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing cmsis_os2.o(.text.osMutexDelete), (64 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreNew), (268 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreNew), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreAcquire), (166 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreAcquire), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreRelease), (136 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreRelease), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreGetCount), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osSemaphoreDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osSemaphoreDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueNew), (214 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueuePut), (196 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGet), (192 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCapacity), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetMsgSize), (34 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetCount), (58 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueGetSpace), (98 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueReset), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing cmsis_os2.o(.text.osMessageQueueDelete), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolNew), (436 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetName), (52 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolAlloc), (250 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing cmsis_os2.o(.text.AllocBlock), (38 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.AllocBlock), (8 bytes).
    Removing cmsis_os2.o(.text.CreateBlock), (50 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.CreateBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolFree), (306 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing cmsis_os2.o(.text.FreeBlock), (28 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.FreeBlock), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCapacity), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetBlockSize), (60 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetCount), (98 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolGetSpace), (88 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing cmsis_os2.o(.text.osMemoryPoolDelete), (152 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing cmsis_os2.o(.text.vApplicationGetIdleTaskMemory), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetIdleTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.text.vApplicationGetTimerTaskMemory), (42 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.vApplicationGetTimerTaskMemory), (8 bytes).
    Removing cmsis_os2.o(.text.__NVIC_SetPriority), (66 bytes).
    Removing cmsis_os2.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing cmsis_os2.o(.bss.KernelState), (4 bytes).
    Removing cmsis_os2.o(.rodata.str1.1), (17 bytes).
    Removing cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_TCB), (92 bytes).
    Removing cmsis_os2.o(.bss.vApplicationGetIdleTaskMemory.Idle_Stack), (512 bytes).
    Removing cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_TCB), (92 bytes).
    Removing cmsis_os2.o(.bss.vApplicationGetTimerTaskMemory.Timer_Stack), (320 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.text.OS_Tick_Setup), (126 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.text.__NVIC_SetPriority), (66 bytes).
    Removing os_systick.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Enable), (60 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (64 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_AcknowledgeIRQ), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetIRQn), (6 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (32 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing os_systick.o(.bss.PendST), (1 bytes).
    Removing system_stm32f3xx.o(.text), (0 bytes).
    Removing system_stm32f3xx.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_stm32f3xx.o(.text.SystemCoreClockUpdate), (282 bytes).
    Removing system_stm32f3xx.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_stm32f3xx.o(.data.SystemCoreClock), (4 bytes).
    Removing system_stm32f3xx.o(.rodata.AHBPrescTable), (16 bytes).
    Removing system_stm32f3xx.o(.rodata.APBPrescTable), (8 bytes).
    Removing freertos_evr.o(.text), (0 bytes).
    Removing event_groups.o(.text), (0 bytes).
    Removing event_groups.o(.text.xEventGroupCreateStatic), (46 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreateStatic), (8 bytes).
    Removing event_groups.o(.text.xEventGroupCreate), (50 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupCreate), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSync), (246 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSync), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBits), (224 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupWaitBits), (300 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupWaitBits), (8 bytes).
    Removing event_groups.o(.text.prvTestWaitCondition), (66 bytes).
    Removing event_groups.o(.ARM.exidx.text.prvTestWaitCondition), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBits), (42 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBits), (8 bytes).
    Removing event_groups.o(.text.xEventGroupClearBitsFromISR), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupClearBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupClearBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupClearBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupGetBitsFromISR), (58 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupGetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.vEventGroupDelete), (70 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupDelete), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetBitsCallback), (20 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetBitsCallback), (8 bytes).
    Removing event_groups.o(.text.xEventGroupSetBitsFromISR), (36 bytes).
    Removing event_groups.o(.ARM.exidx.text.xEventGroupSetBitsFromISR), (8 bytes).
    Removing event_groups.o(.text.uxEventGroupGetNumber), (34 bytes).
    Removing event_groups.o(.ARM.exidx.text.uxEventGroupGetNumber), (8 bytes).
    Removing event_groups.o(.text.vEventGroupSetNumber), (16 bytes).
    Removing event_groups.o(.ARM.exidx.text.vEventGroupSetNumber), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.text.vListInitialiseItem), (14 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.text.pxPortInitialiseStack), (94 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.text.prvTaskExitError), (38 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.text.xPortStartScheduler), (84 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.text.vPortSetupTimerInterrupt), (68 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.text.vPortEnableVFP), (20 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.text.prvPortStartFirstTask), (40 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortSysTickHandler), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.pvPortCalloc), (92 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortCalloc), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreateStatic), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutexStatic), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolder), (46 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolder), (8 bytes).
    Removing queue.o(.text.xQueueGetMutexHolderFromISR), (32 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGetMutexHolderFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphoreStatic), (76 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphoreStatic), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (210 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.text.xQueueGiveFromISR), (194 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueueReceive), (316 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.text.prvCopyDataFromQueue), (66 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (320 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (198 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueGetQueueNumber), (8 bytes).
    Removing queue.o(.text.vQueueSetQueueNumber), (16 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(.text.ucQueueGetQueueType), (14 bytes).
    Removing queue.o(.ARM.exidx.text.ucQueueGetQueueType), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.text.vQueueWaitForMessageRestricted), (100 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.text.xTaskCreateStatic), (122 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreateStatic), (8 bytes).
    Removing tasks.o(.text.prvInitialiseNewTask), (230 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.text.prvAddNewTaskToReadyList), (330 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.xTaskCreate), (166 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (254 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.text.prvDeleteTCB), (60 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.text.xTaskDelayUntil), (186 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (244 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (422 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (292 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (226 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (284 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskStartScheduler), (196 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.text.prvIdleTask), (36 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCount), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.uxTaskGetSystemState), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetSystemState), (8 bytes).
    Removing tasks.o(.text.prvListTasksWithinSingleList), (164 bytes).
    Removing tasks.o(.ARM.exidx.text.prvListTasksWithinSingleList), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnEventListRestricted), (96 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.uxTaskGetTaskNumber), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskSetTaskNumber), (28 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTaskNumber), (8 bytes).
    Removing tasks.o(.text.vTaskGetInfo), (224 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGetInfo), (8 bytes).
    Removing tasks.o(.text.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskCheckFreeStackSpace), (8 bytes).
    Removing tasks.o(.text.uxTaskGetStackHighWaterMark), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetStackHighWaterMark), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (420 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (552 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (418 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.text.prvInitialiseTaskLists), (142 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.text.prvCheckTasksWaitingTermination), (90 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing tasks.o(.rodata.uxTopUsedPriority), (4 bytes).
    Removing tasks.o(.bss.uxTaskNumber), (4 bytes).
    Removing tasks.o(.bss.xTasksWaitingTermination), (20 bytes).
    Removing tasks.o(.bss.uxDeletedTasksWaitingCleanUp), (4 bytes).
    Removing tasks.o(.rodata.str1.1), (5 bytes).
    Removing tasks.o(.bss.xIdleTaskHandle), (4 bytes).
    Removing tasks.o(.bss.xDelayedTaskList1), (20 bytes).
    Removing tasks.o(.bss.xDelayedTaskList2), (20 bytes).
    Removing timers_1.o(.text), (0 bytes).
    Removing timers_1.o(.text.xTimerCreateTimerTask), (120 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers_1.o(.text.prvCheckForValidListAndQueue), (126 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers_1.o(.text.prvTimerTask), (30 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers_1.o(.text.xTimerCreate), (74 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers_1.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers_1.o(.text.xTimerCreateStatic), (74 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerCreateStatic), (8 bytes).
    Removing timers_1.o(.text.xTimerGenericCommand), (148 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers_1.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers_1.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers_1.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers_1.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers_1.o(.text.xTimerGetReloadMode), (50 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerGetReloadMode), (8 bytes).
    Removing timers_1.o(.text.uxTimerGetReloadMode), (16 bytes).
    Removing timers_1.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers_1.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers_1.o(.text.pcTimerGetName), (16 bytes).
    Removing timers_1.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers_1.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers_1.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers_1.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers_1.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers_1.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers_1.o(.text.xTimerPendFunctionCallFromISR), (58 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerPendFunctionCallFromISR), (8 bytes).
    Removing timers_1.o(.text.xTimerPendFunctionCall), (58 bytes).
    Removing timers_1.o(.ARM.exidx.text.xTimerPendFunctionCall), (8 bytes).
    Removing timers_1.o(.text.uxTimerGetTimerNumber), (12 bytes).
    Removing timers_1.o(.ARM.exidx.text.uxTimerGetTimerNumber), (8 bytes).
    Removing timers_1.o(.text.vTimerSetTimerNumber), (16 bytes).
    Removing timers_1.o(.ARM.exidx.text.vTimerSetTimerNumber), (8 bytes).
    Removing timers_1.o(.text.prvGetNextExpireTime), (64 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers_1.o(.text.prvProcessTimerOrBlockTask), (154 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers_1.o(.text.prvProcessReceivedCommands), (324 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers_1.o(.text.prvSampleTimeNow), (68 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers_1.o(.text.prvProcessExpiredTimer), (84 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers_1.o(.text.prvSwitchTimerLists), (82 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers_1.o(.text.prvReloadTimer), (52 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers_1.o(.text.prvInsertTimerInActiveList), (134 bytes).
    Removing timers_1.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing timers_1.o(.bss.xTimerQueue), (4 bytes).
    Removing timers_1.o(.rodata.str1.1), (8 bytes).
    Removing timers_1.o(.bss.xTimerTaskHandle), (4 bytes).
    Removing timers_1.o(.bss.pxCurrentTimerList), (4 bytes).
    Removing timers_1.o(.bss.pxOverflowTimerList), (4 bytes).
    Removing timers_1.o(.bss.prvSampleTimeNow.xLastTime), (4 bytes).
    Removing timers_1.o(.bss.xActiveTimerList1), (20 bytes).
    Removing timers_1.o(.bss.xActiveTimerList2), (20 bytes).
    Removing timers_1.o(.bss.prvCheckForValidListAndQueue.xStaticTimerQueue), (80 bytes).
    Removing timers_1.o(.bss.prvCheckForValidListAndQueue.ucStaticTimerQueueStorage), (80 bytes).

665 unused section(s) (total 31504 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command_hlt.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch_hlt.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_v6.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset4.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    BLE.c                                    0x00000000   Number         0  ble.o ABSOLUTE
    EXTI.c                                   0x00000000   Number         0  exti.o ABSOLUTE
    EXTI_IRQ.c                               0x00000000   Number         0  exti_irq.o ABSOLUTE
    ICU.c                                    0x00000000   Number         0  icu.o ABSOLUTE
    NVIC.c                                   0x00000000   Number         0  nvic.o ABSOLUTE
    PWM.c                                    0x00000000   Number         0  pwm.o ABSOLUTE
    RCC.c                                    0x00000000   Number         0  rcc.o ABSOLUTE
    RTE/Device/STM32F303RETx/startup_stm32f303xe.s 0x00000000   Number         0  startup_stm32f303xe.o ABSOLUTE
    US.c                                     0x00000000   Number         0  us.o ABSOLUTE
    USART.c                                  0x00000000   Number         0  usart.o ABSOLUTE
    clib_arm.c                               0x00000000   Number         0  clib_arm.o ABSOLUTE
    cmsis_os2.c                              0x00000000   Number         0  cmsis_os2.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    event_groups.c                           0x00000000   Number         0  event_groups.o ABSOLUTE
    freertos_evr.c                           0x00000000   Number         0  freertos_evr.o ABSOLUTE
    gpio.c                                   0x00000000   Number         0  gpio.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    motor.c                                  0x00000000   Number         0  motor.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_stm32f3xx.c                       0x00000000   Number         0  system_stm32f3xx.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers_1.o ABSOLUTE
    RESET                                    0x08000000   Section      404  startup_stm32f303xe.o(RESET)
    !!!main                                  0x08000194   Section        8  __main.o(!!!main)
    !!!scatter                               0x0800019c   Section       52  __scatter.o(!!!scatter)
    !!handler_copy                           0x080001d0   Section       26  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x080001ec   Section       28  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x08000208   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000001          0x0800020a   Section        4  libinit2.o(.ARM.Collect$$libinit$$00000001)
    .ARM.Collect$$libinit$$00000004          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$00000006          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    .ARM.Collect$$libinit$$0000000C          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000010          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    .ARM.Collect$$libinit$$00000013          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$00000027          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    .ARM.Collect$$libinit$$0000002E          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000034          0x0800020e   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    .ARM.Collect$$libinit$$00000035          0x0800020e   Section        2  libinit2.o(.ARM.Collect$$libinit$$00000035)
    .ARM.Collect$$libshutdown$$00000000      0x08000210   Section        2  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x08000212   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x08000212   Section        2  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x08000214   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x08000214   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x08000214   Section        6  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000008          0x0800021a   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    .ARM.Collect$$rtentry$$0000000A          0x08000222   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x08000226   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x08000226   Section        8  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x0800022e   Section        2  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x08000230   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x08000230   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x08000234   Section        6  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    $v0                                      0x0800023c   Number         0  startup_stm32f303xe.o(.text)
    .text                                    0x0800023c   Section       64  startup_stm32f303xe.o(.text)
    .text                                    0x0800027c   Section      138  rt_memcpy_v6.o(.text)
    .text                                    0x08000306   Section        0  heapauxi.o(.text)
    .text                                    0x0800030c   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x08000370   Section       74  sys_stackheap_outer.o(.text)
    .text                                    0x080003ba   Section        0  exit.o(.text)
    .text                                    0x080003cc   Section        8  libspace.o(.text)
    .text                                    0x080003d4   Section        0  sys_exit.o(.text)
    .text                                    0x080003e0   Section        2  use_no_semi.o(.text)
    .text                                    0x080003e2   Section        0  indicate_semi.o(.text)
    [Anonymous Symbol]                       0x080003e4   Section        0  motor.o(.text.DCmotor_Init)
    [Anonymous Symbol]                       0x08000450   Section        0  motor.o(.text.DCmotor_backMove)
    [Anonymous Symbol]                       0x08000498   Section        0  motor.o(.text.DCmotor_frontMove)
    [Anonymous Symbol]                       0x080004e0   Section        0  motor.o(.text.DCmotor_stop)
    [Anonymous Symbol]                       0x08000520   Section        0  exti_irq.o(.text.EXTI0_IRQHandler)
    [Anonymous Symbol]                       0x08000530   Section        0  exti_irq.o(.text.EXTI15_10_IRQHandler)
    [Anonymous Symbol]                       0x08000660   Section        0  exti_irq.o(.text.EXTI1_IRQHandler)
    [Anonymous Symbol]                       0x08000670   Section        0  exti_irq.o(.text.EXTI2_TSC_IRQHandler)
    [Anonymous Symbol]                       0x08000680   Section        0  exti_irq.o(.text.EXTI3_IRQHandler)
    [Anonymous Symbol]                       0x08000690   Section        0  exti_irq.o(.text.EXTI4_IRQHandler)
    [Anonymous Symbol]                       0x080006a0   Section        0  exti_irq.o(.text.EXTI9_5_IRQHandler)
    [Anonymous Symbol]                       0x080007a0   Section        0  gpio.o(.text.GPIO_configurePin)
    [Anonymous Symbol]                       0x08000964   Section        0  gpio.o(.text.GPIO_setPinFuction)
    [Anonymous Symbol]                       0x08000a5c   Section        0  gpio.o(.text.GPIO_writePin)
    HBLE_VGetChar                            0x08000b1d   Thumb Code    20  ble.o(.text.HBLE_VGetChar)
    [Anonymous Symbol]                       0x08000b1c   Section        0  ble.o(.text.HBLE_VGetChar)
    [Anonymous Symbol]                       0x08000b30   Section        0  ble.o(.text.HBLE_VGetKey)
    [Anonymous Symbol]                       0x08000c18   Section        0  ble.o(.text.HBLE_VInit)
    [Anonymous Symbol]                       0x08000c70   Section        0  icu.o(.text.ICU_voidInitTimer)
    [Anonymous Symbol]                       0x08000da0   Section        0  icu.o(.text.ICU_voidSetSensingEdge)
    [Anonymous Symbol]                       0x08000e94   Section        0  nvic.o(.text.MNVIC_EnuEnablePerInterrupt)
    [Anonymous Symbol]                       0x08000f04   Section        0  usart.o(.text.MUSART1_VidSetCallBack)
    [Anonymous Symbol]                       0x08000f20   Section        0  usart.o(.text.MUSART_voidInit)
    [Anonymous Symbol]                       0x080011dc   Section        0  nvic.o(.text.NVIC_Init)
    [Anonymous Symbol]                       0x080011f0   Section        0  pwm.o(.text.PWM_enu_Init)
    [Anonymous Symbol]                       0x08001588   Section        0  pwm.o(.text.PWM_enu_SetDutyCycle)
    [Anonymous Symbol]                       0x08001690   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x080016f0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x080016f4   Section        0  rcc.o(.text.RCC_voidEnablePeripheral)
    [Anonymous Symbol]                       0x08001770   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x08001790   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x08001794   Section        0  cmsis_os2.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x080017b4   Section        0  system_stm32f3xx.o(.text.SystemInit)
    [Anonymous Symbol]                       0x080017c8   Section        0  usart.o(.text.USART1_IRQHandler)
    [Anonymous Symbol]                       0x08001804   Section        0  us.o(.text.US_voidInit)
    __tagsym$$used.1                         0x0800185c   Number         0  clib_arm.o(.text._mutex_acquire)
    [Anonymous Symbol]                       0x0800185c   Section        0  clib_arm.o(.text._mutex_acquire)
    __tagsym$$used.3                         0x08001884   Number         0  clib_arm.o(.text._mutex_free)
    [Anonymous Symbol]                       0x08001884   Section        0  clib_arm.o(.text._mutex_free)
    __tagsym$$used.0                         0x080018d8   Number         0  clib_arm.o(.text._mutex_initialize)
    [Anonymous Symbol]                       0x080018d8   Section        0  clib_arm.o(.text._mutex_initialize)
    __tagsym$$used.2                         0x08001980   Number         0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x08001980   Section        0  clib_arm.o(.text._mutex_release)
    [Anonymous Symbol]                       0x080019ac   Section        0  clib_arm.o(.text._platform_post_stackheap_init)
    is_thread_mode                           0x080019b1   Thumb Code    32  clib_arm.o(.text.is_thread_mode)
    [Anonymous Symbol]                       0x080019b0   Section        0  clib_arm.o(.text.is_thread_mode)
    [Anonymous Symbol]                       0x080019d0   Section        0  main.o(.text.main)
    os_kernel_is_active                      0x08001a59   Thumb Code    32  clib_arm.o(.text.os_kernel_is_active)
    [Anonymous Symbol]                       0x08001a58   Section        0  clib_arm.o(.text.os_kernel_is_active)
    prvAddCurrentTaskToDelayedList           0x08001a79   Thumb Code   250  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x08001a78   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvCopyDataToQueue                       0x08001b75   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x08001b74   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvGetDisinheritPriorityAfterTimeout     0x08001c41   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x08001c40   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvHeapInit                              0x08001c69   Thumb Code   174  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x08001c68   Section        0  heap_4.o(.text.prvHeapInit)
    prvInitialiseMutex                       0x08001d19   Thumb Code    44  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x08001d18   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x08001d45   Thumb Code    72  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x08001d44   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInsertBlockIntoFreeList               0x08001d8d   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x08001d8c   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvIsQueueEmpty                          0x08001e55   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x08001e54   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x08001e7d   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x08001e7c   Section        0  queue.o(.text.prvIsQueueFull)
    prvResetNextTaskUnblockTime              0x08001ead   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x08001eac   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvUnlockQueue                           0x08001ee9   Thumb Code   174  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08001ee8   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x08001f98   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x08002120   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x0800214c   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x08002194   Section        0  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    [Anonymous Symbol]                       0x080021a0   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x080021d0   Section        0  list.o(.text.vListInsert)
    [Anonymous Symbol]                       0x0800223c   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x0800226c   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x08002294   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x0800230c   Section        0  queue.o(.text.vQueueDelete)
    [Anonymous Symbol]                       0x08002330   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x08002354   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x08002364   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x0800238c   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x080024b8   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x080024c8   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x080024c8   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x080025cc   Section        0  port.o(.text.xPortSysTickHandler)
    [Anonymous Symbol]                       0x08002608   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x08002630   Section        0  queue.o(.text.xQueueCreateMutexStatic)
    [Anonymous Symbol]                       0x08002664   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x080026ec   Section        0  queue.o(.text.xQueueGenericCreateStatic)
    [Anonymous Symbol]                       0x08002758   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x08002814   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x08002954   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x08002adc   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x08002b78   Section        0  tasks.o(.text.xTaskGetSchedulerState)
    [Anonymous Symbol]                       0x08002bb0   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x08002d98   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x08002e80   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x08002fd0   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x0800314c   Section        0  tasks.o(.text.xTaskResumeAll)
    $v0                                      0x0800333c   Number         0  fpinit.o(x$fpl$fpinit)
    x$fpl$fpinit                             0x0800333c   Section       26  fpinit.o(x$fpl$fpinit)
    .L__const.GPIO_init.LOC_ptr2GPIOx        0x08003358   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_configurePin.LOC_ptr2GPIOx 0x08003378   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_writePin.LOC_ptr2GPIOx    0x08003398   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_writePort.LOC_ptr2GPIOx   0x080033b8   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_readPin.LOC_ptr2GPIOx     0x080033d8   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_readPort.LOC_ptr2GPIOx    0x080033f8   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_togglePin.LOC_ptr2GPIOx   0x08003418   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_setPinFuction.LOC_ptr2GPIOx 0x08003438   Data          32  gpio.o(.rodata.cst32)
    .L__const.GPIO_lockPin.LOC_ptr2GPIOx     0x08003458   Data          32  gpio.o(.rodata.cst32)
    uxCriticalNesting                        0x20000038   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000038   Section        0  port.o(.data.uxCriticalNesting)
    .bss                                     0x20000040   Section       96  libspace.o(.bss)
    clib_mutex_cb                            0x200000e4   Data         400  clib_arm.o(.bss.clib_mutex_cb)
    [Anonymous Symbol]                       0x200000e4   Section        0  clib_arm.o(.bss.clib_mutex_cb)
    clib_mutex_id                            0x20000274   Data          20  clib_arm.o(.bss.clib_mutex_id)
    [Anonymous Symbol]                       0x20000274   Section        0  clib_arm.o(.bss.clib_mutex_id)
    __tagsym$$used.1                         0x20000288   Number         0  tasks.o(.bss.pxCurrentTCB)
    pxDelayedTaskList                        0x2000028c   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x2000028c   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000290   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000290   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000294   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000294   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxReadyTasksLists                        0x20000298   Data        1120  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000298   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x200006f8   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x200006f8   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x200026f8   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x200026f8   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxSchedulerSuspended                     0x200026fc   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x200026fc   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTopReadyPriority                       0x20002700   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002700   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xFreeBytesRemaining                      0x20002704   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002704   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xMinimumEverFreeBytesRemaining           0x20002708   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002708   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x2000270c   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x2000270c   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002710   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002710   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002714   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002714   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002718   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002718   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x2000271c   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x2000271c   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002720   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002720   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002734   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002734   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002738   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002738   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002740   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002740   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTickCount                               0x20002754   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002754   Section        0  tasks.o(.bss.xTickCount)
    xYieldPending                            0x20002758   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002758   Section        0  tasks.o(.bss.xYieldPending)
    Heap_Mem                                 0x20002760   Data         512  startup_stm32f303xe.o(HEAP)
    HEAP                                     0x20002760   Section      512  startup_stm32f303xe.o(HEAP)
    Stack_Mem                                0x20002960   Data        1024  startup_stm32f303xe.o(STACK)
    STACK                                    0x20002960   Section     1024  startup_stm32f303xe.o(STACK)
    __initial_sp                             0x20002d60   Data           0  startup_stm32f303xe.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __arm_relocate_pie_                       - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    __Vectors_Size                           0x00000194   Number         0  startup_stm32f303xe.o ABSOLUTE
    __Vectors                                0x08000000   Data           4  startup_stm32f303xe.o(RESET)
    __Vectors_End                            0x08000194   Data           0  startup_stm32f303xe.o(RESET)
    __main                                   0x08000195   Thumb Code     8  __main.o(!!!main)
    __scatterload                            0x0800019d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0800019d   Thumb Code    44  __scatter.o(!!!scatter)
    __scatterload_rt2_thumb_only             0x0800019d   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_null                       0x080001ab   Thumb Code     0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x080001d1   Thumb Code    26  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x080001ed   Thumb Code    28  __scatter_zi.o(!!handler_zi)
    __rt_lib_init                            0x08000209   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_fp_1                       0x0800020b   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000001)
    __rt_lib_init_alloca_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_argv_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_atexit_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_clock_1                    0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_cpp_1                      0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000034)
    __rt_lib_init_exceptions_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_fp_trap_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_getenv_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_heap_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    __rt_lib_init_lc_collate_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_ctype_1                 0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_monetary_1              0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_numeric_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_lc_time_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_preinit_1                  0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000006)
    __rt_lib_init_rand_1                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000010)
    __rt_lib_init_relocate_pie_1             0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_return                     0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000035)
    __rt_lib_init_signal_1                   0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_stdio_1                    0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000027)
    __rt_lib_init_user_alloc_1               0x0800020f   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_shutdown                        0x08000211   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x08000213   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x08000215   Thumb Code     0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x08000215   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x08000215   Thumb Code     0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_postsh_1                      0x0800021b   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$00000008)
    __rt_entry_li                            0x08000223   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_main                          0x08000227   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x08000227   Thumb Code     0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    __rt_exit                                0x0800022f   Thumb Code     0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x08000231   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x08000235   Thumb Code     0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    Reset_Handler                            0x0800023d   Thumb Code     8  startup_stm32f303xe.o(.text)
    NMI_Handler                              0x08000245   Thumb Code     2  startup_stm32f303xe.o(.text)
    HardFault_Handler                        0x08000247   Thumb Code     2  startup_stm32f303xe.o(.text)
    MemManage_Handler                        0x08000249   Thumb Code     2  startup_stm32f303xe.o(.text)
    BusFault_Handler                         0x0800024b   Thumb Code     2  startup_stm32f303xe.o(.text)
    UsageFault_Handler                       0x0800024d   Thumb Code     2  startup_stm32f303xe.o(.text)
    DebugMon_Handler                         0x08000251   Thumb Code     2  startup_stm32f303xe.o(.text)
    ADC1_2_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    ADC3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    ADC4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    CAN_RX1_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    CAN_SCE_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP1_2_3_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP4_5_6_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    COMP7_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel1_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel2_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel3_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel4_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel5_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel6_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA1_Channel7_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel1_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel2_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel3_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel4_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    DMA2_Channel5_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FLASH_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FMC_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    FPU_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C1_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C1_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C2_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C2_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C3_ER_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    I2C3_EV_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    PVD_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RCC_IRQHandler                           0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RTC_Alarm_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    RTC_WKUP_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI1_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI2_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    SPI4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TAMP_STAMP_IRQHandler                    0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_BRK_TIM15_IRQHandler                0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_CC_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_TRG_COM_TIM17_IRQHandler            0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM1_UP_TIM16_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_BRK_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_CC_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_TRG_COM_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM20_UP_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM2_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM3_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM4_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM6_DAC_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM7_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_BRK_IRQHandler                      0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_CC_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_TRG_COM_IRQHandler                  0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    TIM8_UP_IRQHandler                       0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    UART4_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    UART5_IRQHandler                         0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USART2_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USART3_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USBWakeUp_IRQHandler                     0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USBWakeUp_RMP_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_HP_CAN_TX_IRQHandler                 0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_HP_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_LP_CAN_RX0_IRQHandler                0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    USB_LP_IRQHandler                        0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    WWDG_IRQHandler                          0x08000257   Thumb Code     0  startup_stm32f303xe.o(.text)
    __user_initial_stackheap                 0x08000259   Thumb Code     0  startup_stm32f303xe.o(.text)
    __aeabi_memcpy                           0x0800027d   Thumb Code     0  rt_memcpy_v6.o(.text)
    __rt_memcpy                              0x0800027d   Thumb Code   138  rt_memcpy_v6.o(.text)
    _memcpy_lastbytes                        0x080002e3   Thumb Code     0  rt_memcpy_v6.o(.text)
    __use_two_region_memory                  0x08000307   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x08000309   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x0800030b   Thumb Code     2  heapauxi.o(.text)
    __aeabi_memcpy4                          0x0800030d   Thumb Code     0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x0800030d   Thumb Code     0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x0800030d   Thumb Code   100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x08000355   Thumb Code     0  rt_memcpy_w.o(.text)
    __user_setup_stackheap                   0x08000371   Thumb Code    74  sys_stackheap_outer.o(.text)
    exit                                     0x080003bb   Thumb Code    18  exit.o(.text)
    __user_libspace                          0x080003cd   Thumb Code     8  libspace.o(.text)
    __user_perproc_libspace                  0x080003cd   Thumb Code     0  libspace.o(.text)
    _sys_exit                                0x080003d5   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x080003e1   Thumb Code     0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x080003e1   Thumb Code     2  use_no_semi.o(.text)
    __semihosting_library_function           0x080003e3   Thumb Code     0  indicate_semi.o(.text)
    DCmotor_Init                             0x080003e5   Thumb Code   108  motor.o(.text.DCmotor_Init)
    DCmotor_backMove                         0x08000451   Thumb Code    70  motor.o(.text.DCmotor_backMove)
    DCmotor_frontMove                        0x08000499   Thumb Code    70  motor.o(.text.DCmotor_frontMove)
    DCmotor_stop                             0x080004e1   Thumb Code    62  motor.o(.text.DCmotor_stop)
    EXTI0_IRQHandler                         0x08000521   Thumb Code    16  exti_irq.o(.text.EXTI0_IRQHandler)
    EXTI15_10_IRQHandler                     0x08000531   Thumb Code   304  exti_irq.o(.text.EXTI15_10_IRQHandler)
    EXTI1_IRQHandler                         0x08000661   Thumb Code    16  exti_irq.o(.text.EXTI1_IRQHandler)
    EXTI2_TSC_IRQHandler                     0x08000671   Thumb Code    16  exti_irq.o(.text.EXTI2_TSC_IRQHandler)
    EXTI3_IRQHandler                         0x08000681   Thumb Code    16  exti_irq.o(.text.EXTI3_IRQHandler)
    EXTI4_IRQHandler                         0x08000691   Thumb Code    16  exti_irq.o(.text.EXTI4_IRQHandler)
    EXTI9_5_IRQHandler                       0x080006a1   Thumb Code   254  exti_irq.o(.text.EXTI9_5_IRQHandler)
    GPIO_configurePin                        0x080007a1   Thumb Code   450  gpio.o(.text.GPIO_configurePin)
    GPIO_setPinFuction                       0x08000965   Thumb Code   246  gpio.o(.text.GPIO_setPinFuction)
    GPIO_writePin                            0x08000a5d   Thumb Code   192  gpio.o(.text.GPIO_writePin)
    HBLE_VGetKey                             0x08000b31   Thumb Code   232  ble.o(.text.HBLE_VGetKey)
    HBLE_VInit                               0x08000c19   Thumb Code    88  ble.o(.text.HBLE_VInit)
    ICU_voidInitTimer                        0x08000c71   Thumb Code   304  icu.o(.text.ICU_voidInitTimer)
    ICU_voidSetSensingEdge                   0x08000da1   Thumb Code   244  icu.o(.text.ICU_voidSetSensingEdge)
    MNVIC_EnuEnablePerInterrupt              0x08000e95   Thumb Code   112  nvic.o(.text.MNVIC_EnuEnablePerInterrupt)
    MUSART1_VidSetCallBack                   0x08000f05   Thumb Code    28  usart.o(.text.MUSART1_VidSetCallBack)
    MUSART_voidInit                          0x08000f21   Thumb Code   700  usart.o(.text.MUSART_voidInit)
    NVIC_Init                                0x080011dd   Thumb Code    20  nvic.o(.text.NVIC_Init)
    PWM_enu_Init                             0x080011f1   Thumb Code   920  pwm.o(.text.PWM_enu_Init)
    PWM_enu_SetDutyCycle                     0x08001589   Thumb Code   252  pwm.o(.text.PWM_enu_SetDutyCycle)
    PendSV_Handler                           0x08001691   Thumb Code   100  port.o(.text.PendSV_Handler)
    RCC_voidEnablePeripheral                 0x080016f5   Thumb Code   120  rcc.o(.text.RCC_voidEnablePeripheral)
    SVC_Handler                              0x08001771   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x08001795   Thumb Code    30  cmsis_os2.o(.text.SysTick_Handler)
    SystemInit                               0x080017b5   Thumb Code    18  system_stm32f3xx.o(.text.SystemInit)
    USART1_IRQHandler                        0x080017c9   Thumb Code    58  usart.o(.text.USART1_IRQHandler)
    US_voidInit                              0x08001805   Thumb Code    88  us.o(.text.US_voidInit)
    _mutex_acquire                           0x0800185d   Thumb Code    40  clib_arm.o(.text._mutex_acquire)
    _mutex_free                              0x08001885   Thumb Code    84  clib_arm.o(.text._mutex_free)
    _mutex_initialize                        0x080018d9   Thumb Code   168  clib_arm.o(.text._mutex_initialize)
    _mutex_release                           0x08001981   Thumb Code    42  clib_arm.o(.text._mutex_release)
    _platform_post_stackheap_init            0x080019ad   Thumb Code     2  clib_arm.o(.text._platform_post_stackheap_init)
    main                                     0x080019d1   Thumb Code   136  main.o(.text.main)
    pvPortMalloc                             0x08001f99   Thumb Code   390  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x08002121   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    uxListRemove                             0x0800214d   Thumb Code    72  list.o(.text.uxListRemove)
    vApplicationStackOverflowHook            0x08002195   Thumb Code    10  cmsis_os2.o(.text.vApplicationStackOverflowHook)
    vListInitialise                          0x080021a1   Thumb Code    46  list.o(.text.vListInitialise)
    vListInsert                              0x080021d1   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x0800223d   Thumb Code    48  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x0800226d   Thumb Code    38  port.o(.text.vPortExitCritical)
    vPortFree                                0x08002295   Thumb Code   118  heap_4.o(.text.vPortFree)
    vQueueDelete                             0x0800230d   Thumb Code    34  queue.o(.text.vQueueDelete)
    vTaskInternalSetTimeOutState             0x08002331   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x08002355   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x08002365   Thumb Code    38  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPriorityDisinheritAfterTimeout      0x0800238d   Thumb Code   300  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskSuspendAll                          0x080024b9   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x080024c9   Thumb Code   260  tasks.o(.text.vTaskSwitchContext)
    xPortSysTickHandler                      0x080025cd   Thumb Code    60  port.o(.text.xPortSysTickHandler)
    xQueueCreateMutex                        0x08002609   Thumb Code    38  queue.o(.text.xQueueCreateMutex)
    xQueueCreateMutexStatic                  0x08002631   Thumb Code    50  queue.o(.text.xQueueCreateMutexStatic)
    xQueueGenericCreate                      0x08002665   Thumb Code   134  queue.o(.text.xQueueGenericCreate)
    xQueueGenericCreateStatic                0x080026ed   Thumb Code   108  queue.o(.text.xQueueGenericCreateStatic)
    xQueueGenericReset                       0x08002759   Thumb Code   186  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x08002815   Thumb Code   318  queue.o(.text.xQueueGenericSend)
    xQueueSemaphoreTake                      0x08002955   Thumb Code   392  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x08002add   Thumb Code   154  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskGetSchedulerState                   0x08002b79   Thumb Code    56  tasks.o(.text.xTaskGetSchedulerState)
    xTaskIncrementTick                       0x08002bb1   Thumb Code   488  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x08002d99   Thumb Code   230  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x08002e81   Thumb Code   334  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x08002fd1   Thumb Code   380  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x0800314d   Thumb Code   496  tasks.o(.text.xTaskResumeAll)
    _fp_init                                 0x0800333d   Thumb Code    26  fpinit.o(x$fpl$fpinit)
    __fplib_config_fpu_vfp                   0x08003355   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    __fplib_config_pureend_doubles           0x08003355   Thumb Code     0  fpinit.o(x$fpl$fpinit)
    Region$$Table$$Base                      0x08003478   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08003498   Number         0  anon$$obj.o(Region$$Table)
    G_Key                                    0x20000000   Data           1  ble.o(.data.G_Key)
    Timer                                    0x20000004   Data          12  icu.o(.data.Timer)
    UART                                     0x20000010   Data          10  ble.o(.data.UART)
    UART_PIN_RX                              0x2000001a   Data           4  ble.o(.data.UART_PIN_RX)
    UART_PIN_TX                              0x2000001e   Data           4  ble.o(.data.UART_PIN_TX)
    input1PinBack                            0x20000022   Data           4  motor.o(.data.input1PinBack)
    input1PinFront                           0x20000026   Data           4  motor.o(.data.input1PinFront)
    input2PinBack                            0x2000002a   Data           4  motor.o(.data.input2PinBack)
    input2PinFront                           0x2000002e   Data           4  motor.o(.data.input2PinFront)
    test                                     0x20000032   Data           4  pwm.o(.data.test)
    __libspace_start                         0x20000040   Data          96  libspace.o(.bss)
    Call_Ptr                                 0x200000a0   Data          60  exti.o(.bss.Call_Ptr)
    __temporary_stack_top$libspace           0x200000a0   Data           0  libspace.o(.bss)
    Dist                                     0x200000dc   Data           4  main.o(.bss.Dist)
    MUSART1_CallBack                         0x200000e0   Data           4  usart.o(.bss.MUSART1_CallBack)
    pxCurrentTCB                             0x20000288   Data           4  tasks.o(.bss.pxCurrentTCB)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0800023d

  Load Region LR_1 (Base: 0x08000000, Size: 0x000034d4, Max: 0xffffffff, ABSOLUTE)

    Execution Region ER_RO (Exec base: 0x08000000, Load base: 0x08000000, Size: 0x00003498, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x08000000   0x00000194   Data   RO          483    RESET               startup_stm32f303xe.o
    0x08000194   0x08000194   0x00000008   Code   RO          943  * !!!main             c_w.l(__main.o)
    0x0800019c   0x0800019c   0x00000034   Code   RO         1110    !!!scatter          c_w.l(__scatter.o)
    0x080001d0   0x080001d0   0x0000001a   Code   RO         1112    !!handler_copy      c_w.l(__scatter_copy.o)
    0x080001ea   0x080001ea   0x00000002   PAD
    0x080001ec   0x080001ec   0x0000001c   Code   RO         1114    !!handler_zi        c_w.l(__scatter_zi.o)
    0x08000208   0x08000208   0x00000002   Code   RO          972    .ARM.Collect$$libinit$$00000000  c_w.l(libinit.o)
    0x0800020a   0x0800020a   0x00000004   Code   RO          978    .ARM.Collect$$libinit$$00000001  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO          981    .ARM.Collect$$libinit$$00000004  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO          983    .ARM.Collect$$libinit$$00000006  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO          986    .ARM.Collect$$libinit$$0000000C  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO          988    .ARM.Collect$$libinit$$0000000E  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO          990    .ARM.Collect$$libinit$$00000010  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO          993    .ARM.Collect$$libinit$$00000013  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO          995    .ARM.Collect$$libinit$$00000015  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO          997    .ARM.Collect$$libinit$$00000017  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO          999    .ARM.Collect$$libinit$$00000019  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1001    .ARM.Collect$$libinit$$0000001B  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1003    .ARM.Collect$$libinit$$0000001D  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1005    .ARM.Collect$$libinit$$0000001F  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1007    .ARM.Collect$$libinit$$00000021  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1009    .ARM.Collect$$libinit$$00000023  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1011    .ARM.Collect$$libinit$$00000025  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1013    .ARM.Collect$$libinit$$00000027  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1017    .ARM.Collect$$libinit$$0000002E  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1019    .ARM.Collect$$libinit$$00000030  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1021    .ARM.Collect$$libinit$$00000032  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000000   Code   RO         1023    .ARM.Collect$$libinit$$00000034  c_w.l(libinit2.o)
    0x0800020e   0x0800020e   0x00000002   Code   RO         1024    .ARM.Collect$$libinit$$00000035  c_w.l(libinit2.o)
    0x08000210   0x08000210   0x00000002   Code   RO         1046    .ARM.Collect$$libshutdown$$00000000  c_w.l(libshutdown.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1061    .ARM.Collect$$libshutdown$$00000002  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1063    .ARM.Collect$$libshutdown$$00000004  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1066    .ARM.Collect$$libshutdown$$00000007  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1069    .ARM.Collect$$libshutdown$$0000000A  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1071    .ARM.Collect$$libshutdown$$0000000C  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000000   Code   RO         1074    .ARM.Collect$$libshutdown$$0000000F  c_w.l(libshutdown2.o)
    0x08000212   0x08000212   0x00000002   Code   RO         1075    .ARM.Collect$$libshutdown$$00000010  c_w.l(libshutdown2.o)
    0x08000214   0x08000214   0x00000000   Code   RO          945    .ARM.Collect$$rtentry$$00000000  c_w.l(__rtentry.o)
    0x08000214   0x08000214   0x00000000   Code   RO          951    .ARM.Collect$$rtentry$$00000002  c_w.l(__rtentry2.o)
    0x08000214   0x08000214   0x00000006   Code   RO          963    .ARM.Collect$$rtentry$$00000004  c_w.l(__rtentry4.o)
    0x0800021a   0x0800021a   0x00000008   Code   RO          952    .ARM.Collect$$rtentry$$00000008  c_w.l(__rtentry2.o)
    0x08000222   0x08000222   0x00000004   Code   RO          954    .ARM.Collect$$rtentry$$0000000A  c_w.l(__rtentry2.o)
    0x08000226   0x08000226   0x00000000   Code   RO          956    .ARM.Collect$$rtentry$$0000000C  c_w.l(__rtentry2.o)
    0x08000226   0x08000226   0x00000008   Code   RO          957    .ARM.Collect$$rtentry$$0000000D  c_w.l(__rtentry2.o)
    0x0800022e   0x0800022e   0x00000002   Code   RO          976    .ARM.Collect$$rtexit$$00000000  c_w.l(rtexit.o)
    0x08000230   0x08000230   0x00000000   Code   RO         1026    .ARM.Collect$$rtexit$$00000002  c_w.l(rtexit2.o)
    0x08000230   0x08000230   0x00000004   Code   RO         1027    .ARM.Collect$$rtexit$$00000003  c_w.l(rtexit2.o)
    0x08000234   0x08000234   0x00000006   Code   RO         1028    .ARM.Collect$$rtexit$$00000004  c_w.l(rtexit2.o)
    0x0800023a   0x0800023a   0x00000002   PAD
    0x0800023c   0x0800023c   0x00000040   Code   RO          484  * .text               startup_stm32f303xe.o
    0x0800027c   0x0800027c   0x0000008a   Code   RO          935    .text               c_w.l(rt_memcpy_v6.o)
    0x08000306   0x08000306   0x00000006   Code   RO          941    .text               c_w.l(heapauxi.o)
    0x0800030c   0x0800030c   0x00000064   Code   RO          946    .text               c_w.l(rt_memcpy_w.o)
    0x08000370   0x08000370   0x0000004a   Code   RO          965    .text               c_w.l(sys_stackheap_outer.o)
    0x080003ba   0x080003ba   0x00000012   Code   RO          967    .text               c_w.l(exit.o)
    0x080003cc   0x080003cc   0x00000008   Code   RO          973    .text               c_w.l(libspace.o)
    0x080003d4   0x080003d4   0x0000000c   Code   RO         1036    .text               c_w.l(sys_exit.o)
    0x080003e0   0x080003e0   0x00000002   Code   RO         1051    .text               c_w.l(use_no_semi.o)
    0x080003e2   0x080003e2   0x00000000   Code   RO         1053    .text               c_w.l(indicate_semi.o)
    0x080003e2   0x080003e2   0x00000002   PAD
    0x080003e4   0x080003e4   0x0000006c   Code   RO          176    .text.DCmotor_Init  motor.o
    0x08000450   0x08000450   0x00000046   Code   RO          180    .text.DCmotor_backMove  motor.o
    0x08000496   0x08000496   0x00000002   PAD
    0x08000498   0x08000498   0x00000046   Code   RO          178    .text.DCmotor_frontMove  motor.o
    0x080004de   0x080004de   0x00000002   PAD
    0x080004e0   0x080004e0   0x0000003e   Code   RO          186    .text.DCmotor_stop  motor.o
    0x0800051e   0x0800051e   0x00000002   PAD
    0x08000520   0x08000520   0x00000010   Code   RO          155    .text.EXTI0_IRQHandler  exti_irq.o
    0x08000530   0x08000530   0x00000130   Code   RO          167    .text.EXTI15_10_IRQHandler  exti_irq.o
    0x08000660   0x08000660   0x00000010   Code   RO          157    .text.EXTI1_IRQHandler  exti_irq.o
    0x08000670   0x08000670   0x00000010   Code   RO          159    .text.EXTI2_TSC_IRQHandler  exti_irq.o
    0x08000680   0x08000680   0x00000010   Code   RO          161    .text.EXTI3_IRQHandler  exti_irq.o
    0x08000690   0x08000690   0x00000010   Code   RO          163    .text.EXTI4_IRQHandler  exti_irq.o
    0x080006a0   0x080006a0   0x000000fe   Code   RO          165    .text.EXTI9_5_IRQHandler  exti_irq.o
    0x0800079e   0x0800079e   0x00000002   PAD
    0x080007a0   0x080007a0   0x000001c2   Code   RO           27    .text.GPIO_configurePin  gpio.o
    0x08000962   0x08000962   0x00000002   PAD
    0x08000964   0x08000964   0x000000f6   Code   RO           39    .text.GPIO_setPinFuction  gpio.o
    0x08000a5a   0x08000a5a   0x00000002   PAD
    0x08000a5c   0x08000a5c   0x000000c0   Code   RO           29    .text.GPIO_writePin  gpio.o
    0x08000b1c   0x08000b1c   0x00000014   Code   RO          235    .text.HBLE_VGetChar  ble.o
    0x08000b30   0x08000b30   0x000000e8   Code   RO          237    .text.HBLE_VGetKey  ble.o
    0x08000c18   0x08000c18   0x00000058   Code   RO          233    .text.HBLE_VInit    ble.o
    0x08000c70   0x08000c70   0x00000130   Code   RO          113    .text.ICU_voidInitTimer  icu.o
    0x08000da0   0x08000da0   0x000000f4   Code   RO          115    .text.ICU_voidSetSensingEdge  icu.o
    0x08000e94   0x08000e94   0x00000070   Code   RO           58    .text.MNVIC_EnuEnablePerInterrupt  nvic.o
    0x08000f04   0x08000f04   0x0000001c   Code   RO          101    .text.MUSART1_VidSetCallBack  usart.o
    0x08000f20   0x08000f20   0x000002bc   Code   RO           93    .text.MUSART_voidInit  usart.o
    0x080011dc   0x080011dc   0x00000014   Code   RO           52    .text.NVIC_Init     nvic.o
    0x080011f0   0x080011f0   0x00000398   Code   RO           79    .text.PWM_enu_Init  pwm.o
    0x08001588   0x08001588   0x000000fc   Code   RO           81    .text.PWM_enu_SetDutyCycle  pwm.o
    0x08001684   0x08001684   0x0000000c   PAD
    0x08001690   0x08001690   0x00000064   Code   RO          580    .text.PendSV_Handler  port.o
    0x080016f4   0x080016f4   0x00000078   Code   RO           14    .text.RCC_voidEnablePeripheral  rcc.o
    0x0800176c   0x0800176c   0x00000004   PAD
    0x08001770   0x08001770   0x00000024   Code   RO          564    .text.SVC_Handler   port.o
    0x08001794   0x08001794   0x0000001e   Code   RO          277    .text.SysTick_Handler  cmsis_os2.o
    0x080017b2   0x080017b2   0x00000002   PAD
    0x080017b4   0x080017b4   0x00000012   Code   RO          491    .text.SystemInit    system_stm32f3xx.o
    0x080017c6   0x080017c6   0x00000002   PAD
    0x080017c8   0x080017c8   0x0000003a   Code   RO          103    .text.USART1_IRQHandler  usart.o
    0x08001802   0x08001802   0x00000002   PAD
    0x08001804   0x08001804   0x00000058   Code   RO          208    .text.US_voidInit   us.o
    0x0800185c   0x0800185c   0x00000028   Code   RO          258    .text._mutex_acquire  clib_arm.o
    0x08001884   0x08001884   0x00000054   Code   RO          264    .text._mutex_free   clib_arm.o
    0x080018d8   0x080018d8   0x000000a8   Code   RO          256    .text._mutex_initialize  clib_arm.o
    0x08001980   0x08001980   0x0000002a   Code   RO          262    .text._mutex_release  clib_arm.o
    0x080019aa   0x080019aa   0x00000002   PAD
    0x080019ac   0x080019ac   0x00000002   Code   RO          250    .text._platform_post_stackheap_init  clib_arm.o
    0x080019ae   0x080019ae   0x00000002   PAD
    0x080019b0   0x080019b0   0x00000020   Code   RO          260    .text.is_thread_mode  clib_arm.o
    0x080019d0   0x080019d0   0x00000088   Code   RO            2    .text.main          main.o
    0x08001a58   0x08001a58   0x00000020   Code   RO          254    .text.os_kernel_is_active  clib_arm.o
    0x08001a78   0x08001a78   0x000000fa   Code   RO          723    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x08001b72   0x08001b72   0x00000002   PAD
    0x08001b74   0x08001b74   0x000000cc   Code   RO          654    .text.prvCopyDataToQueue  queue.o
    0x08001c40   0x08001c40   0x00000026   Code   RO          670    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x08001c66   0x08001c66   0x00000002   PAD
    0x08001c68   0x08001c68   0x000000ae   Code   RO          594    .text.prvHeapInit   heap_4.o
    0x08001d16   0x08001d16   0x00000002   PAD
    0x08001d18   0x08001d18   0x0000002c   Code   RO          634    .text.prvInitialiseMutex  queue.o
    0x08001d44   0x08001d44   0x00000048   Code   RO          628    .text.prvInitialiseNewQueue  queue.o
    0x08001d8c   0x08001d8c   0x000000c6   Code   RO          596    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x08001e52   0x08001e52   0x00000002   PAD
    0x08001e54   0x08001e54   0x00000028   Code   RO          668    .text.prvIsQueueEmpty  queue.o
    0x08001e7c   0x08001e7c   0x0000002e   Code   RO          656    .text.prvIsQueueFull  queue.o
    0x08001eaa   0x08001eaa   0x00000002   PAD
    0x08001eac   0x08001eac   0x0000003c   Code   RO          715    .text.prvResetNextTaskUnblockTime  tasks.o
    0x08001ee8   0x08001ee8   0x000000ae   Code   RO          658    .text.prvUnlockQueue  queue.o
    0x08001f96   0x08001f96   0x00000002   PAD
    0x08001f98   0x08001f98   0x00000186   Code   RO          592    .text.pvPortMalloc  heap_4.o
    0x0800211e   0x0800211e   0x00000002   PAD
    0x08002120   0x08002120   0x0000002c   Code   RO          809    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x0800214c   0x0800214c   0x00000048   Code   RO          551    .text.uxListRemove  list.o
    0x08002194   0x08002194   0x0000000a   Code   RO          433    .text.vApplicationStackOverflowHook  cmsis_os2.o
    0x0800219e   0x0800219e   0x00000002   PAD
    0x080021a0   0x080021a0   0x0000002e   Code   RO          543    .text.vListInitialise  list.o
    0x080021ce   0x080021ce   0x00000002   PAD
    0x080021d0   0x080021d0   0x0000006a   Code   RO          549    .text.vListInsert   list.o
    0x0800223a   0x0800223a   0x00000002   PAD
    0x0800223c   0x0800223c   0x00000030   Code   RO          576    .text.vPortEnterCritical  port.o
    0x0800226c   0x0800226c   0x00000026   Code   RO          578    .text.vPortExitCritical  port.o
    0x08002292   0x08002292   0x00000002   PAD
    0x08002294   0x08002294   0x00000076   Code   RO          598    .text.vPortFree     heap_4.o
    0x0800230a   0x0800230a   0x00000002   PAD
    0x0800230c   0x0800230c   0x00000022   Code   RO          684    .text.vQueueDelete  queue.o
    0x0800232e   0x0800232e   0x00000002   PAD
    0x08002330   0x08002330   0x00000024   Code   RO          781    .text.vTaskInternalSetTimeOutState  tasks.o
    0x08002354   0x08002354   0x0000000e   Code   RO          785    .text.vTaskMissedYield  tasks.o
    0x08002362   0x08002362   0x00000002   PAD
    0x08002364   0x08002364   0x00000026   Code   RO          769    .text.vTaskPlaceOnEventList  tasks.o
    0x0800238a   0x0800238a   0x00000002   PAD
    0x0800238c   0x0800238c   0x0000012c   Code   RO          805    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x080024b8   0x080024b8   0x00000010   Code   RO          721    .text.vTaskSuspendAll  tasks.o
    0x080024c8   0x080024c8   0x00000104   Code   RO          739    .text.vTaskSwitchContext  tasks.o
    0x080025cc   0x080025cc   0x0000003c   Code   RO          582    .text.xPortSysTickHandler  port.o
    0x08002608   0x08002608   0x00000026   Code   RO          632    .text.xQueueCreateMutex  queue.o
    0x0800262e   0x0800262e   0x00000002   PAD
    0x08002630   0x08002630   0x00000032   Code   RO          636    .text.xQueueCreateMutexStatic  queue.o
    0x08002662   0x08002662   0x00000002   PAD
    0x08002664   0x08002664   0x00000086   Code   RO          630    .text.xQueueGenericCreate  queue.o
    0x080026ea   0x080026ea   0x00000002   PAD
    0x080026ec   0x080026ec   0x0000006c   Code   RO          626    .text.xQueueGenericCreateStatic  queue.o
    0x08002758   0x08002758   0x000000ba   Code   RO          624    .text.xQueueGenericReset  queue.o
    0x08002812   0x08002812   0x00000002   PAD
    0x08002814   0x08002814   0x0000013e   Code   RO          644    .text.xQueueGenericSend  queue.o
    0x08002952   0x08002952   0x00000002   PAD
    0x08002954   0x08002954   0x00000188   Code   RO          648    .text.xQueueSemaphoreTake  queue.o
    0x08002adc   0x08002adc   0x0000009a   Code   RO          783    .text.xTaskCheckForTimeOut  tasks.o
    0x08002b76   0x08002b76   0x00000002   PAD
    0x08002b78   0x08002b78   0x00000038   Code   RO          799    .text.xTaskGetSchedulerState  tasks.o
    0x08002bb0   0x08002bb0   0x000001e8   Code   RO          753    .text.xTaskIncrementTick  tasks.o
    0x08002d98   0x08002d98   0x000000e6   Code   RO          803    .text.xTaskPriorityDisinherit  tasks.o
    0x08002e7e   0x08002e7e   0x00000002   PAD
    0x08002e80   0x08002e80   0x0000014e   Code   RO          801    .text.xTaskPriorityInherit  tasks.o
    0x08002fce   0x08002fce   0x00000002   PAD
    0x08002fd0   0x08002fd0   0x0000017c   Code   RO          775    .text.xTaskRemoveFromEventList  tasks.o
    0x0800314c   0x0800314c   0x000001f0   Code   RO          725    .text.xTaskResumeAll  tasks.o
    0x0800333c   0x0800333c   0x0000001a   Code   RO         1034    x$fpl$fpinit        fz_wm.l(fpinit.o)
    0x08003356   0x08003356   0x00000002   PAD
    0x08003358   0x08003358   0x00000120   Data   RO           43    .rodata.cst32       gpio.o
    0x08003478   0x08003478   0x00000020   Data   RO         1109    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x20000000, Load base: 0x08003498, Size: 0x0000003c, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x08003498   0x00000001   Data   RW          239    .data.G_Key         ble.o
    0x20000001   0x08003499   0x00000003   PAD
    0x20000004   0x0800349c   0x0000000c   Data   RW          133    .data.Timer         icu.o
    0x20000010   0x080034a8   0x0000000a   Data   RW          242    .data.UART          ble.o
    0x2000001a   0x080034b2   0x00000004   Data   RW          241    .data.UART_PIN_RX   ble.o
    0x2000001e   0x080034b6   0x00000004   Data   RW          240    .data.UART_PIN_TX   ble.o
    0x20000022   0x080034ba   0x00000004   Data   RW          196    .data.input1PinBack  motor.o
    0x20000026   0x080034be   0x00000004   Data   RW          197    .data.input1PinFront  motor.o
    0x2000002a   0x080034c2   0x00000004   Data   RW          198    .data.input2PinBack  motor.o
    0x2000002e   0x080034c6   0x00000004   Data   RW          199    .data.input2PinFront  motor.o
    0x20000032   0x080034ca   0x00000004   Data   RW           83    .data.test          pwm.o
    0x20000036   0x080034ce   0x00000002   PAD
    0x20000038   0x080034d0   0x00000004   Data   RW          584    .data.uxCriticalNesting  port.o


    Execution Region ER_ZI (Exec base: 0x20000040, Load base: 0x080034d4, Size: 0x00002d20, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000040        -       0x00000060   Zero   RW          974    .bss                c_w.l(libspace.o)
    0x200000a0        -       0x0000003c   Zero   RW          147    .bss.Call_Ptr       exti.o
    0x200000dc        -       0x00000004   Zero   RW            4    .bss.Dist           main.o
    0x200000e0        -       0x00000004   Zero   RW          105    .bss.MUSART1_CallBack  usart.o
    0x200000e4        -       0x00000190   Zero   RW          269    .bss.clib_mutex_cb  clib_arm.o
    0x20000274        -       0x00000014   Zero   RW          268    .bss.clib_mutex_id  clib_arm.o
    0x20000288        -       0x00000004   Zero   RW          829    .bss.pxCurrentTCB   tasks.o
    0x2000028c        -       0x00000004   Zero   RW          837    .bss.pxDelayedTaskList  tasks.o
    0x20000290        -       0x00000004   Zero   RW          610    .bss.pxEnd          heap_4.o
    0x20000294        -       0x00000004   Zero   RW          838    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000298        -       0x00000460   Zero   RW          840    .bss.pxReadyTasksLists  tasks.o
    0x200006f8        -       0x00002000   Zero   RW          616    .bss.ucHeap         heap_4.o
    0x200026f8        -       0x00000004   Zero   RW          834    .bss.uxCurrentNumberOfTasks  tasks.o
    0x200026fc        -       0x00000004   Zero   RW          842    .bss.uxSchedulerSuspended  tasks.o
    0x20002700        -       0x00000004   Zero   RW          841    .bss.uxTopReadyPriority  tasks.o
    0x20002704        -       0x00000004   Zero   RW          611    .bss.xFreeBytesRemaining  heap_4.o
    0x20002708        -       0x00000004   Zero   RW          613    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x2000270c        -       0x00000004   Zero   RW          847    .bss.xNextTaskUnblockTime  tasks.o
    0x20002710        -       0x00000004   Zero   RW          849    .bss.xNumOfOverflows  tasks.o
    0x20002714        -       0x00000004   Zero   RW          614    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002718        -       0x00000004   Zero   RW          615    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x2000271c        -       0x00000004   Zero   RW          848    .bss.xPendedTicks   tasks.o
    0x20002720        -       0x00000014   Zero   RW          844    .bss.xPendingReadyList  tasks.o
    0x20002734        -       0x00000004   Zero   RW          835    .bss.xSchedulerRunning  tasks.o
    0x20002738        -       0x00000008   Zero   RW          612    .bss.xStart         heap_4.o
    0x20002740        -       0x00000014   Zero   RW          839    .bss.xSuspendedTaskList  tasks.o
    0x20002754        -       0x00000004   Zero   RW          836    .bss.xTickCount     tasks.o
    0x20002758        -       0x00000004   Zero   RW          843    .bss.xYieldPending  tasks.o
    0x2000275c   0x080034d4   0x00000004   PAD
    0x20002760        -       0x00000200   Zero   RW          482    HEAP                startup_stm32f303xe.o
    0x20002960        -       0x00000400   Zero   RW          481    STACK               startup_stm32f303xe.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       340         22          0         19          0       2792   ble.o
       400          0          0          0        420       3778   clib_arm.o
        40          0          0          0          0      33010   cmsis_os2.o
         0          0          0          0         60       1392   exti.o
       638          0          0          0          0       1315   exti_irq.o
       888          0        288          0          0       5264   gpio.o
       880          0          0          0       8220       4368   heap_4.o
       548          4          0         12          0       2650   icu.o
       224          0          0          0          0       2316   list.o
       136          0          0          0          4        554   main.o
       310          0          0         16          0       3215   motor.o
       132          0          0          0          0       2644   nvic.o
       282          8          0          4          0       2811   port.o
      1172          8          0          4          0       3414   pwm.o
      1878          0          0          0          0      14275   queue.o
       120          0          0          0          0       1315   rcc.o
        64         26        404          0       1536        884   startup_stm32f303xe.o
        18          0          0          0          0       2220   system_stm32f3xx.o
      3156          0          0          0       1208      23073   tasks.o
        88          0          0          0          0       3706   us.o
       786          8          0          0          4       2868   usart.o

    ----------------------------------------------------------------------
     12184         76        724         60      11456     117864   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        84          0          0          5          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        20          0          0          0          0          0   __rtentry2.o
         6          0          0          0          0          0   __rtentry4.o
        52          8          0          0          0          0   __scatter.o
        26          0          0          0          0          0   __scatter_copy.o
        28          0          0          0          0          0   __scatter_zi.o
        18          0          0          0          0         80   exit.o
         6          0          0          0          0        152   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
         2          0          0          0          0          0   libinit.o
         6          0          0          0          0          0   libinit2.o
         2          0          0          0          0          0   libshutdown.o
         2          0          0          0          0          0   libshutdown2.o
         8          4          0          0         96         68   libspace.o
       138          0          0          0          0         68   rt_memcpy_v6.o
       100          0          0          0          0         80   rt_memcpy_w.o
         2          0          0          0          0          0   rtexit.o
        10          0          0          0          0          0   rtexit2.o
        12          4          0          0          0         68   sys_exit.o
        74          0          0          0          0         80   sys_stackheap_outer.o
         2          0          0          0          0         68   use_no_semi.o
        26          0          0          0          0        116   fpinit.o

    ----------------------------------------------------------------------
       556         16          0          0         96        848   Library Totals
         8          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       522         16          0          0         96        732   c_w.l
        26          0          0          0          0        116   fz_wm.l

    ----------------------------------------------------------------------
       556         16          0          0         96        848   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     12740         92        724         60      11552     118092   Grand Totals
     12740         92        724         60      11552     118092   ELF Image Totals
     12740         92        724         60          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                13464 (  13.15kB)
    Total RW  Size (RW Data + ZI Data)             11612 (  11.34kB)
    Total ROM Size (Code + RO Data + RW Data)      13524 (  13.21kB)

==============================================================================

